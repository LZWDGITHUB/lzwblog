[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class F{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const h=r*i;t:for(const u of e.keys())if(u===_){const d=o[h-1];d<=s&&n.set(c,[e.get(u),d])}else{let d=r;for(let a=0;a<u.length;++a,++d){const m=u[a],g=i*d,y=g-i;let l=o[g];const f=Math.max(0,d-s-1),w=Math.min(i-1,d+s);for(let p=f;p<w;++p){const C=m!==t[p],S=o[y+p]+ +C,I=o[y+p+1]+1,x=o[g+p]+1,k=o[g+p+1]=Math.min(S,I,x);k<l&&(l=k)}if(l>s)continue t}q(e.get(u),t,s,n,o,d,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=M(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new F(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=v(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return v(this._tree,t)?.has(_)??!1}keys(){return new F(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new F(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const M=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),M(e.get(n),t.slice(n.length),s);return s.push([e,t]),M(void 0,"",s)},v=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return v(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const h=e.get(r);if(c===r.length)e=h;else{const u=new Map;u.set(r.slice(c),h),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=M(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",dt=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,ht=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);B(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},lt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-c+c*n/o)))},ft=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},at=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,ht),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,h,u=new Map)=>{if(r==null)return u;for(const d of Object.keys(i)){const a=i[d],m=e._fieldIds[d],g=r.get(m);if(g==null)continue;let y=g.size;const l=e._avgFieldLength[m];for(const f of g.keys()){if(!e._documentIds.has(f)){at(e,m,f,s),y-=1;continue}const w=c?c(e._documentIds.get(f),s,e._storedFields.get(f)):1;if(!w)continue;const p=g.get(f),C=e._fieldLength.get(f)[m],S=lt(p,y,e._documentCount,C,l,h),I=n*o*a*w*S,x=u.get(f);if(x){x.score+=I,dt(x.terms,t);const k=G(x.match,s);k?k.push(d):x.match[s]=[d]}else u.set(f,{score:I,terms:[t],match:{[s]:[d]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:h}=n,{fuzzy:u,prefix:d}={...Y.weights,...i},a=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,a,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(c,Math.round(t.term.length*l)):l;f&&(y=e._index.fuzzyGet(t.term,f))}if(g)for(const[l,f]of g){const w=l.length-t.term.length;if(!w)continue;y?.delete(l);const p=d*l.length/(l.length+.3*w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}if(y)for(const l of y.keys()){const[f,w]=y.get(l);if(!w)continue;const p=u*l.length/(l.length+w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const d={...s,...t,queries:void 0},a=t.queries.map(m=>X(e,m,d));return Q(a,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:h}=i,u=c(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>xt(e,d,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:h,terms:u,match:d}]of r){const a=u.length||1,m={id:e._documentIds.get(c),score:h*a,terms:Object.keys(d),queryTerms:u,match:d};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(P),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),h=n.get(c);h!=null?(h.score+=r,h.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:h}]of n)o.push({suggestion:r,terms:c,score:i/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const kt=e=>new bt(e),It=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},Mt=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=It(e,t);i._documentIds=O(n),i._fieldLength=O(o),i._storedFields=O(r);for(const[c,h]of i._documentIds)i._idToShortId.set(h,c);for(const[c,h]of s){const u=new Map;for(const d of Object.keys(h))u.set(parseInt(d,10),O(h[d]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,d=!1)=>{let a;i===0?a=u.length>20?`… ${u.slice(-20)}`:u:d?a=u.length+i>100?`${u.slice(0,100-i)}… `:u:a=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,a&&o.push(a),i+=a.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(c(e.slice(r,h)),r=u,i>100)break;h=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Ot=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ct=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,h=r.includes("@"),u=r.includes("#"),[d,a]=r.split(/[#@]/),m=Number(d),g=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(w=>!w.includes(l))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:a,display:g.map(l=>o.c.map(f=>V(f,l))).flat().filter(l=>l!==null)},c]);else{const l=g.map(f=>V(o.h,f)).filter(f=>f!==null);if(l.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:a},display:l},c]),"t"in o&&o.t)for(const f of o.t){const w=g.map(p=>V(f,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:a},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Ot(o,r):Ct(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},St=st($(JSON.parse("{\"/\":{\"documentCount\":166,\"nextId\":166,\"documentIds\":{\"0\":\"0\",\"1\":\"0@0\",\"2\":\"0@1\",\"3\":\"2\",\"4\":\"2@0\",\"5\":\"2@1\",\"6\":\"3\",\"7\":\"3#项目node版本\",\"8\":\"3#项目启动\",\"9\":\"3#项目更新\",\"10\":\"3@0\",\"11\":\"3@1\",\"12\":\"4\",\"13\":\"4#_1-1-【性能的提升】\",\"14\":\"4#_1-2-【-源码的升级】\",\"15\":\"4#_1-3-【拥抱-typescript】\",\"16\":\"4#_1-4-【新的特性】\",\"17\":\"4#_2-1-【基于-vue-cli-创建】\",\"18\":\"4#_2-2-【基于-vite-创建】-推荐\",\"19\":\"4#_2-3-【一个简单的效果】\",\"20\":\"4#_3-1-【optionsapi-与-compositionapi】\",\"21\":\"4#options-api-的弊端\",\"22\":\"4#composition-api-的优势\",\"23\":\"4#_3-2-【拉开序幕的-setup】\",\"24\":\"4#setup-概述\",\"25\":\"4#setup-的返回值\",\"26\":\"4#setup-与-options-api-的关系\",\"27\":\"4#setup-语法糖\",\"28\":\"4#_3-3-【ref-创建-基本类型的响应式数据】\",\"29\":\"4#_3-4-【reactive-创建-对象类型的响应式数据】\",\"30\":\"4#_3-5-【ref-创建-对象类型的响应式数据】\",\"31\":\"4#_3-6-【ref-对比-reactive】\",\"32\":\"4#_3-7-【torefs-与-toref】\",\"33\":\"4#_3-8-【computed】\",\"34\":\"4#_3-9-【watch】\",\"35\":\"4#情况一\",\"36\":\"4#情况二\",\"37\":\"4#情况三\",\"38\":\"4#情况四\",\"39\":\"4#情况五\",\"40\":\"4#_3-10-【watcheffect】\",\"41\":\"4#_3-11-【标签的-ref-属性】\",\"42\":\"4#_3-12-【props】\",\"43\":\"4#_3-13-【生命周期】\",\"44\":\"4#_3-14-【自定义-hook】\",\"45\":\"4#_4-1-【对路由的理解】\",\"46\":\"4#_4-2-【基本切换效果】\",\"47\":\"4#_4-3-【两个注意点】\",\"48\":\"4#_4-4-【路由器工作模式】\",\"49\":\"4#_4-5-【to-的两种写法】\",\"50\":\"4#_4-6-【命名路由】\",\"51\":\"4#_4-7-【嵌套路由】\",\"52\":\"4#_4-8-【路由传参】\",\"53\":\"4#query-参数\",\"54\":\"4#params-参数\",\"55\":\"4#_4-9-【路由的-props-配置】\",\"56\":\"4#_4-10-【-replace-属性】\",\"57\":\"4#_4-11-【编程式导航】\",\"58\":\"4#_4-12-【重定向】\",\"59\":\"4#_5-1【准备一个效果】\",\"60\":\"4#_5-2【搭建-pinia-环境】\",\"61\":\"4#_5-3【存储-读取数据】\",\"62\":\"4#_5-4-【修改数据】-三种方式\",\"63\":\"4#_5-5-【storetorefs】\",\"64\":\"4#_5-6-【getters】\",\"65\":\"4#_5-7-【-subscribe】\",\"66\":\"4#_5-8-【store-组合式写法】\",\"67\":\"4#_6-1-【props】\",\"68\":\"4#_6-2-【自定义事件】\",\"69\":\"4#_6-3-【mitt】\",\"70\":\"4#_6-4-【v-model】\",\"71\":\"4#_6-5-【-attrs-】\",\"72\":\"4#_6-6-【-refs、-parent】\",\"73\":\"4#_6-7-【provide、inject】\",\"74\":\"4#_2-具名插槽\",\"75\":\"4#_3-作用域插槽\",\"76\":\"4#_7-1-【shallowref-与-shallowreactive-】\",\"77\":\"4#shallowref\",\"78\":\"4#shallowreactive\",\"79\":\"4#总结\",\"80\":\"4#_7-2-【readonly-与-shallowreadonly】\",\"81\":\"4#readonly\",\"82\":\"4#shallowreadonly\",\"83\":\"4#_7-3-【toraw-与-markraw】\",\"84\":\"4#toraw\",\"85\":\"4#markraw\",\"86\":\"4#_7-4-【customref】\",\"87\":\"4#_8-1-【teleport】\",\"88\":\"4#_8-2-【suspense】\",\"89\":\"4#_8-3-【全局-api-转移到应用对象】\",\"90\":\"4#_8-4-【其他】\",\"91\":\"4@0\",\"92\":\"4@1\",\"93\":\"5\",\"94\":\"5#_01-小程序-起步\",\"95\":\"5@0\",\"96\":\"5@1\",\"97\":\"6\",\"98\":\"6#查看远程仓库的路径\",\"99\":\"6#ios端微信公众号页面获取签名与权限的坑\",\"100\":\"6@0\",\"101\":\"6@1\",\"102\":\"7\",\"103\":\"7#一、flex-布局是什么\",\"104\":\"7#二、基本概念\",\"105\":\"7#三、容器的属性\",\"106\":\"7#_3-1-flex-direction属性\",\"107\":\"7#_3-2-flex-wrap属性\",\"108\":\"7#_3-3-flex-flow\",\"109\":\"7#_3-4-justify-content属性\",\"110\":\"7#_3-5-align-items属性\",\"111\":\"7#_3-6-align-content属性\",\"112\":\"7#四、项目的属性\",\"113\":\"7#_4-1-order属性\",\"114\":\"7#_4-2-flex-grow属性\",\"115\":\"7#_4-3-flex-shrink属性\",\"116\":\"7#_4-4-flex-basis属性\",\"117\":\"7#_4-5-flex属性\",\"118\":\"7#_4-6-align-self属性\",\"119\":\"7@0\",\"120\":\"7@1\",\"121\":\"8\",\"122\":\"8#一、概述\",\"123\":\"8#二、基本概念\",\"124\":\"8#_2-1-容器和项目\",\"125\":\"8#_2-2-行和列\",\"126\":\"8#_2-3-单元格\",\"127\":\"8#_2-4-网格线\",\"128\":\"8#三、容器属性\",\"129\":\"8#_3-1-display-属性\",\"130\":\"8#_3-2-grid-template-columns-属性-grid-template-rows-属性\",\"131\":\"8#_3-3-grid-row-gap-属性-grid-column-gap-属性-grid-gap-属性\",\"132\":\"8#_3-4-grid-template-areas-属性\",\"133\":\"8#_3-5-grid-auto-flow-属性\",\"134\":\"8#_3-6-justify-items-属性-align-items-属性-place-items-属性\",\"135\":\"8#_3-7-justify-content-属性-align-content-属性-place-content-属性\",\"136\":\"8#_3-8-grid-auto-columns-属性-grid-auto-rows-属性\",\"137\":\"8#_3-9-grid-template-属性-grid-属性\",\"138\":\"8#四、项目属性\",\"139\":\"8#_4-1-grid-column-start-属性-grid-column-end-属性-grid-row-start-属性-grid-row-end-属性\",\"140\":\"8#_4-2-grid-column-属性-grid-row-属性\",\"141\":\"8#_4-3-grid-area-属性\",\"142\":\"8#_4-4-justify-self-属性-align-self-属性-place-self-属性\",\"143\":\"8@0\",\"144\":\"8@1\",\"145\":\"9\",\"146\":\"9@0\",\"147\":\"9@1\",\"148\":\"10\",\"149\":\"10@0\",\"150\":\"10@1\",\"151\":\"11\",\"152\":\"11@0\",\"153\":\"11@1\",\"154\":\"12\",\"155\":\"12#后台线上访问地址\",\"156\":\"12#代码路径\",\"157\":\"12#接口文档\",\"158\":\"12#相关文档\",\"159\":\"12@0\",\"160\":\"12@1\",\"161\":\"13\",\"162\":\"14\",\"163\":\"15\",\"164\":\"16\",\"165\":\"17\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1,2],\"4\":[null,null,1],\"5\":[null,null,1],\"6\":[1,1],\"7\":[1,10],\"8\":[1,4],\"9\":[1,6],\"10\":[null,null,1],\"11\":[null,null,3],\"12\":[1,31],\"13\":[3,5],\"14\":[4,4],\"15\":[5,2],\"16\":[4,19],\"17\":[7,48],\"18\":[6,124],\"19\":[4,45],\"20\":[6,6],\"21\":[3,14],\"22\":[3,6],\"23\":[5],\"24\":[2,75],\"25\":[2,14],\"26\":[5,10],\"27\":[2,80],\"28\":[5,75],\"29\":[6,90],\"30\":[6,82],\"31\":[6,23],\"32\":[6,61],\"33\":[4,69],\"34\":[4,13],\"35\":[2,58],\"36\":[2,87],\"37\":[2,76],\"38\":[2,99],\"39\":[2,72],\"40\":[4,93],\"41\":[6,82],\"42\":[4,79],\"43\":[4,85],\"44\":[5,106],\"45\":[4],\"46\":[4,65],\"47\":[4,11],\"48\":[3,23],\"49\":[5,17],\"50\":[4,33],\"51\":[4,58],\"52\":[4],\"53\":[2,39],\"54\":[2,43],\"55\":[6,32],\"56\":[5,12],\"57\":[4,18],\"58\":[4,8],\"59\":[4],\"60\":[6,24],\"61\":[4,81],\"62\":[5,44],\"63\":[3,36],\"64\":[4,42],\"65\":[4,21],\"66\":[5,62],\"67\":[4,62],\"68\":[4,42],\"69\":[4,60],\"70\":[5,73],\"71\":[4,86],\"72\":[4,15],\"73\":[5,108],\"74\":[2,43],\"75\":[2,63],\"76\":[6],\"77\":[1,13],\"78\":[1,13],\"79\":[1,13],\"80\":[6],\"81\":[1,18],\"82\":[1,17],\"83\":[6],\"84\":[1,52],\"85\":[1,28],\"86\":[4,36],\"87\":[4,28],\"88\":[4,36],\"89\":[6,7],\"90\":[4,29],\"91\":[null,null,1],\"92\":[null,null,3],\"93\":[1,1],\"94\":[3],\"95\":[null,null,1],\"96\":[null,null,3],\"97\":[1],\"98\":[1,3],\"99\":[1,16],\"100\":[null,null,1],\"101\":[null,null,1],\"102\":[2,24],\"103\":[4,28],\"104\":[2,31],\"105\":[2,9],\"106\":[4,19],\"107\":[4,24],\"108\":[3,13],\"109\":[4,26],\"110\":[4,23],\"111\":[4,28],\"112\":[2,8],\"113\":[3,8],\"114\":[4,20],\"115\":[4,22],\"116\":[3,19],\"117\":[3,23],\"118\":[4,24],\"119\":[null,null,1],\"120\":[null,null,3],\"121\":[2,2],\"122\":[2,39],\"123\":[2,5],\"124\":[3,24],\"125\":[2,11],\"126\":[3,11],\"127\":[3,21],\"128\":[2,8],\"129\":[4,25],\"130\":[7,137],\"131\":[6,34],\"132\":[6,56],\"133\":[6,56],\"134\":[7,37],\"135\":[7,46],\"136\":[7,36],\"137\":[5,15],\"138\":[2,2],\"139\":[8,66],\"140\":[6,40],\"141\":[5,24],\"142\":[6,40],\"143\":[null,null,1],\"144\":[null,null,3],\"145\":[1,48],\"146\":[null,null,1],\"147\":[null,null,4],\"148\":[2],\"149\":[null,null,1],\"150\":[null,null,4],\"151\":[2,8],\"152\":[null,null,1],\"153\":[null,null,3],\"154\":[1],\"155\":[1,1],\"156\":[1,6],\"157\":[1,6],\"158\":[1,24],\"159\":[null,null,1],\"160\":[null,null,3],\"161\":[1,3],\"162\":[1],\"163\":[1],\"164\":[1],\"165\":[1]},\"averageFieldLength\":[3.350593920799401,34.158263674052165,1.1142594865137687],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"c\":[\"其他\"]},\"2\":{\"c\":[\"简历\"]},\"3\":{\"h\":\"好用的网站与工具\",\"t\":[\"BiliBiliGiteeGitHub微信公众平台蓝湖gitee掘金iconfont魔戒比特虫-在线制作ico图标\"]},\"4\":{\"c\":[\"链接\"]},\"5\":{\"c\":[\"外链\"]},\"6\":{\"h\":\"博客\",\"t\":[\"VuePress\"]},\"7\":{\"h\":\"项目node版本\",\"t\":[\"// 当前项目需要最小18.19.0 // 查看已经安装的node版本 nvm ls // 切换到指定版本 nvm use 版本号\"]},\"8\":{\"h\":\"项目启动\",\"t\":[\"npm run docs:dev\"]},\"9\":{\"h\":\"项目更新\",\"t\":[\"进入项目根目录，右键打开Git Bash，输入：\",\"./deploy.sh\"]},\"10\":{\"c\":[\"教程\"]},\"11\":{\"c\":[\"前端\",\"文档\",\"指令\"]},\"12\":{\"h\":\"Vue3\",\"t\":[\"2020 年 9 月 18 日，Vue.js发布版3.0版本，代号：One Piece\",\"经历了：4800+次提交、40+个 RFC、600+次 PR、300+贡献者\",\"官方发版地址：Release v3.0.0 One Piece · vuejs/core\",\"截止 2023 年 10 月，最新的公开版本为：3.3.4\"]},\"13\":{\"h\":\"1.1. 【性能的提升】\",\"t\":[\"打包大小减少41%。\",\"初次渲染快55%, 更新渲染快133%。\",\"内存减少54%。\"]},\"14\":{\"h\":\"1.2.【 源码的升级】\",\"t\":[\"使用Proxy代替defineProperty实现响应式。\",\"重写虚拟DOM的实现和Tree-Shaking。\"]},\"15\":{\"h\":\"1.3. 【拥抱 TypeScript】\",\"t\":[\"Vue3可以更好的支持TypeScript。\"]},\"16\":{\"h\":\"1.4. 【新的特性】\",\"t\":[\"Composition API（组合API）：\",\"setup\",\"ref与reactive\",\"computed与watch\",\"......\",\"新的内置组件：\",\"Fragment\",\"Teleport\",\"Suspense\",\"......\",\"其他改变：\",\"新的生命周期钩子\",\"data 选项应始终被声明为一个函数\",\"移除keyCode支持作为 v-on 的修饰符\",\"......\"]},\"17\":{\"h\":\"2.1. 【基于 vue-cli 创建】\",\"t\":[\"点击查看官方文档\",\"备注：目前vue-cli已处于维护模式，官方推荐基于 Vite 创建项目。\",\"## 查看@vue/cli版本，确保@vue/cli版本在4.5.0以上 vue --version ## 安装或者升级你的@vue/cli npm install -g @vue/cli ## 执行创建命令 vue create vue_test ## 随后选择3.x ## Choose a version of Vue.js that you want to start the project with (Use arrow keys) ## > 3.x ## 2.x ## 启动 cd vue_test npm run serve\"]},\"18\":{\"h\":\"2.2. 【基于 vite 创建】(推荐)\",\"t\":[\"vite 是新一代前端构建工具，官网地址：https://vitejs.cn，vite的优势如下：\",\"轻量快速的热重载（HMR），能实现极速的服务启动。\",\"对 TypeScript、JSX、CSS 等支持开箱即用。\",\"真正的按需编译，不再等待整个应用编译完成。\",\"webpack构建 与 vite构建对比图如下：\",\"具体操作如下（点击查看官方文档）\",\"## 1.创建命令 npm create vue@latest ## 2.具体配置 ## 配置项目名称 √ Project name: vue3_test ## 是否添加TypeScript支持 √ Add TypeScript? Yes ## 是否添加JSX支持 √ Add JSX Support? No ## 是否添加路由环境 √ Add Vue Router for Single Page Application development? No ## 是否添加pinia环境 √ Add Pinia for state management? No ## 是否添加单元测试 √ Add Vitest for Unit Testing? No ## 是否添加端到端测试方案 √ Add an End-to-End Testing Solution? » No ## 是否添加ESLint语法检查 √ Add ESLint for code quality? Yes ## 是否添加Prettiert代码格式化 √ Add Prettier for code formatting? No\",\"自己动手编写一个 App 组件\",\"<template> <div class=\\\"app\\\"> <h1>你好啊！</h1> </div> </template> <script lang=\\\"ts\\\"> export default { name: \\\"App\\\", //组件名 }; </script> <style> .app { background-color: #ddd; box-shadow: 0 0 10px; border-radius: 10px; padding: 20px; } </style>\",\"安装官方推荐的vscode插件：\",\"总结：\",\"Vite 项目中，index.html 是项目的入口文件，在项目最外层。\",\"加载index.html后，Vite 解析 <script type=\\\"module\\\" src=\\\"xxx\\\"> 指向的JavaScript。\",\"Vue3**中是通过 **createApp 函数创建一个应用实例。\"]},\"19\":{\"h\":\"2.3. 【一个简单的效果】\",\"t\":[\"Vue3向下兼容Vue2语法，且Vue3中的模板中可以没有根标签\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{ name }}</h2> <h2>年龄：{{ age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name: \\\"App\\\", data() { return { name: \\\"张三\\\", age: 18, tel: \\\"13888888888\\\", }; }, methods: { changeName() { this.name = \\\"zhang-san\\\"; }, changeAge() { this.age += 1; }, showTel() { alert(this.tel); }, }, }; </script>\"]},\"20\":{\"h\":\"3.1. 【OptionsAPI 与 CompositionAPI】\",\"t\":[\"Vue2的API设计是Options（配置）风格的。\",\"Vue3的API设计是Composition（组合）风格的。\"]},\"21\":{\"h\":\"Options API 的弊端\",\"t\":[\"Options类型的 API，数据、方法、计算属性等，是分散在：data、methods、computed中的，若想新增或者修改一个需求，就需要分别修改：data、methods、computed，不便于维护和复用。\"]},\"22\":{\"h\":\"Composition API 的优势\",\"t\":[\"可以用函数的方式，更加优雅的组织代码，让相关功能的代码更加有序的组织在一起。\",\"说明：以上四张动图原创作者：大帅老猿\"]},\"23\":{\"h\":\"3.2. 【拉开序幕的 setup】\"},\"24\":{\"h\":\"setup 概述\",\"t\":[\"setup是Vue3中一个新的配置项，值是一个函数，它是 Composition API“表演的舞台”，组件中所用到的：数据、方法、计算属性、监视......等等，均配置在setup中。\",\"特点如下：\",\"setup函数返回的对象中的内容，可直接在模板中使用。\",\"setup中访问this是undefined。\",\"setup函数会在beforeCreate之前调用，它是“领先”所有钩子执行的。\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{ name }}</h2> <h2>年龄：{{ age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name: \\\"Person\\\", setup() { // 数据，原来写在data中（注意：此时的name、age、tel数据都不是响应式数据） let name = \\\"张三\\\"; let age = 18; let tel = \\\"13888888888\\\"; // 方法，原来写在methods中 function changeName() { name = \\\"zhang-san\\\"; //注意：此时这么修改name页面是不变化的 console.log(name); } function changeAge() { age += 1; //注意：此时这么修改age页面是不变化的 console.log(age); } function showTel() { alert(tel); } // 返回一个对象，对象中的内容，模板中可以直接使用 return { name, age, tel, changeName, changeAge, showTel }; }, }; </script>\"]},\"25\":{\"h\":\"setup 的返回值\",\"t\":[\"若返回一个对象：则对象中的：属性、方法等，在模板中均可以直接使用**（重点关注）。**\",\"若返回一个函数：则可以自定义渲染内容，代码如下：\",\"setup(){ return ()=> '你好啊！' }\"]},\"26\":{\"h\":\"setup 与 Options API 的关系\",\"t\":[\"Vue2 的配置（data、methos......）中可以访问到setup中的属性、方法。\",\"但在setup中不能访问到Vue2的配置（data、methos......）。\",\"如果与Vue2冲突，则setup优先。\"]},\"27\":{\"h\":\"setup 语法糖\",\"t\":[\"setup函数有一个语法糖，这个语法糖，可以让我们把setup独立出去，代码如下：\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{ name }}</h2> <h2>年龄：{{ age }}</h2> <button @click=\\\"changName\\\">修改名字</button> <button @click=\\\"changAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script lang=\\\"ts\\\"> export default { name: \\\"Person\\\", }; </script> <!-- 下面的写法是setup语法糖 --> <script setup lang=\\\"ts\\\"> console.log(this); //undefined // 数据（注意：此时的name、age、tel都不是响应式数据） let name = \\\"张三\\\"; let age = 18; let tel = \\\"13888888888\\\"; // 方法 function changName() { name = \\\"李四\\\"; //注意：此时这么修改name页面是不变化的 } function changAge() { console.log(age); age += 1; //注意：此时这么修改age页面是不变化的 } function showTel() { alert(tel); } </script>\",\"扩展：上述代码，还需要编写一个不写setup的script标签，去指定组件名字，比较麻烦，我们可以借助vite中的插件简化\",\"第一步：npm i vite-plugin-vue-setup-extend -D\",\"第二步：vite.config.ts\",\"import { defineConfig } from \\\"vite\\\"; import VueSetupExtend from \\\"vite-plugin-vue-setup-extend\\\"; export default defineConfig({ plugins: [VueSetupExtend()], });\",\"第三步：<script setup lang=\\\"ts\\\" name=\\\"Person\\\">\"]},\"28\":{\"h\":\"3.3. 【ref 创建：基本类型的响应式数据】\",\"t\":[\"**作用：**定义响应式变量。\",\"语法：let xxx = ref(初始值)。\",\"**返回值：**一个RefImpl的实例对象，简称ref对象或ref，ref对象的value属性是响应式的。\",\"注意点：\",\"JS中操作数据需要：xxx.value，但模板中不需要.value，直接使用即可。\",\"对于let name = ref('张三')来说，name不是响应式的，name.value是响应式的。\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{ name }}</h2> <h2>年龄：{{ age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">年龄+1</button> <button @click=\\\"showTel\\\">点我查看联系方式</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Person\\\"> import { ref } from \\\"vue\\\"; // name和age是一个RefImpl的实例对象，简称ref对象，它们的value属性是响应式的。 let name = ref(\\\"张三\\\"); let age = ref(18); // tel就是一个普通的字符串，不是响应式的 let tel = \\\"13888888888\\\"; function changeName() { // JS中操作ref对象时候需要.value name.value = \\\"李四\\\"; console.log(name.value); // 注意：name不是响应式的，name.value是响应式的，所以如下代码并不会引起页面的更新。 // name = ref('zhang-san') } function changeAge() { // JS中操作ref对象时候需要.value age.value += 1; console.log(age.value); } function showTel() { alert(tel); } </script>\"]},\"29\":{\"h\":\"3.4. 【reactive 创建：对象类型的响应式数据】\",\"t\":[\"作用：定义一个响应式对象（基本类型不要用它，要用ref，否则报错）\",\"语法：let 响应式对象= reactive(源对象)。\",\"**返回值：**一个Proxy的实例对象，简称：响应式对象。\",\"注意点：reactive定义的响应式数据是“深层次”的。\",\"<template> <div class=\\\"person\\\"> <h2>汽车信息：一台{{ car.brand }}汽车，价值{{ car.price }}万</h2> <h2>游戏列表：</h2> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> <h2>测试：{{ obj.a.b.c.d }}</h2> <button @click=\\\"changeCarPrice\\\">修改汽车价格</button> <button @click=\\\"changeFirstGame\\\">修改第一游戏</button> <button @click=\\\"test\\\">测试</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { reactive } from \\\"vue\\\"; // 数据 let car = reactive({ brand: \\\"奔驰\\\", price: 100 }); let games = reactive([ { id: \\\"ahsgdyfa01\\\", name: \\\"英雄联盟\\\" }, { id: \\\"ahsgdyfa02\\\", name: \\\"王者荣耀\\\" }, { id: \\\"ahsgdyfa03\\\", name: \\\"原神\\\" }, ]); let obj = reactive({ a: { b: { c: { d: 666, }, }, }, }); function changeCarPrice() { car.price += 10; } function changeFirstGame() { games[0].name = \\\"流星蝴蝶剑\\\"; } function test() { obj.a.b.c.d = 999; } </script>\"]},\"30\":{\"h\":\"3.5. 【ref 创建：对象类型的响应式数据】\",\"t\":[\"其实ref接收的数据可以是：基本类型、对象类型。\",\"若ref接收的是对象类型，内部其实也是调用了reactive函数。\",\"<template> <div class=\\\"person\\\"> <h2>汽车信息：一台{{ car.brand }}汽车，价值{{ car.price }}万</h2> <h2>游戏列表：</h2> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> <h2>测试：{{ obj.a.b.c.d }}</h2> <button @click=\\\"changeCarPrice\\\">修改汽车价格</button> <button @click=\\\"changeFirstGame\\\">修改第一游戏</button> <button @click=\\\"test\\\">测试</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref } from \\\"vue\\\"; // 数据 let car = ref({ brand: \\\"奔驰\\\", price: 100 }); let games = ref([ { id: \\\"ahsgdyfa01\\\", name: \\\"英雄联盟\\\" }, { id: \\\"ahsgdyfa02\\\", name: \\\"王者荣耀\\\" }, { id: \\\"ahsgdyfa03\\\", name: \\\"原神\\\" }, ]); let obj = ref({ a: { b: { c: { d: 666, }, }, }, }); console.log(car); function changeCarPrice() { car.value.price += 10; } function changeFirstGame() { games.value[0].name = \\\"流星蝴蝶剑\\\"; } function test() { obj.value.a.b.c.d = 999; } </script>\"]},\"31\":{\"h\":\"3.6. 【ref 对比 reactive】\",\"t\":[\"宏观角度看：\",\"ref用来定义：基本类型数据、对象类型数据；\",\"reactive用来定义：对象类型数据。\",\"区别：\",\"ref创建的变量必须使用.value（可以使用volar插件自动添加.value）。\",\"reactive重新分配一个新对象，会失去响应式（可以使用Object.assign去整体替换）。\",\"使用原则： \",\"若需要一个基本类型的响应式数据，必须使用ref。\",\"若需要一个响应式对象，层级不深，ref、reactive都可以。\",\"若需要一个响应式对象，且层级较深，推荐使用reactive。\"]},\"32\":{\"h\":\"3.7. 【toRefs 与 toRef】\",\"t\":[\"作用：将一个响应式对象中的每一个属性，转换为ref对象。\",\"备注：toRefs与toRef功能一致，但toRefs可以批量转换。\",\"语法如下：\",\"<template> <div class=\\\"person\\\"> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <h2>性别：{{ person.gender }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeGender\\\">修改性别</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, reactive, toRefs, toRef } from \\\"vue\\\"; // 数据 let person = reactive({ name: \\\"张三\\\", age: 18, gender: \\\"男\\\" }); // 通过toRefs将person对象中的n个属性批量取出，且依然保持响应式的能力 let { name, gender } = toRefs(person); // 通过toRef将person对象中的gender属性取出，且依然保持响应式的能力 let age = toRef(person, \\\"age\\\"); // 方法 function changeName() { name.value += \\\"~\\\"; } function changeAge() { age.value += 1; } function changeGender() { gender.value = \\\"女\\\"; } </script>\"]},\"33\":{\"h\":\"3.8. 【computed】\",\"t\":[\"作用：根据已有数据计算出新数据（和Vue2中的computed作用一致）。\",\"<template> <div class=\\\"person\\\"> 姓：<input type=\\\"text\\\" v-model=\\\"firstName\\\" /> <br /> 名：<input type=\\\"text\\\" v-model=\\\"lastName\\\" /> <br /> 全名：<span>{{ fullName }}</span> <br /> <button @click=\\\"changeFullName\\\">全名改为：li-si</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"App\\\"> import { ref, computed } from \\\"vue\\\"; let firstName = ref(\\\"zhang\\\"); let lastName = ref(\\\"san\\\"); // 计算属性——只读取，不修改 /* let fullName = computed(()=>{ return firstName.value + '-' + lastName.value }) */ // 计算属性——既读取又修改 let fullName = computed({ // 读取 get() { return firstName.value + \\\"-\\\" + lastName.value; }, // 修改 set(val) { console.log(\\\"有人修改了fullName\\\", val); firstName.value = val.split(\\\"-\\\")[0]; lastName.value = val.split(\\\"-\\\")[1]; }, }); function changeFullName() { fullName.value = \\\"li-si\\\"; } </script>\"]},\"34\":{\"h\":\"3.9.【watch】\",\"t\":[\"作用：监视数据的变化（和Vue2中的watch作用一致）\",\"特点：Vue3中的watch只能监视以下四种数据： \",\"ref定义的数据。\",\"reactive定义的数据。\",\"函数返回一个值（getter函数）。\",\"一个包含上述内容的数组。\",\"我们在Vue3中使用watch的时候，通常会遇到以下几种情况：\"]},\"35\":{\"h\":\"* 情况一\",\"t\":[\"监视ref定义的【基本类型】数据：直接写数据名即可，监视的是其value值的改变。\",\"<template> <div class=\\\"person\\\"> <h1>情况一：监视【ref】定义的【基本类型】数据</h1> <h2>当前求和为：{{ sum }}</h2> <button @click=\\\"changeSum\\\">点我sum+1</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, watch } from \\\"vue\\\"; // 数据 let sum = ref(0); // 方法 function changeSum() { sum.value += 1; } // 监视，情况一：监视【ref】定义的【基本类型】数据 const stopWatch = watch(sum, (newValue, oldValue) => { console.log(\\\"sum变化了\\\", newValue, oldValue); if (newValue >= 10) { stopWatch(); } }); </script>\"]},\"36\":{\"h\":\"* 情况二\",\"t\":[\"监视ref定义的【对象类型】数据：直接写数据名，监视的是对象的【地址值】，若想监视对象内部的数据，要手动开启深度监视。\",\"注意：\",\"若修改的是ref定义的对象中的属性，newValue 和 oldValue 都是新值，因为它们是同一个对象。\",\"若修改整个ref定义的对象，newValue 是新值， oldValue 是旧值，因为不是同一个对象了。\",\"<template> <div class=\\\"person\\\"> <h1>情况二：监视【ref】定义的【对象类型】数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changePerson\\\">修改整个人</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, watch } from \\\"vue\\\"; // 数据 let person = ref({ name: \\\"张三\\\", age: 18, }); // 方法 function changeName() { person.value.name += \\\"~\\\"; } function changeAge() { person.value.age += 1; } function changePerson() { person.value = { name: \\\"李四\\\", age: 90 }; } /* 监视，情况一：监视【ref】定义的【对象类型】数据，监视的是对象的地址值，若想监视对象内部属性的变化，需要手动开启深度监视 watch的第一个参数是：被监视的数据 watch的第二个参数是：监视的回调 watch的第三个参数是：配置对象（deep、immediate等等.....） */ watch( person, (newValue, oldValue) => { console.log(\\\"person变化了\\\", newValue, oldValue); }, { deep: true } ); </script>\"]},\"37\":{\"h\":\"* 情况三\",\"t\":[\"监视reactive定义的【对象类型】数据，且默认开启了深度监视。\",\"<template> <div class=\\\"person\\\"> <h1>情况三：监视【reactive】定义的【对象类型】数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changePerson\\\">修改整个人</button> <hr /> <h2>测试：{{ obj.a.b.c }}</h2> <button @click=\\\"test\\\">修改obj.a.b.c</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { reactive, watch } from \\\"vue\\\"; // 数据 let person = reactive({ name: \\\"张三\\\", age: 18, }); let obj = reactive({ a: { b: { c: 666, }, }, }); // 方法 function changeName() { person.name += \\\"~\\\"; } function changeAge() { person.age += 1; } function changePerson() { Object.assign(person, { name: \\\"李四\\\", age: 80 }); } function test() { obj.a.b.c = 888; } // 监视，情况三：监视【reactive】定义的【对象类型】数据，且默认是开启深度监视的 watch(person, (newValue, oldValue) => { console.log(\\\"person变化了\\\", newValue, oldValue); }); watch(obj, (newValue, oldValue) => { console.log(\\\"Obj变化了\\\", newValue, oldValue); }); </script>\"]},\"38\":{\"h\":\"* 情况四\",\"t\":[\"监视ref或reactive定义的【对象类型】数据中的某个属性，注意点如下：\",\"若该属性值不是【对象类型】，需要写成函数形式。\",\"若该属性值是依然是【对象类型】，可直接编，也可写成函数，建议写成函数。\",\"结论：监视的要是对象里的属性，那么最好写函数式，注意点：若是对象监视的是地址值，需要关注对象内部，需要手动开启深度监视。\",\"<template> <div class=\\\"person\\\"> <h1>情况四：监视【ref】或【reactive】定义的【对象类型】数据中的某个属性</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <h2>汽车：{{ person.car.c1 }}、{{ person.car.c2 }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeC1\\\">修改第一台车</button> <button @click=\\\"changeC2\\\">修改第二台车</button> <button @click=\\\"changeCar\\\">修改整个车</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { reactive, watch } from \\\"vue\\\"; // 数据 let person = reactive({ name: \\\"张三\\\", age: 18, car: { c1: \\\"奔驰\\\", c2: \\\"宝马\\\", }, }); // 方法 function changeName() { person.name += \\\"~\\\"; } function changeAge() { person.age += 1; } function changeC1() { person.car.c1 = \\\"奥迪\\\"; } function changeC2() { person.car.c2 = \\\"大众\\\"; } function changeCar() { person.car = { c1: \\\"雅迪\\\", c2: \\\"爱玛\\\" }; } // 监视，情况四：监视响应式对象中的某个属性，且该属性是基本类型的，要写成函数式 /* watch(()=> person.name,(newValue,oldValue)=>{ console.log('person.name变化了',newValue,oldValue) }) */ // 监视，情况四：监视响应式对象中的某个属性，且该属性是对象类型的，可以直接写，也能写函数，更推荐写函数 watch( () => person.car, (newValue, oldValue) => { console.log(\\\"person.car变化了\\\", newValue, oldValue); }, { deep: true } ); </script>\"]},\"39\":{\"h\":\"* 情况五\",\"t\":[\"监视上述的多个数据\",\"<template> <div class=\\\"person\\\"> <h1>情况五：监视上述的多个数据</h1> <h2>姓名：{{ person.name }}</h2> <h2>年龄：{{ person.age }}</h2> <h2>汽车：{{ person.car.c1 }}、{{ person.car.c2 }}</h2> <button @click=\\\"changeName\\\">修改名字</button> <button @click=\\\"changeAge\\\">修改年龄</button> <button @click=\\\"changeC1\\\">修改第一台车</button> <button @click=\\\"changeC2\\\">修改第二台车</button> <button @click=\\\"changeCar\\\">修改整个车</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { reactive, watch } from \\\"vue\\\"; // 数据 let person = reactive({ name: \\\"张三\\\", age: 18, car: { c1: \\\"奔驰\\\", c2: \\\"宝马\\\", }, }); // 方法 function changeName() { person.name += \\\"~\\\"; } function changeAge() { person.age += 1; } function changeC1() { person.car.c1 = \\\"奥迪\\\"; } function changeC2() { person.car.c2 = \\\"大众\\\"; } function changeCar() { person.car = { c1: \\\"雅迪\\\", c2: \\\"爱玛\\\" }; } // 监视，情况五：监视上述的多个数据 watch( [() => person.name, person.car], (newValue, oldValue) => { console.log(\\\"person.car变化了\\\", newValue, oldValue); }, { deep: true } ); </script>\"]},\"40\":{\"h\":\"3.10. 【watchEffect】\",\"t\":[\"官网：立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行该函数。\",\"watch对比watchEffect\",\"都能监听响应式数据的变化，不同的是监听数据变化的方式不同\",\"watch：要明确指出监视的数据\",\"watchEffect：不用明确指出监视的数据（函数中用到哪些属性，那就监视哪些属性）。\",\"示例代码：\",\"<template> <div class=\\\"person\\\"> <h1>需求：水温达到50℃，或水位达到20cm，则联系服务器</h1> <h2 id=\\\"demo\\\">水温：{{ temp }}</h2> <h2>水位：{{ height }}</h2> <button @click=\\\"changePrice\\\">水温+1</button> <button @click=\\\"changeSum\\\">水位+10</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, watch, watchEffect } from \\\"vue\\\"; // 数据 let temp = ref(0); let height = ref(0); // 方法 function changePrice() { temp.value += 10; } function changeSum() { height.value += 1; } // 用watch实现，需要明确的指出要监视：temp、height watch([temp, height], (value) => { // 从value中获取最新的temp值、height值 const [newTemp, newHeight] = value; // 室温达到50℃，或水位达到20cm，立刻联系服务器 if (newTemp >= 50 || newHeight >= 20) { console.log(\\\"联系服务器\\\"); } }); // 用watchEffect实现，不用 const stopWtach = watchEffect(() => { // 室温达到50℃，或水位达到20cm，立刻联系服务器 if (temp.value >= 50 || height.value >= 20) { console.log(document.getElementById(\\\"demo\\\")?.innerText); console.log(\\\"联系服务器\\\"); } // 水温达到100，或水位达到50，取消监视 if (temp.value === 100 || height.value === 50) { console.log(\\\"清理了\\\"); stopWtach(); } }); </script>\"]},\"41\":{\"h\":\"3.11. 【标签的 ref 属性】\",\"t\":[\"作用：用于注册模板引用。\",\"用在普通DOM标签上，获取的是DOM节点。\",\"用在组件标签上，获取的是组件实例对象。\",\"用在普通DOM标签上：\",\"<template> <div class=\\\"person\\\"> <h1 ref=\\\"title1\\\">尚硅谷</h1> <h2 ref=\\\"title2\\\">前端</h2> <h3 ref=\\\"title3\\\">Vue</h3> <input type=\\\"text\\\" ref=\\\"inpt\\\" /> <br /><br /> <button @click=\\\"showLog\\\">点我打印内容</button> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref } from \\\"vue\\\"; let title1 = ref(); let title2 = ref(); let title3 = ref(); function showLog() { // 通过id获取元素 const t1 = document.getElementById(\\\"title1\\\"); // 打印内容 console.log((t1 as HTMLElement).innerText); console.log((<HTMLElement>t1).innerText); console.log(t1?.innerText); /************************************/ // 通过ref获取元素 console.log(title1.value); console.log(title2.value); console.log(title3.value); } </script>\",\"用在组件标签上：\",\"<!-- 父组件App.vue --> <template> <Person ref=\\\"ren\\\" /> <button @click=\\\"test\\\">测试</button> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import Person from \\\"./components/Person.vue\\\"; import { ref } from \\\"vue\\\"; let ren = ref(); function test() { console.log(ren.value.name); console.log(ren.value.age); } </script> <!-- 子组件Person.vue中要使用defineExpose暴露内容 --> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, defineExpose } from \\\"vue\\\"; // 数据 let name = ref(\\\"张三\\\"); let age = ref(18); /****************************/ /****************************/ // 使用defineExpose将组件中的数据交给外部 defineExpose({ name, age }); </script>\"]},\"42\":{\"h\":\"3.12. 【props】\",\"t\":[\"// 定义一个接口，限制每个Person对象的格式 export interface PersonInter { id: string; name: string; age: number; } // 定义一个自定义类型Persons export type Persons = Array<PersonInter>;\",\"App.vue中代码：\",\"<template> <Person :list=\\\"persons\\\" /> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import Person from \\\"./components/Person.vue\\\"; import { reactive } from \\\"vue\\\"; import { type Persons } from \\\"./types\\\"; let persons = reactive<Persons>([ { id: \\\"e98219e12\\\", name: \\\"张三\\\", age: 18 }, { id: \\\"e98219e13\\\", name: \\\"李四\\\", age: 19 }, { id: \\\"e98219e14\\\", name: \\\"王五\\\", age: 20 }, ]); </script>\",\"Person.vue中代码：\",\"<template> <div class=\\\"person\\\"> <ul> <li v-for=\\\"item in list\\\" :key=\\\"item.id\\\"> {{item.name}}--{{item.age}} </li> </ul> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import {defineProps} from 'vue' import {type PersonInter} from '@/types' // 第一种写法：仅接收 // const props = defineProps(['list']) // 第二种写法：接收+限制类型 // defineProps<{list:Persons}>() // 第三种写法：接收+限制类型+指定默认值+限制必要性 let props = withDefaults(defineProps<{list?:Persons}>(),{ list:()=>[{id:'asdasg01',name:'小猪佩奇',age:18}] }) console.log(props) </script>\"]},\"43\":{\"h\":\"3.13. 【生命周期】\",\"t\":[\"概念：Vue组件实例在创建时要经历一系列的初始化步骤，在此过程中Vue会在合适的时机，调用特定的函数，从而让开发者有机会在特定阶段运行自己的代码，这些特定的函数统称为：生命周期钩子\",\"规律：\",\"生命周期整体分为四个阶段，分别是：创建、挂载、更新、销毁，每个阶段都有两个钩子，一前一后。\",\"Vue2的生命周期\",\"创建阶段：beforeCreate、created\",\"挂载阶段：beforeMount、mounted\",\"更新阶段：beforeUpdate、updated\",\"销毁阶段：beforeDestroy、destroyed\",\"Vue3的生命周期\",\"创建阶段：setup\",\"挂载阶段：onBeforeMount、onMounted\",\"更新阶段：onBeforeUpdate、onUpdated\",\"卸载阶段：onBeforeUnmount、onUnmounted\",\"常用的钩子：onMounted(挂载完毕)、onUpdated(更新完毕)、onBeforeUnmount(卸载之前)\",\"示例代码：\",\"<template> <div class=\\\"person\\\"> <h2>当前求和为：{{ sum }}</h2> <button @click=\\\"changeSum\\\">点我sum+1</button> </div> </template> <!-- vue3写法 --> <script lang=\\\"ts\\\" setup name=\\\"Person\\\"> import { ref, onBeforeMount, onMounted, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted, } from \\\"vue\\\"; // 数据 let sum = ref(0); // 方法 function changeSum() { sum.value += 1; } console.log(\\\"setup\\\"); // 生命周期钩子 onBeforeMount(() => { console.log(\\\"挂载之前\\\"); }); onMounted(() => { console.log(\\\"挂载完毕\\\"); }); onBeforeUpdate(() => { console.log(\\\"更新之前\\\"); }); onUpdated(() => { console.log(\\\"更新完毕\\\"); }); onBeforeUnmount(() => { console.log(\\\"卸载之前\\\"); }); onUnmounted(() => { console.log(\\\"卸载完毕\\\"); }); </script>\"]},\"44\":{\"h\":\"3.14. 【自定义 hook】\",\"t\":[\"什么是hook？—— 本质是一个函数，把setup函数中使用的Composition API进行了封装，类似于vue2.x中的mixin。\",\"自定义hook的优势：复用代码, 让setup中的逻辑更清楚易懂。\",\"示例代码：\",\"useSum.ts中内容如下：\",\"import { ref, onMounted } from \\\"vue\\\"; export default function () { let sum = ref(0); const increment = () => { sum.value += 1; }; const decrement = () => { sum.value -= 1; }; onMounted(() => { increment(); }); //向外部暴露数据 return { sum, increment, decrement }; }\",\"useDog.ts中内容如下：\",\"import {reactive,onMounted} from 'vue' import axios,{AxiosError} from 'axios' export default function(){ let dogList = reactive<string[]>([]) // 方法 async function getDog(){ try { // 发请求 let {data} = await axios.get('https://dog.ceo/api/breed/pembroke/images/random') // 维护数据 dogList.push(data.message) } catch (error) { // 处理错误 const err = <AxiosError>error console.log(err.message) } } // 挂载钩子 onMounted(()=>{ getDog() }) //向外部暴露数据 return {dogList,getDog} }\",\"组件中具体使用：\",\"<template> <h2>当前求和为：{{ sum }}</h2> <button @click=\\\"increment\\\">点我+1</button> <button @click=\\\"decrement\\\">点我-1</button> <hr /> <img v-for=\\\"(u, index) in dogList.urlList\\\" :key=\\\"index\\\" :src=\\\"(u as string)\\\" /> <span v-show=\\\"dogList.isLoading\\\">加载中......</span><br /> <button @click=\\\"getDog\\\">再来一只狗</button> </template> <script lang=\\\"ts\\\"> import { defineComponent } from \\\"vue\\\"; export default defineComponent({ name: \\\"App\\\", }); </script> <script setup lang=\\\"ts\\\"> import useSum from \\\"./hooks/useSum\\\"; import useDog from \\\"./hooks/useDog\\\"; let { sum, increment, decrement } = useSum(); let { dogList, getDog } = useDog(); </script>\"]},\"45\":{\"h\":\"4.1. 【对路由的理解】\"},\"46\":{\"h\":\"4.2. 【基本切换效果】\",\"t\":[\"Vue3中要使用vue-router的最新版本，目前是4版本。\",\"路由配置文件代码如下：\",\"import { createRouter, createWebHistory } from \\\"vue-router\\\"; import Home from \\\"@/pages/Home.vue\\\"; import News from \\\"@/pages/News.vue\\\"; import About from \\\"@/pages/About.vue\\\"; const router = createRouter({ history: createWebHistory(), routes: [ { path: \\\"/home\\\", component: Home, }, { path: \\\"/about\\\", component: About, }, ], }); export default router;\",\"main.ts代码如下：\",\"import router from \\\"./router/index\\\"; app.use(router); app.mount(\\\"#app\\\");\",\"App.vue代码如下\",\"<template> <div class=\\\"app\\\"> <h2 class=\\\"title\\\">Vue路由测试</h2> <!-- 导航区 --> <div class=\\\"navigate\\\"> <RouterLink to=\\\"/home\\\" active-class=\\\"active\\\">首页</RouterLink> <RouterLink to=\\\"/news\\\" active-class=\\\"active\\\">新闻</RouterLink> <RouterLink to=\\\"/about\\\" active-class=\\\"active\\\">关于</RouterLink> </div> <!-- 展示区 --> <div class=\\\"main-content\\\"> <RouterView></RouterView> </div> </div> </template> <script lang=\\\"ts\\\" setup name=\\\"App\\\"> import { RouterLink, RouterView } from \\\"vue-router\\\"; </script>\"]},\"47\":{\"h\":\"4.3. 【两个注意点】\",\"t\":[\"路由组件通常存放在pages 或 views文件夹，一般组件通常存放在components文件夹。\",\"通过点击导航，视觉效果上“消失” 了的路由组件，默认是被卸载掉的，需要的时候再去挂载。\"]},\"48\":{\"h\":\"4.4.【路由器工作模式】\",\"t\":[\"history模式\",\"优点：URL更加美观，不带有#，更接近传统的网站URL。\",\"缺点：后期项目上线，需要服务端配合处理路径问题，否则刷新会有404错误。\",\"const router = createRouter({ history: createWebHistory(), //history模式 /******/ });\",\"hash模式\",\"优点：兼容性更好，因为不需要服务器端处理路径。\",\"缺点：URL带有#不太美观，且在SEO优化方面相对较差。\",\"const router = createRouter({ history: createWebHashHistory(), //hash模式 /******/ });\"]},\"49\":{\"h\":\"4.5. 【to 的两种写法】\",\"t\":[\"<!-- 第一种：to的字符串写法 --> <router-link active-class=\\\"active\\\" to=\\\"/home\\\">主页</router-link> <!-- 第二种：to的对象写法 --> <router-link active-class=\\\"active\\\" :to=\\\"{ path: '/home' }\\\">Home</router-link>\"]},\"50\":{\"h\":\"4.6. 【命名路由】\",\"t\":[\"作用：可以简化路由跳转及传参（后面就讲）。\",\"给路由规则命名：\",\"routes: [ { name: \\\"zhuye\\\", path: \\\"/home\\\", component: Home, }, { name: \\\"xinwen\\\", path: \\\"/news\\\", component: News, }, { name: \\\"guanyu\\\", path: \\\"/about\\\", component: About, }, ];\",\"跳转路由：\",\"<!--简化前：需要写完整的路径（to的字符串写法） --> <router-link to=\\\"/news/detail\\\">跳转</router-link> <!--简化后：直接通过名字跳转（to的对象写法配合name属性） --> <router-link :to=\\\"{ name: 'guanyu' }\\\">跳转</router-link>\"]},\"51\":{\"h\":\"4.7. 【嵌套路由】\",\"t\":[\"编写News的子路由：Detail.vue\",\"配置路由规则，使用children配置项：\",\"const router = createRouter({ history: createWebHistory(), routes: [ { name: \\\"zhuye\\\", path: \\\"/home\\\", component: Home, }, { name: \\\"xinwen\\\", path: \\\"/news\\\", component: News, children: [ { name: \\\"xiang\\\", path: \\\"detail\\\", component: Detail, }, ], }, { name: \\\"guanyu\\\", path: \\\"/about\\\", component: About, }, ], }); export default router;\",\"跳转路由（记得要加完整路径）：\",\"<router-link to=\\\"/news/detail\\\">xxxx</router-link> <!-- 或 --> <router-link :to=\\\"{ path: '/news/detail' }\\\">xxxx</router-link>\",\"记得去Home组件中预留一个<router-view>\",\"<template> <div class=\\\"news\\\"> <nav class=\\\"news-list\\\"> <RouterLink v-for=\\\"news in newsList\\\" :key=\\\"news.id\\\" :to=\\\"{ path: '/news/detail' }\\\" > {{ news.name }} </RouterLink> </nav> <div class=\\\"news-detail\\\"> <RouterView /> </div> </div> </template>\"]},\"52\":{\"h\":\"4.8. 【路由传参】\"},\"53\":{\"h\":\"query 参数\",\"t\":[\"传递参数\",\"<!-- 跳转并携带query参数（to的字符串写法） --> <router-link to=\\\"/news/detail?a=1&b=2&content=欢迎你\\\"> 跳转 </router-link> <!-- 跳转并携带query参数（to的对象写法） --> <RouterLink :to=\\\"{ //name:'xiang', //用name也可以跳转 path: '/news/detail', query: { id: news.id, title: news.title, content: news.content, }, }\\\" > {{news.title}} </RouterLink>\",\"接收参数：\",\"import { useRoute } from \\\"vue-router\\\"; const route = useRoute(); // 打印query参数 console.log(route.query);\"]},\"54\":{\"h\":\"params 参数\",\"t\":[\"传递参数\",\"<!-- 跳转并携带params参数（to的字符串写法） --> <RouterLink :to=\\\"`/news/detail/001/新闻001/内容001`\\\" >{{news.title}}</RouterLink> <!-- 跳转并携带params参数（to的对象写法） --> <RouterLink :to=\\\"{ name: 'xiang', //用name跳转 params: { id: news.id, title: news.title, content: news.title, }, }\\\" > {{news.title}} </RouterLink>\",\"接收参数：\",\"import { useRoute } from \\\"vue-router\\\"; const route = useRoute(); // 打印params参数 console.log(route.params);\",\"备注 1：传递params参数时，若使用to的对象写法，必须使用name配置项，不能用path。\",\"备注 2：传递params参数时，需要提前在规则中占位。\"]},\"55\":{\"h\":\"4.9. 【路由的 props 配置】\",\"t\":[\"作用：让路由组件更方便的收到参数（可以将路由参数作为props传给组件）\",\"{ name:'xiang', path:'detail/:id/:title/:content', component:Detail, // props的对象写法，作用：把对象中的每一组key-value作为props传给Detail组件 // props:{a:1,b:2,c:3}, // props的布尔值写法，作用：把收到了每一组params参数，作为props传给Detail组件 // props:true // props的函数写法，作用：把返回的对象中每一组key-value作为props传给Detail组件 props(route){ return route.query } }\"]},\"56\":{\"h\":\"4.10. 【 replace 属性】\",\"t\":[\"作用：控制路由跳转时操作浏览器历史记录的模式。\",\"浏览器的历史记录有两种写入方式：分别为push和replace：\",\"push是追加历史记录（默认值）。\",\"replace是替换当前记录。\",\"开启replace模式：\",\"<RouterLink replace .......>News</RouterLink>\"]},\"57\":{\"h\":\"4.11. 【编程式导航】\",\"t\":[\"路由组件的两个重要的属性：$route和$router变成了两个hooks\",\"import { useRoute, useRouter } from \\\"vue-router\\\"; const route = useRoute(); const router = useRouter(); console.log(route.query); console.log(route.parmas); console.log(router.push); console.log(router.replace);\"]},\"58\":{\"h\":\"4.12. 【重定向】\",\"t\":[\"作用：将特定的路径，重新定向到已有路由。\",\"具体编码：\",\"{ path:'/', redirect:'/about' }\"]},\"59\":{\"h\":\"5.1【准备一个效果】\"},\"60\":{\"h\":\"5.2【搭建 pinia 环境】\",\"t\":[\"第一步：npm install pinia\",\"第二步：操作src/main.ts\",\"import { createApp } from \\\"vue\\\"; import App from \\\"./App.vue\\\"; /* 引入createPinia，用于创建pinia */ import { createPinia } from \\\"pinia\\\"; /* 创建pinia */ const pinia = createPinia(); const app = createApp(App); /* 使用插件 */ { } app.use(pinia); app.mount(\\\"#app\\\");\",\"此时开发者工具中已经有了pinia选项\"]},\"61\":{\"h\":\"5.3【存储+读取数据】\",\"t\":[\"Store是一个保存：状态、业务逻辑 的实体，每个组件都可以读取、写入它。\",\"它有三个概念：state、getter、action，相当于组件中的： data、 computed 和 methods。\",\"具体编码：src/store/count.ts\",\"// 引入defineStore用于创建store import { defineStore } from \\\"pinia\\\"; // 定义并暴露一个store export const useCountStore = defineStore(\\\"count\\\", { // 动作 actions: {}, // 状态 state() { return { sum: 6, }; }, // 计算 getters: {}, });\",\"具体编码：src/store/talk.ts\",\"// 引入defineStore用于创建store import { defineStore } from \\\"pinia\\\"; // 定义并暴露一个store export const useTalkStore = defineStore(\\\"talk\\\", { // 动作 actions: {}, // 状态 state() { return { talkList: [ { id: \\\"yuysada01\\\", content: \\\"你今天有点怪，哪里怪？怪好看的！\\\" }, { id: \\\"yuysada02\\\", content: \\\"草莓、蓝莓、蔓越莓，你想我了没？\\\" }, { id: \\\"yuysada03\\\", content: \\\"心里给你留了一块地，我的死心塌地\\\" }, ], }; }, // 计算 getters: {}, });\",\"组件中使用state中的数据\",\"<template> <h2>当前求和为：{{ sumStore.sum }}</h2> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> // 引入对应的useXxxxxStore import { useSumStore } from \\\"@/store/sum\\\"; // 调用useXxxxxStore得到对应的store const sumStore = useSumStore(); </script>\",\"<template> <ul> <li v-for=\\\"talk in talkStore.talkList\\\" :key=\\\"talk.id\\\"> {{ talk.content }} </li> </ul> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> import axios from \\\"axios\\\"; import { useTalkStore } from \\\"@/store/talk\\\"; const talkStore = useTalkStore(); </script>\"]},\"62\":{\"h\":\"5.4.【修改数据】(三种方式)\",\"t\":[\"第一种修改方式，直接修改\",\"countStore.sum = 666;\",\"第二种修改方式：批量修改\",\"countStore.$patch({ sum: 999, school: \\\"atguigu\\\", });\",\"第三种修改方式：借助action修改（action中可以编写一些业务逻辑）\",\"import { defineStore } from \\\"pinia\\\"; export const useCountStore = defineStore(\\\"count\\\", { /*************/ actions: { //加 increment(value: number) { if (this.sum < 10) { //操作countStore中的sum this.sum += value; } }, //减 decrement(value: number) { if (this.sum > 1) { this.sum -= value; } }, }, /*************/ });\",\"组件中调用action即可\",\"// 使用countStore const countStore = useCountStore(); // 调用对应action countStore.incrementOdd(n.value);\"]},\"63\":{\"h\":\"5.5.【storeToRefs】\",\"t\":[\"借助storeToRefs将store中的数据转为ref对象，方便在模板中使用。\",\"注意：pinia提供的storeToRefs只会将数据做转换，而Vue的toRefs会转换store中数据。\",\"<template> <div class=\\\"count\\\"> <h2>当前求和为：{{ sum }}</h2> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Count\\\"> import { useCountStore } from \\\"@/store/count\\\"; /* 引入storeToRefs */ import { storeToRefs } from \\\"pinia\\\"; /* 得到countStore */ const countStore = useCountStore(); /* 使用storeToRefs转换countStore，随后解构 */ const { sum } = storeToRefs(countStore); </script>\"]},\"64\":{\"h\":\"5.6.【getters】\",\"t\":[\"概念：当state中的数据，需要经过处理后再使用时，可以使用getters配置。\",\"追加getters配置。\",\"// 引入defineStore用于创建store import { defineStore } from \\\"pinia\\\"; // 定义并暴露一个store export const useCountStore = defineStore(\\\"count\\\", { // 动作 actions: { /************/ }, // 状态 state() { return { sum: 1, school: \\\"atguigu\\\", }; }, // 计算 getters: { bigSum: (state): number => state.sum * 10, upperSchool(): string { return this.school.toUpperCase(); }, }, });\",\"组件中读取数据：\",\"const { increment, decrement } = countStore; let { sum, school, bigSum, upperSchool } = storeToRefs(countStore);\"]},\"65\":{\"h\":\"5.7.【$subscribe】\",\"t\":[\"通过 store 的 $subscribe() 方法侦听 state 及其变化\",\"talkStore.$subscribe((mutate, state) => { console.log(\\\"LoveTalk\\\", mutate, state); localStorage.setItem(\\\"talk\\\", JSON.stringify(talkList.value)); });\"]},\"66\":{\"h\":\"5.8. 【store 组合式写法】\",\"t\":[\"import { defineStore } from \\\"pinia\\\"; import axios from \\\"axios\\\"; import { nanoid } from \\\"nanoid\\\"; import { reactive } from \\\"vue\\\"; export const useTalkStore = defineStore(\\\"talk\\\", () => { // talkList就是state const talkList = reactive( JSON.parse(localStorage.getItem(\\\"talkList\\\") as string) || [] ); // getATalk函数相当于action async function getATalk() { // 发请求，下面这行的写法是：连续解构赋值+重命名 let { data: { content: title }, } = await axios.get(\\\"https://api.uomg.com/api/rand.qinghua?format=json\\\"); // 把请求回来的字符串，包装成一个对象 let obj = { id: nanoid(), title }; // 放到数组中 talkList.unshift(obj); } return { talkList, getATalk }; });\",\"Vue3组件通信和Vue2的区别：\",\"移出事件总线，使用mitt代替。\",\"vuex换成了pinia。\",\"把.sync优化到了v-model里面了。\",\"把$listeners所有的东西，合并到$attrs中了。\",\"$children被砍掉了。\",\"常见搭配形式：\"]},\"67\":{\"h\":\"6.1. 【props】\",\"t\":[\"概述：props是使用频率最高的一种通信方式，常用与 ：父 ↔ 子。\",\"若 父传子：属性值是非函数。\",\"若 子传父：属性值是函数。\",\"父组件：\",\"<template> <div class=\\\"father\\\"> <h3>父组件，</h3> <h4>我的车：{{ car }}</h4> <h4>儿子给的玩具：{{ toy }}</h4> <Child :car=\\\"car\\\" :getToy=\\\"getToy\\\" /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from \\\"./Child.vue\\\"; import { ref } from \\\"vue\\\"; // 数据 const car = ref(\\\"奔驰\\\"); const toy = ref(); // 方法 function getToy(value: string) { toy.value = value; } </script>\",\"子组件\",\"<template> <div class=\\\"child\\\"> <h3>子组件</h3> <h4>我的玩具：{{ toy }}</h4> <h4>父给我的车：{{ car }}</h4> <button @click=\\\"getToy(toy)\\\">玩具给父亲</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Child\\\"> import { ref } from \\\"vue\\\"; const toy = ref(\\\"奥特曼\\\"); defineProps([\\\"car\\\", \\\"getToy\\\"]); </script>\"]},\"68\":{\"h\":\"6.2. 【自定义事件】\",\"t\":[\"概述：自定义事件常用于：子 => 父。\",\"注意区分好：原生事件、自定义事件。\",\"原生事件： \",\"事件名是特定的（click、mosueenter等等）\",\"事件对象$event: 是包含事件相关信息的对象（pageX、pageY、target、keyCode）\",\"自定义事件： \",\"事件名是任意名称\",\"事件对象$event: 是调用emit时所提供的数据，可以是任意类型！！！\",\"示例：\",\"<!--在父组件中，给子组件绑定自定义事件：--> <Child @send-toy=\\\"toy = $event\\\" /> <!--注意区分原生事件与自定义事件中的$event--> <button @click=\\\"toy = $event\\\">测试</button>\",\"//子组件中，触发事件： this.$emit(\\\"send-toy\\\", 具体数据);\"]},\"69\":{\"h\":\"6.3. 【mitt】\",\"t\":[\"概述：与消息订阅与发布（pubsub）功能类似，可以实现任意组件间通信。\",\"安装mitt\",\"npm i mitt\",\"新建文件：src\\\\utils\\\\emitter.ts\",\"// 引入mitt import mitt from \\\"mitt\\\"; // 创建emitter const emitter = mitt(); /* // 绑定事件 emitter.on('abc',(value)=>{ console.log('abc事件被触发',value) }) emitter.on('xyz',(value)=>{ console.log('xyz事件被触发',value) }) setInterval(() => { // 触发事件 emitter.emit('abc',666) emitter.emit('xyz',777) }, 1000); setTimeout(() => { // 清理事件 emitter.all.clear() }, 3000); */ // 创建并暴露mitt export default emitter;\",\"接收数据的组件中：绑定事件、同时在销毁前解绑事件：\",\"import emitter from \\\"@/utils/emitter\\\"; import { onUnmounted } from \\\"vue\\\"; // 绑定事件 emitter.on(\\\"send-toy\\\", (value) => { console.log(\\\"send-toy事件被触发\\\", value); }); onUnmounted(() => { // 解绑事件 emitter.off(\\\"send-toy\\\"); });\",\"【第三步】：提供数据的组件，在合适的时候触发事件\",\"import emitter from \\\"@/utils/emitter\\\"; function sendToy() { // 触发事件 emitter.emit(\\\"send-toy\\\", toy.value); }\",\"注意这个重要的内置关系，总线依赖着这个内置关系\"]},\"70\":{\"h\":\"6.4.【v-model】\",\"t\":[\"概述：实现 父 ↔ 子 之间相互通信。\",\"前序知识 —— v-model的本质\",\"<!-- 使用v-model指令 --> <input type=\\\"text\\\" v-model=\\\"userName\\\"> <!-- v-model的本质是下面这行代码 --> <input type=\\\"text\\\" :value=\\\"userName\\\" @input=\\\"userName =(<HTMLInputElement>$event.target).value\\\" >\",\"组件标签上的v-model的本质：:moldeValue ＋ update:modelValue事件。\",\"<!-- 组件标签上使用v-model指令 --> <AtguiguInput v-model=\\\"userName\\\" /> <!-- 组件标签上v-model的本质 --> <AtguiguInput :modelValue=\\\"userName\\\" @update:model-value=\\\"userName = $event\\\" />\",\"AtguiguInput组件中：\",\"<template> <div class=\\\"box\\\"> <!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --> <!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--> <input type=\\\"text\\\" :value=\\\"modelValue\\\" @input=\\\"emit('update:model-value', $event.target.value)\\\" /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"AtguiguInput\\\"> // 接收props defineProps([\\\"modelValue\\\"]); // 声明事件 const emit = defineEmits([\\\"update:model-value\\\"]); </script>\",\"也可以更换value，例如改成abc\",\"<!-- 也可以更换value，例如改成abc--> <AtguiguInput v-model:abc=\\\"userName\\\" /> <!-- 上面代码的本质如下 --> <AtguiguInput :abc=\\\"userName\\\" @update:abc=\\\"userName = $event\\\" />\",\"AtguiguInput组件中：\",\"<template> <div class=\\\"box\\\"> <input type=\\\"text\\\" :value=\\\"abc\\\" @input=\\\"emit('update:abc', $event.target.value)\\\" /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"AtguiguInput\\\"> // 接收props defineProps([\\\"abc\\\"]); // 声明事件 const emit = defineEmits([\\\"update:abc\\\"]); </script>\",\"如果value可以更换，那么就可以在组件标签上多次使用v-model\",\"<AtguiguInput v-model:abc=\\\"userName\\\" v-model:xyz=\\\"password\\\" />\"]},\"71\":{\"h\":\"6.5.【$attrs 】\",\"t\":[\"概述：$attrs用于实现当前组件的父组件，向当前组件的子组件通信（祖 → 孙）。\",\"具体说明：$attrs是一个对象，包含所有父组件传入的标签属性。\",\"注意：$attrs会自动排除props中声明的属性(可以认为声明过的 props 被子组件自己“消费”了)\",\"父组件：\",\"<template> <div class=\\\"father\\\"> <h3>父组件</h3> <Child :a=\\\"a\\\" :b=\\\"b\\\" :c=\\\"c\\\" :d=\\\"d\\\" v-bind=\\\"{ x: 100, y: 200 }\\\" :updateA=\\\"updateA\\\" /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from \\\"./Child.vue\\\"; import { ref } from \\\"vue\\\"; let a = ref(1); let b = ref(2); let c = ref(3); let d = ref(4); function updateA(value) { a.value = value; } </script>\",\"子组件：\",\"<template> <div class=\\\"child\\\"> <h3>子组件</h3> <GrandChild v-bind=\\\"$attrs\\\" /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Child\\\"> import GrandChild from \\\"./GrandChild.vue\\\"; </script>\",\"孙组件：\",\"<template> <div class=\\\"grand-child\\\"> <h3>孙组件</h3> <h4>a：{{ a }}</h4> <h4>b：{{ b }}</h4> <h4>c：{{ c }}</h4> <h4>d：{{ d }}</h4> <h4>x：{{ x }}</h4> <h4>y：{{ y }}</h4> <button @click=\\\"updateA(666)\\\">点我更新A</button> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"GrandChild\\\"> defineProps([\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"x\\\", \\\"y\\\", \\\"updateA\\\"]); </script>\"]},\"72\":{\"h\":\"6.6. 【$refs、$parent】\",\"t\":[\"概述：\",\"$refs用于 ：父 → 子。\",\"$parent用于：子 → 父。\",\"原理如下：\",\"属性\",\"说明\",\"$refs\",\"值为对象，包含所有被ref属性标识的DOM元素或组件实例。\",\"$parent\",\"值为对象，当前组件的父组件实例对象。\"]},\"73\":{\"h\":\"6.7. 【provide、inject】\",\"t\":[\"概述：实现祖孙组件直接通信\",\"具体使用：\",\"在祖先组件中通过provide配置向后代组件提供数据\",\"在后代组件中通过inject配置来声明接收数据\",\"具体编码：\",\"【第一步】父组件中，使用provide提供数据\",\"<template> <div class=\\\"father\\\"> <h3>父组件</h3> <h4>资产：{{ money }}</h4> <h4>汽车：{{ car }}</h4> <button @click=\\\"money += 1\\\">资产+1</button> <button @click=\\\"car.price += 1\\\">汽车价格+1</button> <Child /> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Father\\\"> import Child from \\\"./Child.vue\\\"; import { ref, reactive, provide } from \\\"vue\\\"; // 数据 let money = ref(100); let car = reactive({ brand: \\\"奔驰\\\", price: 100, }); // 用于更新money的方法 function updateMoney(value: number) { money.value += value; } // 提供数据 provide(\\\"moneyContext\\\", { money, updateMoney }); provide(\\\"car\\\", car); </script>\",\"注意：子组件中不用编写任何东西，是不受到任何打扰的\",\"【第二步】孙组件中使用inject配置项接受数据。\",\"<template> <div class=\\\"grand-child\\\"> <h3>我是孙组件</h3> <h4>资产：{{ money }}</h4> <h4>汽车：{{ car }}</h4> <button @click=\\\"updateMoney(6)\\\">点我</button> </div> </template>\",\" ## 6.8. 【pinia】 参考之前`pinia`部分的讲解 ## 6.9. 【slot】 ### 1. 默认插槽 ![img](http://49.232.112.44/images/default_slot.png) ```vue 父组件中： <Category title=\\\"今日热门游戏\\\"> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </Category> 子组件中： <template> <div class=\\\"item\\\"> <h3>{{ title }}</h3> <!-- 默认插槽 --> <slot></slot> </div> </template>\"]},\"74\":{\"h\":\"2. 具名插槽\",\"t\":[\"父组件中： <Category title=\\\"今日热门游戏\\\"> <template v-slot:s1> <ul> <li v-for=\\\"g in games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </template> <template #s2> <a href=\\\"\\\">更多</a> </template> </Category> 子组件中： <template> <div class=\\\"item\\\"> <h3>{{ title }}</h3> <slot name=\\\"s1\\\"></slot> <slot name=\\\"s2\\\"></slot> </div> </template>\"]},\"75\":{\"h\":\"3. 作用域插槽\",\"t\":[\"理解：数据在组件的自身，但根据数据生成的结构需要组件的使用者来决定。（新闻数据在News组件中，但使用数据所遍历出来的结构由App组件决定）\",\"具体编码：\",\"父组件中： <Game v-slot=\\\"params\\\"> <!-- <Game v-slot:default=\\\"params\\\"> --> <!-- <Game #default=\\\"params\\\"> --> <ul> <li v-for=\\\"g in params.games\\\" :key=\\\"g.id\\\">{{ g.name }}</li> </ul> </Game> 子组件中： <template> <div class=\\\"category\\\"> <h2>今日游戏榜单</h2> <slot :games=\\\"games\\\" a=\\\"哈哈\\\"></slot> </div> </template> <script setup lang=\\\"ts\\\" name=\\\"Category\\\"> import { reactive } from \\\"vue\\\"; let games = reactive([ { id: \\\"asgdytsa01\\\", name: \\\"英雄联盟\\\" }, { id: \\\"asgdytsa02\\\", name: \\\"王者荣耀\\\" }, { id: \\\"asgdytsa03\\\", name: \\\"红色警戒\\\" }, { id: \\\"asgdytsa04\\\", name: \\\"斗罗大陆\\\" }, ]); </script>\"]},\"76\":{\"h\":\"7.1.【shallowRef 与 shallowReactive 】\"},\"77\":{\"h\":\"\",\"t\":[\"作用：创建一个响应式数据，但只对顶层属性进行响应式处理。\",\"用法：\",\"let myVar = shallowRef(initialValue);\",\"特点：只跟踪引用值的变化，不关心值内部的属性变化。\"]},\"78\":{\"h\":\"\",\"t\":[\"作用：创建一个浅层响应式对象，只会使对象的最顶层属性变成响应式的，对象内部的嵌套属性则不会变成响应式的\",\"用法：\",\"const myObj = shallowReactive({ ... });\",\"特点：对象的顶层属性是响应式的，但嵌套对象的属性不是。\"]},\"79\":{\"h\":\"总结\",\"t\":[\"通过使用 shallowRef() 和 shallowReactive() 来绕开深度响应。浅层式 API 创建的状态只在其顶层是响应式的，对所有深层的对象不会做任何处理，避免了对每一个内部属性做响应式所带来的性能成本，这使得属性的访问变得更快，可提升性能。\"]},\"80\":{\"h\":\"7.2.【readonly 与 shallowReadonly】\"},\"81\":{\"h\":\"\",\"t\":[\"作用：用于创建一个对象的深只读副本。\",\"用法：\",\"const original = reactive({ ... }); const readOnlyCopy = readonly(original);\",\"特点：\",\"对象的所有嵌套属性都将变为只读。\",\"任何尝试修改这个对象的操作都会被阻止（在开发模式下，还会在控制台中发出警告）。\",\"应用场景：\",\"创建不可变的状态快照。\",\"保护全局状态或配置不被修改。\"]},\"82\":{\"h\":\"\",\"t\":[\"作用：与 readonly 类似，但只作用于对象的顶层属性。\",\"用法：\",\"const original = reactive({ ... }); const shallowReadOnlyCopy = shallowReadonly(original);\",\"特点：\",\"只将对象的顶层属性设置为只读，对象内部的嵌套属性仍然是可变的。\",\"适用于只需保护对象顶层属性的场景。\"]},\"83\":{\"h\":\"7.3.【toRaw 与 markRaw】\"},\"84\":{\"h\":\"\",\"t\":[\"作用：用于获取一个响应式对象的原始对象， toRaw 返回的对象不再是响应式的，不会触发视图更新。\",\"官网描述：这是一个可以用于临时读取而不引起代理访问/跟踪开销，或是写入而不触发更改的特殊方法。不建议保存对原始对象的持久引用，请谨慎使用。\",\"何时使用？ —— 在需要将响应式对象传递给非 Vue 的库或外部系统时，使用 toRaw 可以确保它们收到的是普通对象\",\"具体编码：\",\"import { reactive, toRaw, markRaw, isReactive } from \\\"vue\\\"; /* toRaw */ // 响应式对象 let person = reactive({ name: \\\"tony\\\", age: 18 }); // 原始对象 let rawPerson = toRaw(person); /* markRaw */ let citysd = markRaw([ { id: \\\"asdda01\\\", name: \\\"北京\\\" }, { id: \\\"asdda02\\\", name: \\\"上海\\\" }, { id: \\\"asdda03\\\", name: \\\"天津\\\" }, { id: \\\"asdda04\\\", name: \\\"重庆\\\" }, ]); // 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了 let citys2 = reactive(citys); console.log(isReactive(person)); console.log(isReactive(rawPerson)); console.log(isReactive(citys)); console.log(isReactive(citys2));\"]},\"85\":{\"h\":\"\",\"t\":[\"作用：标记一个对象，使其永远不会变成响应式的。\",\"例如使用mockjs时，为了防止误把mockjs变为响应式对象，可以使用 markRaw 去标记mockjs\",\"编码：\",\"/* markRaw */ let citys = markRaw([ { id: \\\"asdda01\\\", name: \\\"北京\\\" }, { id: \\\"asdda02\\\", name: \\\"上海\\\" }, { id: \\\"asdda03\\\", name: \\\"天津\\\" }, { id: \\\"asdda04\\\", name: \\\"重庆\\\" }, ]); // 根据原始对象citys去创建响应式对象citys2 —— 创建失败，因为citys被markRaw标记了 let citys2 = reactive(citys);\"]},\"86\":{\"h\":\"7.4.【customRef】\",\"t\":[\"作用：创建一个自定义的ref，并对其依赖项跟踪和更新触发进行逻辑控制。\",\"实现防抖效果（useSumRef.ts）：\",\"import { customRef } from \\\"vue\\\"; export default function (initValue: string, delay: number) { let msg = customRef((track, trigger) => { let timer: number; return { get() { track(); // 告诉Vue数据msg很重要，要对msg持续关注，一旦变化就更新 return initValue; }, set(value) { clearTimeout(timer); timer = setTimeout(() => { initValue = value; trigger(); //通知Vue数据msg变化了 }, delay); }, }; }); return { msg }; }\",\"组件中使用：\"]},\"87\":{\"h\":\"8.1. 【Teleport】\",\"t\":[\"什么是 Teleport？—— Teleport 是一种能够将我们的组件 html 结构移动到指定位置的技术。\",\"<teleport to=\\\"body\\\"> <div class=\\\"modal\\\" v-show=\\\"isShow\\\"> <h2>我是一个弹窗</h2> <p>我是弹窗中的一些内容</p> <button @click=\\\"isShow = false\\\">关闭弹窗</button> </div> </teleport>\"]},\"88\":{\"h\":\"8.2. 【Suspense】\",\"t\":[\"等待异步组件时渲染一些额外内容，让应用有更好的用户体验\",\"使用步骤： \",\"异步引入组件\",\"使用Suspense包裹组件，并配置好default 与 fallback\",\"import { defineAsyncComponent, Suspense } from \\\"vue\\\"; const Child = defineAsyncComponent(() => import(\\\"./Child.vue\\\"));\",\"<template> <div class=\\\"app\\\"> <h3>我是App组件</h3> <Suspense> <template v-slot:default> <Child /> </template> <template v-slot:fallback> <h3>加载中.......</h3> </template> </Suspense> </div> </template>\"]},\"89\":{\"h\":\"8.3.【全局 API 转移到应用对象】\",\"t\":[\"app.component\",\"app.config\",\"app.directive\",\"app.mount\",\"app.unmount\",\"app.use\"]},\"90\":{\"h\":\"8.4.【其他】\",\"t\":[\"过渡类名 v-enter 修改为 v-enter-from、过渡类名 v-leave 修改为 v-leave-from。\",\"keyCode 作为 v-on 修饰符的支持。\",\"v-model 指令在组件上的使用已经被重新设计，替换掉了 v-bind.sync。\",\"v-if 和 v-for 在同一个元素身上使用时的优先级发生了变化。\",\"移除了$on、$off 和 $once 实例方法。\",\"移除了过滤器 filter。\",\"移除了$children 实例 propert。\",\"......\"]},\"91\":{\"c\":[\"教程\"]},\"92\":{\"c\":[\"前端\",\"文档\",\"VUE3\"]},\"93\":{\"h\":\"微信小程序\",\"t\":[\"官方文档\"]},\"94\":{\"h\":\"01_小程序 - 起步\"},\"95\":{\"c\":[\"教程\"]},\"96\":{\"c\":[\"前端\",\"文档\",\"微信小程序\"]},\"97\":{\"h\":\"其他\"},\"98\":{\"h\":\"查看远程仓库的路径\",\"t\":[\"git remote -v\"]},\"99\":{\"h\":\"IOS端微信公众号页面获取签名与权限的坑\",\"t\":[\"问题：第一次获取权限会提示签名错误，刷新页面就不报错了，在安卓端没问题；\",\"原因：在安卓端获取签名需要传当前页面的URL，但是在IOS端需要传第一次进入该网站时的URL;\",\"解决方案：我遇到问题时是使用uniapp开发的h5,在app.vue中有onLaunch方法，是应用初始化时触发一次(页面刷新也是初始化)，我在这里记录应用初始化时的url,然后在其他页面使用时判断是ios端就使用这个url。\"]},\"100\":{\"c\":[\"其他\"]},\"101\":{\"c\":[\"未分类\"]},\"102\":{\"h\":\"Flex 布局\",\"t\":[\"作者： 阮一峰\",\"网页布局（layout）是 CSS 的一个重点应用。\",\"布局的传统解决方案，基于盒状模型，依赖 display 属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。\",\"Flex 布局将成为未来布局的首选方案。本文介绍它的语法，下一篇文章给出常见布局的 Flex 写法。\"]},\"103\":{\"h\":\"一、Flex 布局是什么？\",\"t\":[\"Flex 是 Flexible Box 的缩写，意为\\\"弹性布局\\\"，用来为盒状模型提供最大的灵活性。\",\"任何一个容器都可以指定为 Flex 布局。\",\".box{ display: flex; }\",\"行内元素也可以使用 Flex 布局。\",\".box{ display: inline-flex; }\",\"Webkit 内核的浏览器，必须加上-webkit前缀。\",\".box{ display: -webkit-flex; /* Safari */ display: flex; }\",\"注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。\"]},\"104\":{\"h\":\"二、基本概念\",\"t\":[\"采用 Flex 布局的元素，称为 Flex 容器（flex container），简称\\\"容器\\\"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称\\\"项目\\\"。\",\"img\",\"容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。\",\"项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。\"]},\"105\":{\"h\":\"三、容器的属性\",\"t\":[\"以下6个属性设置在容器上。\",\"flex-direction\",\"flex-wrap\",\"flex-flow\",\"justify-content\",\"align-items\",\"align-content\"]},\"106\":{\"h\":\"3.1 flex-direction属性\",\"t\":[\"flex-direction属性决定主轴的方向（即项目的排列方向）。\",\".box { flex-direction: row | row-reverse | column | column-reverse; }\",\"img\",\"它可能有4个值。\",\"row（默认值）：主轴为水平方向，起点在左端。\",\"row-reverse：主轴为水平方向，起点在右端。\",\"column：主轴为垂直方向，起点在上沿。\",\"column-reverse：主轴为垂直方向，起点在下沿。\"]},\"107\":{\"h\":\"3.2 flex-wrap属性\",\"t\":[\"默认情况下，项目都排在一条线（又称\\\"轴线\\\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。\",\"img\",\".box{ flex-wrap: nowrap | wrap | wrap-reverse; }\",\"它可能取三个值。\",\"（1）nowrap（默认）：不换行。\",\"img\",\"（2）wrap：换行，第一行在上方。\",\"img\",\"（3）wrap-reverse：换行，第一行在下方。\",\"img\"]},\"108\":{\"h\":\"3.3 flex-flow\",\"t\":[\"flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\",\".box { flex-flow: <flex-direction> || <flex-wrap>; }\"]},\"109\":{\"h\":\"3.4 justify-content属性\",\"t\":[\"justify-content属性定义了项目在主轴上的对齐方式。\",\".box { justify-content: flex-start | flex-end | center | space-between | space-around; }\",\"img\",\"它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。\",\"flex-start（默认值）：左对齐\",\"flex-end：右对齐\",\"center： 居中\",\"space-between：两端对齐，项目之间的间隔都相等。\",\"space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\"]},\"110\":{\"h\":\"3.5 align-items属性\",\"t\":[\"align-items属性定义项目在交叉轴上如何对齐。\",\".box { align-items: flex-start | flex-end | center | baseline | stretch; }\",\"img\",\"它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。\",\"flex-start：交叉轴的起点对齐。\",\"flex-end：交叉轴的终点对齐。\",\"center：交叉轴的中点对齐。\",\"baseline: 项目的第一行文字的基线对齐。\",\"stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\"]},\"111\":{\"h\":\"3.6 align-content属性\",\"t\":[\"align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。\",\".box { align-content: flex-start | flex-end | center | space-between | space-around | stretch; }\",\"img\",\"该属性可能取6个值。\",\"flex-start：与交叉轴的起点对齐。\",\"flex-end：与交叉轴的终点对齐。\",\"center：与交叉轴的中点对齐。\",\"space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。\",\"space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。\",\"stretch（默认值）：轴线占满整个交叉轴。\"]},\"112\":{\"h\":\"四、项目的属性\",\"t\":[\"以下6个属性设置在项目上。\",\"order\",\"flex-grow\",\"flex-shrink\",\"flex-basis\",\"flex\",\"align-self\"]},\"113\":{\"h\":\"4.1 order属性\",\"t\":[\"order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\",\".item { order: <integer>; }\",\"img\"]},\"114\":{\"h\":\"4.2 flex-grow属性\",\"t\":[\"flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。\",\".item { flex-grow: <number>; /* default 0 */ }\",\"img\",\"如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。\"]},\"115\":{\"h\":\"4.3 flex-shrink属性\",\"t\":[\"flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\",\".item { flex-shrink: <number>; /* default 1 */ }\",\"img\",\"如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。\",\"负值对该属性无效。\"]},\"116\":{\"h\":\"4.4 flex-basis属性\",\"t\":[\"flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。\",\".item { flex-basis: <length> | auto; /* default auto */ }\",\"它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\"]},\"117\":{\"h\":\"4.5 flex属性\",\"t\":[\"flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。\",\".item { flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ] }\",\"该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。\",\"建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\"]},\"118\":{\"h\":\"4.6 align-self属性\",\"t\":[\"align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。\",\".item { align-self: auto | flex-start | flex-end | center | baseline | stretch; }\",\"img\",\"该属性可能取6个值，除了auto，其他都与align-items属性完全一致。\"]},\"119\":{\"c\":[\"教程\"]},\"120\":{\"c\":[\"前端\",\"文档\",\"Flex\"]},\"121\":{\"h\":\"Grid 布局\",\"t\":[\"作者： 阮一峰\"]},\"122\":{\"h\":\"一、概述\",\"t\":[\"网格布局（Grid）是最强大的 CSS 布局方案。\",\"它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。以前，只能通过复杂的 CSS 框架达到的效果，现在浏览器内置了。\",\"img\",\"上图这样的布局，就是 Grid 布局的拿手好戏。\",\"Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。\",\"Flex 布局是轴线布局，只能指定\\\"项目\\\"针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成\\\"行\\\"和\\\"列\\\"，产生单元格，然后指定\\\"项目所在\\\"的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。\"]},\"123\":{\"h\":\"二、基本概念\",\"t\":[\"学习 Grid 布局之前，需要了解一些基本概念。\"]},\"124\":{\"h\":\"2.1 容器和项目\",\"t\":[\"采用网格布局的区域，称为\\\"容器\\\"（container）。容器内部采用网格定位的子元素，称为\\\"项目\\\"（item）。\",\"<div> <div><p>1</p></div> <div><p>2</p></div> <div><p>3</p></div> </div>\",\"上面代码中，最外层的<div>元素就是容器，内层的三个<div>元素就是项目。\",\"注意：项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的<p>元素就不是项目。Grid 布局只对项目生效。\"]},\"125\":{\"h\":\"2.2 行和列\",\"t\":[\"容器里面的水平区域称为\\\"行\\\"（row），垂直区域称为\\\"列\\\"（column）。\",\"img\",\"上图中，水平的深色区域就是\\\"行\\\"，垂直的深色区域就是\\\"列\\\"。\"]},\"126\":{\"h\":\"2.3 单元格\",\"t\":[\"行和列的交叉区域，称为\\\"单元格\\\"（cell）。\",\"正常情况下，n行和m列会产生n x m个单元格。比如，3行3列会产生9个单元格。\"]},\"127\":{\"h\":\"2.4 网格线\",\"t\":[\"划分网格的线，称为\\\"网格线\\\"（grid line）。水平网格线划分出行，垂直网格线划分出列。\",\"正常情况下，n行有n + 1根水平网格线，m列有m + 1根垂直网格线，比如三行就有四根水平网格线。\",\"img\",\"上图是一个 4 x 4 的网格，共有5根水平网格线和5根垂直网格线。\"]},\"128\":{\"h\":\"三、容器属性\",\"t\":[\"Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。\"]},\"129\":{\"h\":\"3.1 display 属性\",\"t\":[\"display: grid指定一个容器采用网格布局。\",\"div { display: grid; }\",\"img\",\"上图是display: grid的效果。\",\"默认情况下，容器元素都是块级元素，但也可以设成行内元素。\",\"div { display: inline-grid; }\",\"上面代码指定div是一个行内元素，该元素内部采用网格布局。\",\"img\",\"上图是display: inline-grid的效果。\",\"注意，设为网格布局以后，容器子元素（项目）的float、display: inline-block、display: table-cell、vertical-align和column-*等设置都将失效。\"]},\"130\":{\"h\":\"3.2 grid-template-columns 属性， grid-template-rows 属性\",\"t\":[\"容器指定了网格布局以后，接着就要划分行和列。grid-template-columns属性定义每一列的列宽，grid-template-rows属性定义每一行的行高。\",\".container { display: grid; grid-template-columns: 100px 100px 100px; grid-template-rows: 100px 100px 100px; }\",\"上面代码指定了一个三行三列的网格，列宽和行高都是100px。\",\"img\",\"除了使用绝对单位，也可以使用百分比。\",\".container { display: grid; grid-template-columns: 33.33% 33.33% 33.33%; grid-template-rows: 33.33% 33.33% 33.33%; }\",\"（1）repeat()\",\"有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用repeat()函数，简化重复的值。上面的代码用repeat()改写如下。\",\".container { display: grid; grid-template-columns: repeat(3, 33.33%); grid-template-rows: repeat(3, 33.33%); }\",\"repeat()接受两个参数，第一个参数是重复的次数（上例是3），第二个参数是所要重复的值。\",\"repeat()重复某种模式也是可以的。\",\"grid-template-columns: repeat(2, 100px 20px 80px);\",\"上面代码定义了6列，第一列和第四列的宽度为100px，第二列和第五列为20px，第三列和第六列为80px。\",\"img\",\"（2）auto-fill 关键字\",\"有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行（或每一列）容纳尽可能多的单元格，这时可以使用auto-fill关键字表示自动填充。\",\".container { display: grid; grid-template-columns: repeat(auto-fill, 100px); }\",\"上面代码表示每列宽度100px，然后自动填充，直到容器不能放置更多的列。\",\"img\",\"除了auto-fill，还有一个关键字auto-fit，两者的行为基本是相同的。只有当容器足够宽，可以在一行容纳所有单元格，并且单元格宽度不固定的时候，才会有行为差异：auto-fill会用空格子填满剩余宽度，auto-fit则会尽量扩大单元格的宽度。\",\"（3）fr 关键字\",\"为了方便表示比例关系，网格布局提供了fr关键字（fraction 的缩写，意为\\\"片段\\\"）。如果两列的宽度分别为1fr和2fr，就表示后者是前者的两倍。\",\".container { display: grid; grid-template-columns: 1fr 1fr; }\",\"上面代码表示两个相同宽度的列。\",\"img\",\"fr可以与绝对长度的单位结合使用，这时会非常方便。\",\".container { display: grid; grid-template-columns: 150px 1fr 2fr; }\",\"上面代码表示，第一列的宽度为150像素，第二列的宽度是第三列的一半。\",\"img\",\"（4）minmax()\",\"minmax()函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。\",\"grid-template-columns: 1fr 1fr minmax(100px, 1fr);\",\"上面代码中，minmax(100px, 1fr)表示列宽不小于100px，不大于1fr。\",\"（5）auto 关键字\",\"auto关键字表示由浏览器自己决定长度。\",\"grid-template-columns: 100px auto 100px;\",\"上面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了min-width，且这个值大于最大宽度。\",\"（6）网格线的名称\",\"grid-template-columns属性和grid-template-rows属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。\",\".container { display: grid; grid-template-columns: [c1] 100px [c2] 100px [c3] auto [c4]; grid-template-rows: [r1] 100px [r2] 100px [r3] auto [r4]; }\",\"上面代码指定网格布局为3行 x 3列，因此有4根垂直网格线和4根水平网格线。方括号里面依次是这八根线的名字。\",\"网格布局允许同一根线有多个名字，比如[fifth-line row-5]。\",\"（7）布局实例\",\"grid-template-columns属性对于网页布局非常有用。两栏式布局只需要一行代码。\",\".wrapper { display: grid; grid-template-columns: 70% 30%; }\",\"上面代码将左边栏设为70%，右边栏设为30%。\",\"传统的十二网格布局，写起来也很容易。\",\"grid-template-columns: repeat(12, 1fr);\"]},\"131\":{\"h\":\"3.3 grid-row-gap 属性， grid-column-gap 属性， grid-gap 属性\",\"t\":[\"grid-row-gap属性设置行与行的间隔（行间距），grid-column-gap属性设置列与列的间隔（列间距）。\",\".container { grid-row-gap: 20px; grid-column-gap: 20px; }\",\"上面代码中，grid-row-gap用于设置行间距，grid-column-gap用于设置列间距。\",\"img\",\"grid-gap属性是grid-column-gap和grid-row-gap的合并简写形式，语法如下。\",\"grid-gap: <grid-row-gap> <grid-column-gap>;\",\"因此，上面一段 CSS 代码等同于下面的代码。\",\".container { grid-gap: 20px 20px; }\",\"如果grid-gap省略了第二个值，浏览器认为第二个值等于第一个值。\",\"根据最新标准，上面三个属性名的grid-前缀已经删除，grid-column-gap和grid-row-gap写成column-gap和row-gap，grid-gap写成gap。\"]},\"132\":{\"h\":\"3.4 grid-template-areas 属性\",\"t\":[\"网格布局允许指定\\\"区域\\\"（area），一个区域由单个或多个单元格组成。grid-template-areas属性用于定义区域。\",\".container { display: grid; grid-template-columns: 100px 100px 100px; grid-template-rows: 100px 100px 100px; grid-template-areas: 'a b c' 'd e f' 'g h i'; }\",\"上面代码先划分出9个单元格，然后将其定名为a到i的九个区域，分别对应这九个单元格。\",\"多个单元格合并成一个区域的写法如下。\",\"grid-template-areas: 'a a a' 'b b b' 'c c c';\",\"上面代码将9个单元格分成a、b、c三个区域。\",\"下面是一个布局实例。\",\"grid-template-areas: \\\"header header header\\\" \\\"main main sidebar\\\" \\\"footer footer footer\\\";\",\"上面代码中，顶部是页眉区域header，底部是页脚区域footer，中间部分则为main和sidebar。\",\"如果某些区域不需要利用，则使用\\\"点\\\"（.）表示。\",\"grid-template-areas: 'a . c' 'd . f' 'g . i';\",\"上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。\",\"注意，区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为区域名-start，终止网格线自动命名为区域名-end。\",\"比如，区域名为header，则起始位置的水平网格线和垂直网格线叫做header-start，终止位置的水平网格线和垂直网格线叫做header-end。\"]},\"133\":{\"h\":\"3.5 grid-auto-flow 属性\",\"t\":[\"划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是\\\"先行后列\\\"，即先填满第一行，再开始放入第二行，即下图数字的顺序。\",\"img\",\"这个顺序由grid-auto-flow属性决定，默认值是row，即\\\"先行后列\\\"。也可以将它设成column，变成\\\"先列后行\\\"。\",\"grid-auto-flow: column;\",\"上面代码设置了column以后，放置顺序就变成了下图。\",\"img\",\"grid-auto-flow属性除了设置成row和column，还可以设成row dense和column dense。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。\",\"下面的例子让1号项目和2号项目各占据两个单元格，然后在默认的grid-auto-flow: row情况下，会产生下面这样的布局。\",\"img\",\"上图中，1号项目后面的位置是空的，这是因为3号项目默认跟着2号项目，所以会排在2号项目后面。\",\"现在修改设置，设为row dense，表示\\\"先行后列\\\"，并且尽可能紧密填满，尽量不出现空格。\",\"grid-auto-flow: row dense;\",\"上面代码的效果如下。\",\"img\",\"上图会先填满第一行，再填满第二行，所以3号项目就会紧跟在1号项目的后面。8号项目和9号项目就会排到第四行。\",\"如果将设置改为column dense，表示\\\"先列后行\\\"，并且尽量填满空格。\",\"grid-auto-flow: column dense;\",\"上面代码的效果如下。\",\"img\",\"上图会先填满第一列，再填满第2列，所以3号项目在第一列，4号项目在第二列。8号项目和9号项目被挤到了第四列。\"]},\"134\":{\"h\":\"3.6 justify-items 属性， align-items 属性， place-items 属性\",\"t\":[\"justify-items属性设置单元格内容的水平位置（左中右），align-items属性设置单元格内容的垂直位置（上中下）。\",\".container { justify-items: start | end | center | stretch; align-items: start | end | center | stretch; }\",\"这两个属性的写法完全相同，都可以取下面这些值。\",\"start：对齐单元格的起始边缘。\",\"end：对齐单元格的结束边缘。\",\"center：单元格内部居中。\",\"stretch：拉伸，占满单元格的整个宽度（默认值）。\",\".container { justify-items: start; }\",\"上面代码表示，单元格的内容左对齐，效果如下图。\",\"img\",\".container { align-items: start; }\",\"上面代码表示，单元格的内容头部对齐，效果如下图。\",\"img\",\"place-items属性是align-items属性和justify-items属性的合并简写形式。\",\"place-items: <align-items> <justify-items>;\",\"下面是一个例子。\",\"place-items: start end;\",\"如果省略第二个值，则浏览器认为与第一个值相等。\"]},\"135\":{\"h\":\"3.7 justify-content 属性， align-content 属性， place-content 属性\",\"t\":[\"justify-content属性是整个内容区域在容器里面的水平位置（左中右），align-content属性是整个内容区域的垂直位置（上中下）。\",\".container { justify-content: start | end | center | stretch | space-around | space-between | space-evenly; align-content: start | end | center | stretch | space-around | space-between | space-evenly; }\",\"这两个属性的写法完全相同，都可以取下面这些值。（下面的图都以justify-content属性为例，align-content属性的图完全一样，只是将水平方向改成垂直方向。）\",\"start - 对齐容器的起始边框。\",\"img\",\"end - 对齐容器的结束边框。\",\"img\",\"center - 容器内部居中。\",\"img\",\"stretch - 项目大小没有指定时，拉伸占据整个网格容器。\",\"img\",\"space-around - 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与容器边框的间隔大一倍。\",\"img\",\"space-between - 项目与项目的间隔相等，项目与容器边框之间没有间隔。\",\"img\",\"space-evenly - 项目与项目的间隔相等，项目与容器边框之间也是同样长度的间隔。\",\"img\",\"place-content属性是align-content属性和justify-content属性的合并简写形式。\",\"place-content: <align-content> <justify-content>\",\"下面是一个例子。\",\"place-content: space-around space-evenly;\",\"如果省略第二个值，浏览器就会假定第二个值等于第一个值。\"]},\"136\":{\"h\":\"3.8 grid-auto-columns 属性， grid-auto-rows 属性\",\"t\":[\"有时候，一些项目的指定位置，在现有网格的外部。比如网格只有3列，但是某一个项目指定在第5行。这时，浏览器会自动生成多余的网格，以便放置项目。\",\"grid-auto-columns属性和grid-auto-rows属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与grid-template-columns和grid-template-rows完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。\",\"下面的例子里面，划分好的网格是3行 x 3列，但是，8号项目指定在第4行，9号项目指定在第5行。\",\".container { display: grid; grid-template-columns: 100px 100px 100px; grid-template-rows: 100px 100px 100px; grid-auto-rows: 50px; }\",\"上面代码指定新增的行高统一为50px（原始的行高为100px）。\",\"img\"]},\"137\":{\"h\":\"3.9 grid-template 属性， grid 属性\",\"t\":[\"grid-template属性是grid-template-columns、grid-template-rows和grid-template-areas这三个属性的合并简写形式。\",\"grid属性是grid-template-rows、grid-template-columns、grid-template-areas、 grid-auto-rows、grid-auto-columns、grid-auto-flow这六个属性的合并简写形式。\",\"从易读易写的角度考虑，还是建议不要合并属性，所以这里就不详细介绍这两个属性了。\"]},\"138\":{\"h\":\"四、项目属性\",\"t\":[\"下面这些属性定义在项目上面。\"]},\"139\":{\"h\":\"4.1 grid-column-start 属性， grid-column-end 属性， grid-row-start 属性， grid-row-end 属性\",\"t\":[\"项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。\",\"grid-column-start属性：左边框所在的垂直网格线\",\"grid-column-end属性：右边框所在的垂直网格线\",\"grid-row-start属性：上边框所在的水平网格线\",\"grid-row-end属性：下边框所在的水平网格线\",\".item-1 { grid-column-start: 2; grid-column-end: 4; }\",\"上面代码指定，1号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。\",\"img\",\"上图中，只指定了1号项目的左右边框，没有指定上下边框，所以会采用默认位置，即上边框是第一根水平网格线，下边框是第二根水平网格线。\",\"除了1号项目以外，其他项目都没有指定位置，由浏览器自动布局，这时它们的位置由容器的grid-auto-flow属性决定，这个属性的默认值是row，因此会\\\"先行后列\\\"进行排列。读者可以把这个属性的值分别改成column、row dense和column dense，看看其他项目的位置发生了怎样的变化。\",\"下面的例子是指定四个边框位置的效果。\",\".item-1 { grid-column-start: 1; grid-column-end: 3; grid-row-start: 2; grid-row-end: 4; }\",\"img\",\"这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。\",\".item-1 { grid-column-start: header-start; grid-column-end: header-end; }\",\"上面代码中，左边框和右边框的位置，都指定为网格线的名字。\",\"这四个属性的值还可以使用span关键字，表示\\\"跨越\\\"，即左右边框（上下边框）之间跨越多少个网格。\",\".item-1 { grid-column-start: span 2; }\",\"上面代码表示，1号项目的左边框距离右边框跨越2个网格。\",\"img\",\"这与下面的代码效果完全一样。\",\".item-1 { grid-column-end: span 2; }\",\"使用这四个属性，如果产生了项目的重叠，则使用z-index属性指定项目的重叠顺序。\"]},\"140\":{\"h\":\"4.2 grid-column 属性， grid-row 属性\",\"t\":[\"grid-column属性是grid-column-start和grid-column-end的合并简写形式，grid-row属性是grid-row-start属性和grid-row-end的合并简写形式。\",\".item { grid-column: <start-line> / <end-line>; grid-row: <start-line> / <end-line>; }\",\"下面是一个例子。\",\".item-1 { grid-column: 1 / 3; grid-row: 1 / 2; } /* 等同于 */ .item-1 { grid-column-start: 1; grid-column-end: 3; grid-row-start: 1; grid-row-end: 2; }\",\"上面代码中，项目item-1占据第一行，从第一根列线到第三根列线。\",\"这两个属性之中，也可以使用span关键字，表示跨越多少个网格。\",\".item-1 { background: #b03532; grid-column: 1 / 3; grid-row: 1 / 3; } /* 等同于 */ .item-1 { background: #b03532; grid-column: 1 / span 2; grid-row: 1 / span 2; }\",\"上面代码中，项目item-1占据的区域，包括第一行 + 第二行、第一列 + 第二列。\",\"img\",\"斜杠以及后面的部分可以省略，默认跨越一个网格。\",\".item-1 { grid-column: 1; grid-row: 1; }\",\"上面代码中，项目item-1占据左上角第一个网格。\"]},\"141\":{\"h\":\"4.3 grid-area 属性\",\"t\":[\"grid-area属性指定项目放在哪一个区域。\",\".item-1 { grid-area: e; }\",\"上面代码中，1号项目位于e区域，效果如下图。\",\"img\",\"grid-area属性还可用作grid-row-start、grid-column-start、grid-row-end、grid-column-end的合并简写形式，直接指定项目的位置。\",\".item { grid-area: <row-start> / <column-start> / <row-end> / <column-end>; }\",\"下面是一个例子。\",\".item-1 { grid-area: 1 / 1 / 3 / 3; }\"]},\"142\":{\"h\":\"4.4 justify-self 属性， align-self 属性， place-self 属性\",\"t\":[\"justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单个项目。\",\"align-self属性设置单元格内容的垂直位置（上中下），跟align-items属性的用法完全一致，也是只作用于单个项目。\",\".item { justify-self: start | end | center | stretch; align-self: start | end | center | stretch; }\",\"这两个属性都可以取下面四个值。\",\"start：对齐单元格的起始边缘。\",\"end：对齐单元格的结束边缘。\",\"center：单元格内部居中。\",\"stretch：拉伸，占满单元格的整个宽度（默认值）。\",\"下面是justify-self: start的例子。\",\".item-1 { justify-self: start; }\",\"img\",\"place-self属性是align-self属性和justify-self属性的合并简写形式。\",\"place-self: <align-self> <justify-self>;\",\"下面是一个例子。\",\"place-self: center center;\",\"如果省略第二个值，place-self属性会认为这两个值相等。\"]},\"143\":{\"c\":[\"教程\"]},\"144\":{\"c\":[\"前端\",\"文档\",\"Grid\"]},\"145\":{\"h\":\"nvm指令\",\"t\":[\" // 1、查看已经安装的node版本 nvm ls // 2、查看可以安装的node版本 nvm ls available // 3、安装指定版本 nvm install 版本号 // 4、切换到指定版本 nvm use 版本号 // 5、显示当前版本 nvm current // 6、给不同的版本添加别名 nvm alias // 7、删除已定义的别名 nvm unalias // 8、在当前环境下， 重新全局安装指定版本号的npm包 nvm reinstall-packages // 9、打开nodejs控制 nvm on // 10、关闭nodejs控制 nvm off // 11、查看设置代理 nvm proxy // 12、卸载指定版本 nvm uninstall 版本号 // 13、设置和查看root路径 nvm root [path] // 14、查看nvm版本 nvm version\"]},\"146\":{\"c\":[\"教程\"]},\"147\":{\"c\":[\"前端\",\"文档\",\"指令\",\"nvm\"]},\"148\":{\"h\":\"TypeScript 装饰器\"},\"149\":{\"c\":[\"教程\"]},\"150\":{\"c\":[\"前端\",\"文档\",\"TS\",\"装饰器\"]},\"151\":{\"h\":\"TypeScript 快速上手\",\"t\":[\"https://blog.csdn.net/ingenuou_/article/details/142790425\"]},\"152\":{\"c\":[\"教程\"]},\"153\":{\"c\":[\"前端\",\"文档\",\"TS\"]},\"154\":{\"h\":\"萌豆\"},\"155\":{\"h\":\"后台线上访问地址\",\"t\":[\"英邦后台管理系统\"]},\"156\":{\"h\":\"代码路径\",\"t\":[\"uniapp(app/公众号/小程序)\",\"后台管理\",\"分享页\"]},\"157\":{\"h\":\"接口文档\",\"t\":[\"项目接口文档\",\"斗拱-企业商户进件-服务商平台\",\"点餐\",\"小桔\"]},\"158\":{\"h\":\"相关文档\",\"t\":[\"uni-app官网\",\"uview-plus 3.0 - 全面兼容nvue的uni-app生态框架 - uni-app UI框架\",\"Sortable.js中文网|配置\",\"vue-draggable-plus\",\"开发配置 - 微信支付商户平台\",\"消息介绍 | 融云开发者文档\",\"uview-plus去除广告弹窗_uview-plus广告-CSDN博客\",\"z-paging\"]},\"159\":{\"c\":[\"项目\"]},\"160\":{\"c\":[\"英邦科技\",\"萌豆\",\"工作\"]},\"161\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"162\":{\"h\":\"Pages\"},\"163\":{\"h\":\"Frontend\"},\"164\":{\"h\":\"Css\"},\"165\":{\"h\":\"Project\"}},\"dirtCount\":0,\"index\":[[\"工作\",{\"2\":{\"160\":1}}],[\"z\",{\"1\":{\"158\":1}}],[\"zhuye\",{\"1\":{\"50\":1,\"51\":1}}],[\"zhang\",{\"1\":{\"19\":1,\"24\":1,\"28\":1,\"33\":1}}],[\"融云开发者文档\",{\"1\":{\"158\":1}}],[\"微信支付商户平台\",{\"1\":{\"158\":1}}],[\"微信小程序\",{\"0\":{\"93\":1},\"2\":{\"96\":1}}],[\"开发配置\",{\"1\":{\"158\":1}}],[\"开启replace模式\",{\"1\":{\"56\":1}}],[\"相关文档\",{\"0\":{\"158\":1}}],[\"相当于组件中的\",{\"1\":{\"61\":1}}],[\"服务商平台\",{\"1\":{\"157\":1}}],[\"企业商户进件\",{\"1\":{\"157\":1}}],[\"斗拱\",{\"1\":{\"157\":1}}],[\"斗罗大陆\",{\"1\":{\"75\":1}}],[\"分享页\",{\"1\":{\"156\":1}}],[\"分别定位在哪根网格线\",{\"1\":{\"139\":1}}],[\"分别对应这九个单元格\",{\"1\":{\"132\":1}}],[\"分别为最小值和最大值\",{\"1\":{\"130\":1}}],[\"分别为push和replace\",{\"1\":{\"56\":1}}],[\"分别是\",{\"1\":{\"43\":1}}],[\"公众号\",{\"1\":{\"156\":1}}],[\"英邦科技\",{\"2\":{\"160\":1}}],[\"英邦后台管理系统\",{\"1\":{\"155\":1}}],[\"英雄联盟\",{\"1\":{\"29\":1,\"30\":1,\"75\":1}}],[\"萌豆\",{\"0\":{\"154\":1},\"2\":{\"160\":1}}],[\"快速上手\",{\"0\":{\"151\":1}}],[\"装饰器\",{\"0\":{\"148\":1},\"2\":{\"150\":1}}],[\"设置和查看root路径\",{\"1\":{\"145\":1}}],[\"设为row\",{\"1\":{\"133\":1}}],[\"设为网格布局以后\",{\"1\":{\"129\":1}}],[\"设为\",{\"1\":{\"103\":1}}],[\"关闭nodejs控制\",{\"1\":{\"145\":1}}],[\"关键字\",{\"1\":{\"130\":3}}],[\"删除已定义的别名\",{\"1\":{\"145\":1}}],[\"显示当前版本\",{\"1\":{\"145\":1}}],[\"跟align\",{\"1\":{\"142\":1}}],[\"跟justify\",{\"1\":{\"142\":1}}],[\"跟踪开销\",{\"1\":{\"84\":1}}],[\"斜杠以及后面的部分可以省略\",{\"1\":{\"140\":1}}],[\"之间跨越多少个网格\",{\"1\":{\"139\":1}}],[\"之间相互通信\",{\"1\":{\"70\":1}}],[\"跨越\",{\"1\":{\"139\":1}}],[\"看看其他项目的位置发生了怎样的变化\",{\"1\":{\"139\":1}}],[\"读者可以把这个属性的值分别改成column\",{\"1\":{\"139\":1}}],[\"读取\",{\"1\":{\"33\":1}}],[\"由浏览器自动布局\",{\"1\":{\"139\":1}}],[\"没有指定上下边框\",{\"1\":{\"139\":1}}],[\"划分好的网格是3行\",{\"1\":{\"136\":1}}],[\"划分网格以后\",{\"1\":{\"133\":1}}],[\"划分网格的线\",{\"1\":{\"127\":1}}],[\"决定新增网格的列宽和行高\",{\"1\":{\"136\":1}}],[\"效果如下图\",{\"1\":{\"134\":2,\"141\":1}}],[\"占满单元格的整个宽度\",{\"1\":{\"134\":1,\"142\":1}}],[\"占据的交叉轴空间叫做cross\",{\"1\":{\"104\":1}}],[\"拉伸占据整个网格容器\",{\"1\":{\"135\":1}}],[\"拉伸\",{\"1\":{\"134\":1,\"142\":1}}],[\"拉开序幕的\",{\"0\":{\"23\":1}}],[\"左边框和右边框的位置\",{\"1\":{\"139\":1}}],[\"左边框所在的垂直网格线\",{\"1\":{\"139\":1}}],[\"左中右\",{\"1\":{\"134\":1,\"135\":1,\"142\":1}}],[\"左对齐\",{\"1\":{\"109\":1}}],[\"再填满第2列\",{\"1\":{\"133\":1}}],[\"再填满第二行\",{\"1\":{\"133\":1}}],[\"再开始放入第二行\",{\"1\":{\"133\":1}}],[\"尽量不出现空格\",{\"1\":{\"133\":1}}],[\"现在修改设置\",{\"1\":{\"133\":1}}],[\"现在浏览器内置了\",{\"1\":{\"122\":1}}],[\"剩下的项目怎么自动放置\",{\"1\":{\"133\":1}}],[\"某些项目指定位置以后\",{\"1\":{\"133\":1}}],[\"放置顺序就变成了下图\",{\"1\":{\"133\":1}}],[\"放到数组中\",{\"1\":{\"66\":1}}],[\"先列后行\",{\"1\":{\"133\":2}}],[\"先行后列\",{\"1\":{\"133\":3,\"139\":1}}],[\"变成\",{\"1\":{\"133\":1}}],[\"终止位置的水平网格线和垂直网格线叫做header\",{\"1\":{\"132\":1}}],[\"终止网格线自动命名为区域名\",{\"1\":{\"132\":1}}],[\"会产生下面这样的布局\",{\"1\":{\"133\":1}}],[\"会自动命名为区域名\",{\"1\":{\"132\":1}}],[\"会失去响应式\",{\"1\":{\"31\":1}}],[\"点餐\",{\"1\":{\"157\":1}}],[\"点\",{\"1\":{\"132\":1}}],[\"点击查看官方文档\",{\"1\":{\"17\":1,\"18\":1}}],[\"底部是页脚区域footer\",{\"1\":{\"132\":1}}],[\"顶部是页眉区域header\",{\"1\":{\"132\":1}}],[\"多个单元格合并成一个区域的写法如下\",{\"1\":{\"132\":1}}],[\"区域名为header\",{\"1\":{\"132\":1}}],[\"区域的命名会影响到网格线\",{\"1\":{\"132\":1}}],[\"区域\",{\"1\":{\"132\":1}}],[\"区别\",{\"1\":{\"31\":1}}],[\"传统的十二网格布局\",{\"1\":{\"130\":1}}],[\"传递params参数时\",{\"1\":{\"54\":2}}],[\"传递参数\",{\"1\":{\"53\":1,\"54\":1}}],[\"因此会\",{\"1\":{\"139\":1}}],[\"因此\",{\"1\":{\"131\":1}}],[\"因此有4根垂直网格线和4根水平网格线\",{\"1\":{\"130\":1}}],[\"因为浏览器会推算相关值\",{\"1\":{\"117\":1}}],[\"因为citys被markraw标记了\",{\"1\":{\"84\":1,\"85\":1}}],[\"因为不需要服务器端处理路径\",{\"1\":{\"48\":1}}],[\"因为不是同一个对象了\",{\"1\":{\"36\":1}}],[\"因为它们是同一个对象\",{\"1\":{\"36\":1}}],[\"除非单元格内容设置了min\",{\"1\":{\"130\":1}}],[\"除了指定为第几个网格线\",{\"1\":{\"139\":1}}],[\"除了1号项目以外\",{\"1\":{\"139\":1}}],[\"除了使用绝对单位\",{\"1\":{\"130\":1}}],[\"除了auto\",{\"1\":{\"118\":1,\"130\":1}}],[\"片段\",{\"1\":{\"130\":1}}],[\"才会有行为差异\",{\"1\":{\"130\":1}}],[\"直到容器不能放置更多的列\",{\"1\":{\"130\":1}}],[\"直接指定项目的位置\",{\"1\":{\"141\":1}}],[\"直接修改\",{\"1\":{\"62\":1}}],[\"直接通过名字跳转\",{\"1\":{\"50\":1}}],[\"直接写数据名\",{\"1\":{\"36\":1}}],[\"直接写数据名即可\",{\"1\":{\"35\":1}}],[\"直接使用即可\",{\"1\":{\"28\":1}}],[\"容纳尽可能多的单元格\",{\"1\":{\"130\":1}}],[\"容器内部居中\",{\"1\":{\"135\":1}}],[\"容器内部采用网格定位的子元素\",{\"1\":{\"124\":1}}],[\"容器的子元素会按照顺序\",{\"1\":{\"133\":1}}],[\"容器的属性\",{\"0\":{\"105\":1}}],[\"容器指定了网格布局以后\",{\"1\":{\"130\":1}}],[\"容器子元素\",{\"1\":{\"129\":1}}],[\"容器元素都是块级元素\",{\"1\":{\"129\":1}}],[\"容器属性\",{\"0\":{\"128\":1}}],[\"容器里面的水平区域称为\",{\"1\":{\"125\":1}}],[\"容器和项目\",{\"0\":{\"124\":1}}],[\"容器默认存在两根轴\",{\"1\":{\"104\":1}}],[\"容器\",{\"1\":{\"104\":2,\"124\":1}}],[\"改写如下\",{\"1\":{\"130\":1}}],[\"尤其网格很多时\",{\"1\":{\"130\":1}}],[\"有时\",{\"1\":{\"130\":1}}],[\"有时候\",{\"1\":{\"130\":1,\"136\":1}}],[\"有人修改了fullname\",{\"1\":{\"33\":1}}],[\"接口文档\",{\"0\":{\"157\":1}}],[\"接受两个参数\",{\"1\":{\"130\":1}}],[\"接着就要划分行和列\",{\"1\":{\"130\":1}}],[\"接收props\",{\"1\":{\"70\":2}}],[\"接收数据的组件中\",{\"1\":{\"69\":1}}],[\"接收参数\",{\"1\":{\"53\":1,\"54\":1}}],[\"接收+限制类型+指定默认值+限制必要性\",{\"1\":{\"42\":1}}],[\"接收+限制类型\",{\"1\":{\"42\":1}}],[\"另一类定义在项目上面\",{\"1\":{\"128\":1}}],[\"共有5根水平网格线和5根垂直网格线\",{\"1\":{\"127\":1}}],[\"正常情况下\",{\"1\":{\"126\":1,\"127\":1}}],[\"单元格的内容头部对齐\",{\"1\":{\"134\":1}}],[\"单元格的内容左对齐\",{\"1\":{\"134\":1}}],[\"单元格的大小是固定的\",{\"1\":{\"130\":1}}],[\"单元格内部居中\",{\"1\":{\"134\":1,\"142\":1}}],[\"单元格\",{\"0\":{\"126\":1},\"1\":{\"126\":1}}],[\"单个项目占据的主轴空间叫做main\",{\"1\":{\"104\":1}}],[\"垂直网格线划分出列\",{\"1\":{\"127\":1}}],[\"垂直的深色区域就是\",{\"1\":{\"125\":1}}],[\"垂直区域称为\",{\"1\":{\"125\":1}}],[\"垂直居中就不容易实现\",{\"1\":{\"102\":1}}],[\"最外层的<div>元素就是容器\",{\"1\":{\"124\":1}}],[\"最新的公开版本为\",{\"1\":{\"12\":1}}],[\"学习\",{\"1\":{\"123\":1}}],[\"然后在默认的grid\",{\"1\":{\"133\":1}}],[\"然后在其他页面使用时判断是ios端就使用这个url\",{\"1\":{\"99\":1}}],[\"然后将其定名为a到i的九个区域\",{\"1\":{\"132\":1}}],[\"然后自动填充\",{\"1\":{\"130\":1}}],[\"然后指定\",{\"1\":{\"122\":1}}],[\"产生单元格\",{\"1\":{\"122\":1}}],[\"列间距\",{\"1\":{\"131\":1}}],[\"列宽和行高都是100px\",{\"1\":{\"130\":1}}],[\"列\",{\"1\":{\"122\":1,\"125\":2}}],[\"行间距\",{\"1\":{\"131\":1}}],[\"行和列的交叉区域\",{\"1\":{\"126\":1}}],[\"行和列\",{\"0\":{\"125\":1}}],[\"行\",{\"1\":{\"122\":1,\"125\":2}}],[\"行内元素也可以使用\",{\"1\":{\"103\":1}}],[\"针对轴线的位置\",{\"1\":{\"122\":1}}],[\"就表示后者是前者的两倍\",{\"1\":{\"130\":1}}],[\"就是\",{\"1\":{\"122\":1}}],[\"就需要分别修改\",{\"1\":{\"21\":1}}],[\"框架达到的效果\",{\"1\":{\"122\":1}}],[\"做出各种各样的布局\",{\"1\":{\"122\":1}}],[\"网格线的名称\",{\"1\":{\"130\":1}}],[\"网格线\",{\"0\":{\"127\":1},\"1\":{\"127\":1}}],[\"网格布局允许指定\",{\"1\":{\"132\":1}}],[\"网格布局允许同一根线有多个名字\",{\"1\":{\"130\":1}}],[\"网格布局提供了fr关键字\",{\"1\":{\"130\":1}}],[\"网格布局\",{\"1\":{\"122\":1}}],[\"网页布局\",{\"1\":{\"102\":1}}],[\"表示跨越多少个网格\",{\"1\":{\"140\":1}}],[\"表示没有用到该单元格\",{\"1\":{\"132\":1}}],[\"表示\",{\"1\":{\"132\":1,\"133\":2,\"139\":1}}],[\"表示列宽不小于100px\",{\"1\":{\"130\":1}}],[\"表示长度就在这个范围之中\",{\"1\":{\"130\":1}}],[\"表示继承父元素的align\",{\"1\":{\"118\":1}}],[\"表演的舞台\",{\"1\":{\"24\":1}}],[\"而不是单独写三个分离的属性\",{\"1\":{\"117\":1}}],[\"而vue的torefs会转换store中数据\",{\"1\":{\"63\":1}}],[\"建议优先使用这个属性\",{\"1\":{\"117\":1}}],[\"建议写成函数\",{\"1\":{\"38\":1}}],[\"浏览器完全根据单元格内容的大小\",{\"1\":{\"136\":1}}],[\"浏览器自动创建的多余网格的列宽和行高\",{\"1\":{\"136\":1}}],[\"浏览器会自动生成多余的网格\",{\"1\":{\"136\":1}}],[\"浏览器就会假定第二个值等于第一个值\",{\"1\":{\"135\":1}}],[\"浏览器认为第二个值等于第一个值\",{\"1\":{\"131\":1}}],[\"浏览器根据这个属性\",{\"1\":{\"116\":1}}],[\"浏览器的历史记录有两种写入方式\",{\"1\":{\"56\":1}}],[\"负值对该属性无效\",{\"1\":{\"115\":1}}],[\"该元素内部采用网格布局\",{\"1\":{\"129\":1}}],[\"该项目将缩小\",{\"1\":{\"115\":1}}],[\"该属性有两个快捷值\",{\"1\":{\"117\":1}}],[\"该属性可能取6个值\",{\"1\":{\"111\":1,\"118\":1}}],[\"该属性不起作用\",{\"1\":{\"111\":1}}],[\"即左右边框\",{\"1\":{\"139\":1}}],[\"即上边框是第一根水平网格线\",{\"1\":{\"139\":1}}],[\"即\",{\"1\":{\"133\":1}}],[\"即下图数字的顺序\",{\"1\":{\"133\":1}}],[\"即先填满第一行\",{\"1\":{\"133\":1}}],[\"即项目的本来大小\",{\"1\":{\"116\":1}}],[\"即项目的排列方向\",{\"1\":{\"106\":1}}],[\"即如果空间不足\",{\"1\":{\"115\":1}}],[\"即如果存在剩余空间\",{\"1\":{\"114\":1}}],[\"排列越靠前\",{\"1\":{\"113\":1}}],[\"数值越小\",{\"1\":{\"113\":1}}],[\"数据在组件的自身\",{\"1\":{\"75\":1}}],[\"数据中的某个属性<\",{\"1\":{\"38\":1}}],[\"数据中的某个属性\",{\"1\":{\"38\":1}}],[\"数据<\",{\"1\":{\"35\":1,\"36\":1,\"37\":1}}],[\"数据\",{\"1\":{\"21\":1,\"24\":2,\"27\":1,\"29\":1,\"30\":1,\"32\":1,\"35\":3,\"36\":3,\"37\":3,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"43\":1,\"67\":1,\"73\":1}}],[\"四\",{\"0\":{\"112\":1,\"138\":1}}],[\"每根轴线两侧的间隔都相等\",{\"1\":{\"111\":1}}],[\"每个区域的起始网格线\",{\"1\":{\"132\":1}}],[\"每个项目两侧的间隔相等\",{\"1\":{\"109\":1,\"135\":1}}],[\"每个组件都可以读取\",{\"1\":{\"61\":1}}],[\"每个阶段都有两个钩子\",{\"1\":{\"43\":1}}],[\"交叉轴的中点对齐\",{\"1\":{\"110\":1}}],[\"交叉轴的终点对齐\",{\"1\":{\"110\":1}}],[\"交叉轴的起点对齐\",{\"1\":{\"110\":1}}],[\"交叉轴的开始位置叫做cross\",{\"1\":{\"104\":1}}],[\"两栏式布局只需要一行代码\",{\"1\":{\"130\":1}}],[\"两者的行为基本是相同的\",{\"1\":{\"130\":1}}],[\"两端对齐\",{\"1\":{\"109\":1}}],[\"两个注意点\",{\"0\":{\"47\":1}}],[\"居中\",{\"1\":{\"109\":1}}],[\"右边框是第四根垂直网格线\",{\"1\":{\"139\":1}}],[\"右边框所在的垂直网格线\",{\"1\":{\"139\":1}}],[\"右边栏设为30\",{\"1\":{\"130\":1}}],[\"右对齐\",{\"1\":{\"109\":1}}],[\"右键打开git\",{\"1\":{\"9\":1}}],[\"换行\",{\"1\":{\"107\":2}}],[\"如何换行\",{\"1\":{\"107\":1}}],[\"如果产生了项目的重叠\",{\"1\":{\"139\":1}}],[\"如果不指定这两个属性\",{\"1\":{\"136\":1}}],[\"如果省略第二个值\",{\"1\":{\"134\":1,\"135\":1,\"142\":1}}],[\"如果将设置改为column\",{\"1\":{\"133\":1}}],[\"如果某些区域不需要利用\",{\"1\":{\"132\":1}}],[\"如果grid\",{\"1\":{\"131\":1}}],[\"如果两列的宽度分别为1fr和2fr\",{\"1\":{\"130\":1}}],[\"如果希望每一行\",{\"1\":{\"130\":1}}],[\"如果没有父元素\",{\"1\":{\"118\":1}}],[\"如果一个项目的flex\",{\"1\":{\"114\":1,\"115\":1}}],[\"如果一条轴线排不下\",{\"1\":{\"107\":1}}],[\"如果有的话\",{\"1\":{\"114\":1}}],[\"如果所有项目的flex\",{\"1\":{\"114\":1,\"115\":1}}],[\"如果项目只有一根轴线\",{\"1\":{\"111\":1}}],[\"如果项目未设置高度或设为auto\",{\"1\":{\"110\":1}}],[\"如果value可以更换\",{\"1\":{\"70\":1}}],[\"如果与vue2冲突\",{\"1\":{\"26\":1}}],[\"轴线占满整个交叉轴\",{\"1\":{\"111\":1}}],[\"轴线之间的间隔比轴线与边框的间隔大一倍\",{\"1\":{\"111\":1}}],[\"轴线之间的间隔平均分布\",{\"1\":{\"111\":1}}],[\"轴线\",{\"1\":{\"107\":1}}],[\"又称\",{\"1\":{\"107\":1}}],[\"起点在下沿\",{\"1\":{\"106\":1}}],[\"起点在上沿\",{\"1\":{\"106\":1}}],[\"起点在右端\",{\"1\":{\"106\":1}}],[\"起点在左端\",{\"1\":{\"106\":1}}],[\"起步\",{\"0\":{\"94\":1}}],[\"主轴为垂直方向\",{\"1\":{\"106\":2}}],[\"主轴为水平方向\",{\"1\":{\"106\":2}}],[\"主轴的开始位置\",{\"1\":{\"104\":1}}],[\"|\",{\"1\":{\"106\":3,\"107\":2,\"109\":4,\"110\":4,\"111\":5,\"116\":1,\"117\":1,\"118\":5,\"134\":6,\"135\":12,\"142\":6,\"158\":1}}],[\"||\",{\"1\":{\"40\":3,\"66\":1,\"108\":1,\"117\":1}}],[\"justify\",{\"0\":{\"109\":1,\"134\":1,\"135\":1,\"142\":1},\"1\":{\"105\":1,\"109\":2,\"134\":3,\"135\":2,\"142\":3}}],[\"js中文网|配置\",{\"1\":{\"158\":1}}],[\"js中操作ref对象时候需要\",{\"1\":{\"28\":2}}],[\"js中操作数据需要\",{\"1\":{\"28\":1}}],[\"json\",{\"1\":{\"65\":1,\"66\":1}}],[\"jsx\",{\"1\":{\"18\":2}}],[\"js\",{\"1\":{\"17\":1}}],[\"js发布版3\",{\"1\":{\"12\":1}}],[\"以便放置项目\",{\"1\":{\"136\":1}}],[\"以前\",{\"1\":{\"122\":1}}],[\"以下6个属性设置在项目上\",{\"1\":{\"112\":1}}],[\"以下6个属性设置在容器上\",{\"1\":{\"105\":1}}],[\"以上四张动图原创作者\",{\"1\":{\"22\":1}}],[\"三\",{\"0\":{\"105\":1,\"128\":1}}],[\"三种方式\",{\"0\":{\"62\":1}}],[\"叫做main\",{\"1\":{\"104\":1}}],[\"水平网格线划分出行\",{\"1\":{\"127\":1}}],[\"水平的深色区域就是\",{\"1\":{\"125\":1}}],[\"水平的主轴\",{\"1\":{\"104\":1}}],[\"水温达到100\",{\"1\":{\"40\":1}}],[\"水温达到50℃\",{\"1\":{\"40\":1}}],[\"称为项目属性\",{\"1\":{\"128\":1}}],[\"称为容器属性\",{\"1\":{\"128\":1}}],[\"称为\",{\"1\":{\"104\":2,\"124\":2,\"126\":1,\"127\":1}}],[\"采用网格布局的区域\",{\"1\":{\"124\":1}}],[\"采用\",{\"1\":{\"104\":1}}],[\"二\",{\"0\":{\"104\":1,\"123\":1}}],[\"必须加上\",{\"1\":{\"103\":1}}],[\"必须使用name配置项\",{\"1\":{\"54\":1}}],[\"必须使用ref\",{\"1\":{\"31\":1}}],[\"任何一个容器都可以指定为\",{\"1\":{\"103\":1}}],[\"任何尝试修改这个对象的操作都会被阻止\",{\"1\":{\"81\":1}}],[\"弹性布局\",{\"1\":{\"103\":1}}],[\"意为\",{\"1\":{\"103\":1,\"130\":1}}],[\"写起来也很容易\",{\"1\":{\"130\":1}}],[\"写法\",{\"1\":{\"102\":1}}],[\"写入它\",{\"1\":{\"61\":1}}],[\"下边框是第二根水平网格线\",{\"1\":{\"139\":1}}],[\"下边框所在的水平网格线\",{\"1\":{\"139\":1}}],[\"下一篇文章给出常见布局的\",{\"1\":{\"102\":1}}],[\"下面是justify\",{\"1\":{\"142\":1}}],[\"下面是一个例子\",{\"1\":{\"134\":1,\"135\":1,\"140\":1,\"141\":1,\"142\":1}}],[\"下面是一个布局实例\",{\"1\":{\"132\":1}}],[\"下面这些属性定义在项目上面\",{\"1\":{\"138\":1}}],[\"下面这行的写法是\",{\"1\":{\"66\":1}}],[\"下面的例子是指定四个边框位置的效果\",{\"1\":{\"139\":1}}],[\"下面的例子里面\",{\"1\":{\"136\":1}}],[\"下面的例子让1号项目和2号项目各占据两个单元格\",{\"1\":{\"133\":1}}],[\"下面的图都以justify\",{\"1\":{\"135\":1}}],[\"下面的写法是setup语法糖\",{\"1\":{\"27\":1}}],[\"下面假设交叉轴从上到下\",{\"1\":{\"110\":1}}],[\"下面假设主轴为从左到右\",{\"1\":{\"109\":1}}],[\"本文介绍它的语法\",{\"1\":{\"102\":1}}],[\"本质是一个函数\",{\"1\":{\"44\":1}}],[\"比如网格只有3列\",{\"1\":{\"136\":1}}],[\"比如三行就有四根水平网格线\",{\"1\":{\"127\":1}}],[\"比如上面代码的<p>元素就不是项目\",{\"1\":{\"124\":1}}],[\"比如350px\",{\"1\":{\"116\":1}}],[\"比如\",{\"1\":{\"102\":1,\"126\":1,\"130\":1,\"132\":1}}],[\"比较麻烦\",{\"1\":{\"27\":1}}],[\"依赖\",{\"1\":{\"102\":1}}],[\"阮一峰\",{\"1\":{\"102\":1,\"121\":1}}],[\"布局实例\",{\"1\":{\"130\":1}}],[\"布局只对项目生效\",{\"1\":{\"124\":1}}],[\"布局之前\",{\"1\":{\"123\":1}}],[\"布局强大\",{\"1\":{\"122\":1}}],[\"布局远比\",{\"1\":{\"122\":1}}],[\"布局则是将容器划分成\",{\"1\":{\"122\":1}}],[\"布局是轴线布局\",{\"1\":{\"122\":1}}],[\"布局是什么\",{\"0\":{\"103\":1}}],[\"布局有一定的相似性\",{\"1\":{\"122\":1}}],[\"布局与\",{\"1\":{\"122\":1}}],[\"布局方案\",{\"1\":{\"122\":1}}],[\"布局的属性分成两类\",{\"1\":{\"128\":1}}],[\"布局的拿手好戏\",{\"1\":{\"122\":1}}],[\"布局的元素\",{\"1\":{\"104\":1}}],[\"布局的传统解决方案\",{\"1\":{\"102\":1}}],[\"布局以后\",{\"1\":{\"103\":1}}],[\"布局将成为未来布局的首选方案\",{\"1\":{\"102\":1}}],[\"布局\",{\"0\":{\"102\":1,\"121\":1},\"1\":{\"103\":2}}],[\"未分类\",{\"2\":{\"101\":1}}],[\"页面刷新也是初始化\",{\"1\":{\"99\":1}}],[\"刷新页面就不报错了\",{\"1\":{\"99\":1}}],[\"问题\",{\"1\":{\"99\":1}}],[\"小桔\",{\"1\":{\"157\":1}}],[\"小程序\",{\"0\":{\"94\":1},\"1\":{\"156\":1}}],[\"小猪佩奇\",{\"1\":{\"42\":1}}],[\"实例\",{\"1\":{\"90\":1}}],[\"实例方法\",{\"1\":{\"90\":1}}],[\"实现防抖效果\",{\"1\":{\"86\":1}}],[\"实现祖孙组件直接通信\",{\"1\":{\"73\":1}}],[\"实现\",{\"1\":{\"70\":1}}],[\"替换掉了\",{\"1\":{\"90\":1}}],[\"修饰符的支持\",{\"1\":{\"90\":1}}],[\"修改为\",{\"1\":{\"90\":2}}],[\"修改数据\",{\"0\":{\"62\":1}}],[\"修改\",{\"1\":{\"33\":1}}],[\"过渡类名\",{\"1\":{\"90\":2}}],[\"转移到应用对象\",{\"0\":{\"89\":1}}],[\"转换为ref对象\",{\"1\":{\"32\":1}}],[\"全面兼容nvue的uni\",{\"1\":{\"158\":1}}],[\"全局\",{\"0\":{\"89\":1}}],[\"全名\",{\"1\":{\"33\":1}}],[\"异步引入组件\",{\"1\":{\"88\":1}}],[\"结束位置叫做cross\",{\"1\":{\"104\":1}}],[\"结束位置叫做main\",{\"1\":{\"104\":1}}],[\"结构移动到指定位置的技术\",{\"1\":{\"87\":1}}],[\"结论\",{\"1\":{\"38\":1}}],[\"什么是\",{\"1\":{\"87\":1}}],[\"什么是hook\",{\"1\":{\"44\":1}}],[\"告诉vue数据msg很重要\",{\"1\":{\"86\":1}}],[\"并且尽量填满空格\",{\"1\":{\"133\":1}}],[\"并且尽可能紧密填满\",{\"1\":{\"133\":1}}],[\"并且单元格宽度不固定的时候\",{\"1\":{\"130\":1}}],[\"并配置好default\",{\"1\":{\"88\":1}}],[\"并对其依赖项跟踪和更新触发进行逻辑控制\",{\"1\":{\"86\":1}}],[\"并在依赖更改时重新执行该函数\",{\"1\":{\"40\":1}}],[\"去标记mockjs\",{\"1\":{\"85\":1}}],[\"去指定组件名字\",{\"1\":{\"27\":1}}],[\"为了方便表示比例关系\",{\"1\":{\"130\":1}}],[\"为了防止误把mockjs变为响应式对象\",{\"1\":{\"85\":1}}],[\"为了呈现数据\",{\"1\":{\"70\":1}}],[\"例如使用mockjs时\",{\"1\":{\"85\":1}}],[\"例如改成abc\",{\"1\":{\"70\":2}}],[\"使其永远不会变成响应式的\",{\"1\":{\"85\":1}}],[\"使用这四个属性\",{\"1\":{\"139\":1}}],[\"使用suspense包裹组件\",{\"1\":{\"88\":1}}],[\"使用storetorefs转换countstore\",{\"1\":{\"63\":1}}],[\"使用步骤\",{\"1\":{\"88\":1}}],[\"使用\",{\"1\":{\"84\":1}}],[\"使用provide提供数据\",{\"1\":{\"73\":1}}],[\"使用proxy代替defineproperty实现响应式\",{\"1\":{\"14\":1}}],[\"使用v\",{\"1\":{\"70\":1}}],[\"使用mitt代替\",{\"1\":{\"66\":1}}],[\"使用countstore\",{\"1\":{\"62\":1}}],[\"使用children配置项\",{\"1\":{\"51\":1}}],[\"使用插件\",{\"1\":{\"60\":1}}],[\"使用defineexpose将组件中的数据交给外部\",{\"1\":{\"41\":1}}],[\"使用原则\",{\"1\":{\"31\":1}}],[\"标记一个对象\",{\"1\":{\"85\":1}}],[\"标签的\",{\"0\":{\"41\":1}}],[\"根据最新标准\",{\"1\":{\"131\":1}}],[\"根据原始对象citys去创建响应式对象citys2\",{\"1\":{\"84\":1,\"85\":1}}],[\"根据已有数据计算出新数据\",{\"1\":{\"33\":1}}],[\"天津\",{\"1\":{\"84\":1,\"85\":1}}],[\"北京\",{\"1\":{\"84\":1,\"85\":1}}],[\"何时使用\",{\"1\":{\"84\":1}}],[\"请谨慎使用\",{\"1\":{\"84\":1}}],[\"适用于只需保护对象顶层属性的场景\",{\"1\":{\"82\":1}}],[\"类似\",{\"1\":{\"82\":1}}],[\"类似于vue2\",{\"1\":{\"44\":1}}],[\"保护全局状态或配置不被修改\",{\"1\":{\"81\":1}}],[\"应用场景\",{\"1\":{\"81\":1}}],[\"还是建议不要合并属性\",{\"1\":{\"137\":1}}],[\"还可以指定为网格线的名字\",{\"1\":{\"139\":1}}],[\"还可以设成row\",{\"1\":{\"133\":1}}],[\"还可以使用方括号\",{\"1\":{\"130\":1}}],[\"还有一个关键字auto\",{\"1\":{\"130\":1}}],[\"还会在控制台中发出警告\",{\"1\":{\"81\":1}}],[\"还需要编写一个不写setup的script标签\",{\"1\":{\"27\":1}}],[\"避免了对每一个内部属性做响应式所带来的性能成本\",{\"1\":{\"79\":1}}],[\"浅层式\",{\"1\":{\"79\":1}}],[\"来绕开深度响应\",{\"1\":{\"79\":1}}],[\"来说\",{\"1\":{\"28\":1}}],[\"只指定了1号项目的左右边框\",{\"1\":{\"139\":1}}],[\"只是将水平方向改成垂直方向\",{\"1\":{\"135\":1}}],[\"只有当容器足够宽\",{\"1\":{\"130\":1}}],[\"只能指定\",{\"1\":{\"122\":1}}],[\"只能通过复杂的\",{\"1\":{\"122\":1}}],[\"只将对象的顶层属性设置为只读\",{\"1\":{\"82\":1}}],[\"只会使对象的最顶层属性变成响应式的\",{\"1\":{\"78\":1}}],[\"只跟踪引用值的变化\",{\"1\":{\"77\":1}}],[\"只读取\",{\"1\":{\"33\":1}}],[\"红色警戒\",{\"1\":{\"75\":1}}],[\"哈哈\",{\"1\":{\"75\":1}}],[\"理解\",{\"1\":{\"75\":1}}],[\"具名插槽\",{\"0\":{\"74\":1}}],[\"具体方法就是指定项目的四个边框\",{\"1\":{\"139\":1}}],[\"具体的对齐方式与交叉轴的方向有关\",{\"1\":{\"110\":1}}],[\"具体对齐方式与轴的方向有关\",{\"1\":{\"109\":1}}],[\"具体使用\",{\"1\":{\"73\":1}}],[\"具体说明\",{\"1\":{\"71\":1}}],[\"具体数据\",{\"1\":{\"68\":1}}],[\"具体编码\",{\"1\":{\"58\":1,\"61\":2,\"73\":1,\"75\":1,\"84\":1}}],[\"具体配置\",{\"1\":{\"18\":1}}],[\"具体操作如下\",{\"1\":{\"18\":1}}],[\"今日热门游戏\",{\"1\":{\"73\":1,\"74\":1}}],[\"参考之前`pinia`部分的讲解\",{\"1\":{\"73\":1}}],[\"参数\",{\"0\":{\"53\":1,\"54\":1}}],[\"提供数据\",{\"1\":{\"73\":1}}],[\"提供数据的组件\",{\"1\":{\"69\":1}}],[\"值为对象\",{\"1\":{\"72\":2}}],[\"值是一个函数\",{\"1\":{\"24\":1}}],[\"了\",{\"1\":{\"71\":1}}],[\"了的路由组件\",{\"1\":{\"47\":1}}],[\"消息介绍\",{\"1\":{\"158\":1}}],[\"消费\",{\"1\":{\"71\":1}}],[\"消失\",{\"1\":{\"47\":1}}],[\"被子组件自己\",{\"1\":{\"71\":1}}],[\"被监视的数据\",{\"1\":{\"36\":1}}],[\"包括第一行\",{\"1\":{\"140\":1}}],[\"包含所有被ref属性标识的dom元素或组件实例\",{\"1\":{\"72\":1}}],[\"包含所有父组件传入的标签属性\",{\"1\":{\"71\":1}}],[\"包装成一个对象\",{\"1\":{\"66\":1}}],[\"孙组件中使用inject配置项接受数据\",{\"1\":{\"73\":1}}],[\"孙组件\",{\"1\":{\"71\":1}}],[\"孙\",{\"1\":{\"71\":1}}],[\"→\",{\"1\":{\"71\":1,\"72\":2}}],[\"祖\",{\"1\":{\"71\":1}}],[\"向当前组件的子组件通信\",{\"1\":{\"71\":1}}],[\"向外部暴露数据\",{\"1\":{\"44\":2}}],[\"上下边框\",{\"1\":{\"139\":1}}],[\"上边框所在的水平网格线\",{\"1\":{\"139\":1}}],[\"上中下\",{\"1\":{\"134\":1,\"135\":1,\"142\":1}}],[\"上例是3\",{\"1\":{\"130\":1}}],[\"上面三个属性名的grid\",{\"1\":{\"131\":1}}],[\"上面一段\",{\"1\":{\"131\":1}}],[\"上面的代码用repeat\",{\"1\":{\"130\":1}}],[\"上面代码的效果如下\",{\"1\":{\"133\":2}}],[\"上面代码的本质如下\",{\"1\":{\"70\":1}}],[\"上面代码设置了column以后\",{\"1\":{\"133\":1}}],[\"上面代码将9个单元格分成a\",{\"1\":{\"132\":1}}],[\"上面代码将左边栏设为70\",{\"1\":{\"130\":1}}],[\"上面代码先划分出9个单元格\",{\"1\":{\"132\":1}}],[\"上面代码表示\",{\"1\":{\"130\":1,\"134\":2,\"139\":1}}],[\"上面代码表示两个相同宽度的列\",{\"1\":{\"130\":1}}],[\"上面代码表示每列宽度100px\",{\"1\":{\"130\":1}}],[\"上面代码定义了6列\",{\"1\":{\"130\":1}}],[\"上面代码指定\",{\"1\":{\"139\":1}}],[\"上面代码指定新增的行高统一为50px\",{\"1\":{\"136\":1}}],[\"上面代码指定网格布局为3行\",{\"1\":{\"130\":1}}],[\"上面代码指定了一个三行三列的网格\",{\"1\":{\"130\":1}}],[\"上面代码指定div是一个行内元素\",{\"1\":{\"129\":1}}],[\"上面代码中\",{\"1\":{\"124\":1,\"130\":2,\"131\":1,\"132\":2,\"139\":1,\"140\":3,\"141\":1}}],[\"上图会先填满第一列\",{\"1\":{\"133\":1}}],[\"上图会先填满第一行\",{\"1\":{\"133\":1}}],[\"上图是display\",{\"1\":{\"129\":2}}],[\"上图是一个\",{\"1\":{\"127\":1}}],[\"上图中\",{\"1\":{\"125\":1,\"133\":1,\"139\":1}}],[\"上图这样的布局\",{\"1\":{\"122\":1}}],[\"上\",{\"1\":{\"107\":1}}],[\"上海\",{\"1\":{\"84\":1,\"85\":1}}],[\"上述代码\",{\"1\":{\"27\":1}}],[\"声明事件\",{\"1\":{\"70\":2}}],[\"进行排列\",{\"1\":{\"139\":1}}],[\"进而触发update\",{\"1\":{\"70\":1}}],[\"进入项目根目录\",{\"1\":{\"9\":1}}],[\"触发input事件时\",{\"1\":{\"70\":1}}],[\"触发事件\",{\"1\":{\"68\":1,\"69\":2}}],[\"目的是\",{\"1\":{\"70\":1}}],[\"目前是4版本\",{\"1\":{\"46\":1}}],[\"目前vue\",{\"1\":{\"17\":1}}],[\"＋\",{\"1\":{\"70\":1}}],[\"前缀已经删除\",{\"1\":{\"131\":1}}],[\"前者不缩小\",{\"1\":{\"115\":1}}],[\"前序知识\",{\"1\":{\"70\":1}}],[\"前端\",{\"2\":{\"11\":1,\"92\":1,\"96\":1,\"120\":1,\"144\":1,\"147\":1,\"150\":1,\"153\":1}}],[\"总线依赖着这个内置关系\",{\"1\":{\"69\":1}}],[\"总结\",{\"0\":{\"79\":1},\"1\":{\"18\":1}}],[\"解决方案\",{\"1\":{\"99\":1}}],[\"解绑事件\",{\"1\":{\"69\":1}}],[\"解析\",{\"1\":{\"18\":1}}],[\"同时在销毁前解绑事件\",{\"1\":{\"69\":1}}],[\"同时响应式地追踪其依赖\",{\"1\":{\"40\":1}}],[\"清理事件\",{\"1\":{\"69\":1}}],[\"清理了\",{\"1\":{\"40\":1}}],[\"绑定事件\",{\"1\":{\"69\":3}}],[\"功能类似\",{\"1\":{\"69\":1}}],[\"给不同的版本添加别名\",{\"1\":{\"145\":1}}],[\"给input元素绑定原生input事件\",{\"1\":{\"70\":1}}],[\"给子组件绑定自定义事件\",{\"1\":{\"68\":1}}],[\"给路由规则命名\",{\"1\":{\"50\":1}}],[\"示例\",{\"1\":{\"68\":1}}],[\"示例代码\",{\"1\":{\"40\":1,\"43\":1,\"44\":1}}],[\"事件名是任意名称\",{\"1\":{\"68\":1}}],[\"事件名是特定的\",{\"1\":{\"68\":1}}],[\"事件对象$event\",{\"1\":{\"68\":2}}],[\"奥特曼\",{\"1\":{\"67\":1}}],[\"奥迪\",{\"1\":{\"38\":1,\"39\":1}}],[\"子元素的float\",{\"1\":{\"103\":1}}],[\"子组件中不用编写任何东西\",{\"1\":{\"73\":1}}],[\"子组件中\",{\"1\":{\"68\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"子组件\",{\"1\":{\"67\":1,\"71\":1}}],[\"子组件person\",{\"1\":{\"41\":1}}],[\"子传父\",{\"1\":{\"67\":1}}],[\"子\",{\"1\":{\"67\":1,\"68\":1,\"70\":1,\"72\":2}}],[\"↔\",{\"1\":{\"67\":1,\"70\":1}}],[\"父组件中\",{\"1\":{\"73\":2,\"74\":1,\"75\":1}}],[\"父组件\",{\"1\":{\"67\":1,\"71\":1}}],[\"父组件app\",{\"1\":{\"41\":1}}],[\"父传子\",{\"1\":{\"67\":1}}],[\"父\",{\"1\":{\"67\":1,\"68\":1,\"70\":1,\"72\":2}}],[\"常用与\",{\"1\":{\"67\":1}}],[\"常用的钩子\",{\"1\":{\"43\":1}}],[\"常见搭配形式\",{\"1\":{\"66\":1}}],[\"合并到$attrs中了\",{\"1\":{\"66\":1}}],[\"移除了$children\",{\"1\":{\"90\":1}}],[\"移除了$on\",{\"1\":{\"90\":1}}],[\"移除了过滤器\",{\"1\":{\"90\":1}}],[\"移除keycode支持作为\",{\"1\":{\"16\":1}}],[\"移出事件总线\",{\"1\":{\"66\":1}}],[\"qinghua\",{\"1\":{\"66\":1}}],[\"query\",{\"0\":{\"53\":1},\"1\":{\"53\":2,\"55\":1,\"57\":1}}],[\"quality\",{\"1\":{\"18\":1}}],[\"连续解构赋值+重命名\",{\"1\":{\"66\":1}}],[\"及其变化\",{\"1\":{\"65\":1}}],[\"追加getters配置\",{\"1\":{\"64\":1}}],[\"当空间不足时\",{\"1\":{\"115\":1}}],[\"当前组件的父组件实例对象\",{\"1\":{\"72\":1}}],[\"当前项目需要最小18\",{\"1\":{\"7\":1}}],[\"当state中的数据\",{\"1\":{\"64\":1}}],[\"随后解构\",{\"1\":{\"63\":1}}],[\"随后选择3\",{\"1\":{\"17\":1}}],[\"得到countstore\",{\"1\":{\"63\":1}}],[\"方括号里面依次是这八根线的名字\",{\"1\":{\"130\":1}}],[\"方便以后的引用\",{\"1\":{\"130\":1}}],[\"方便在模板中使用\",{\"1\":{\"63\":1}}],[\"方法侦听\",{\"1\":{\"65\":1}}],[\"方法等\",{\"1\":{\"25\":1}}],[\"方法\",{\"1\":{\"21\":1,\"24\":2,\"26\":1,\"27\":1,\"32\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"43\":1,\"44\":1,\"67\":1}}],[\"借助storetorefs将store中的数据转为ref对象\",{\"1\":{\"63\":1}}],[\"借助action修改\",{\"1\":{\"62\":1}}],[\"减\",{\"1\":{\"62\":1}}],[\"操作countstore中的sum\",{\"1\":{\"62\":1}}],[\"操作src\",{\"1\":{\"60\":1}}],[\"加\",{\"1\":{\"62\":1}}],[\"加载index\",{\"1\":{\"18\":1}}],[\"$once\",{\"1\":{\"90\":1}}],[\"$off\",{\"1\":{\"90\":1}}],[\"$parent用于\",{\"1\":{\"72\":1}}],[\"$parent\",{\"0\":{\"72\":1},\"1\":{\"72\":1}}],[\"$patch\",{\"1\":{\"62\":1}}],[\"$refs用于\",{\"1\":{\"72\":1}}],[\"$refs\",{\"0\":{\"72\":1},\"1\":{\"72\":1}}],[\"$route和$router变成了两个hooks\",{\"1\":{\"57\":1}}],[\"$attrs会自动排除props中声明的属性\",{\"1\":{\"71\":1}}],[\"$attrs是一个对象\",{\"1\":{\"71\":1}}],[\"$attrs用于实现当前组件的父组件\",{\"1\":{\"71\":1}}],[\"$attrs\",{\"0\":{\"71\":1},\"1\":{\"71\":1}}],[\"$emit\",{\"1\":{\"68\":1}}],[\"$event\",{\"1\":{\"68\":2,\"70\":4}}],[\"$children被砍掉了\",{\"1\":{\"66\":1}}],[\"$subscribe\",{\"0\":{\"65\":1},\"1\":{\"65\":2}}],[\"批量修改\",{\"1\":{\"62\":1}}],[\"调用对应action\",{\"1\":{\"62\":1}}],[\"调用usexxxxxstore得到对应的store\",{\"1\":{\"61\":1}}],[\"调用特定的函数\",{\"1\":{\"43\":1}}],[\"我在这里记录应用初始化时的url\",{\"1\":{\"99\":1}}],[\"我遇到问题时是使用uniapp开发的h5\",{\"1\":{\"99\":1}}],[\"我的死心塌地\",{\"1\":{\"61\":1}}],[\"我们在vue3中使用watch的时候\",{\"1\":{\"34\":1}}],[\"我们可以借助vite中的插件简化\",{\"1\":{\"27\":1}}],[\"心里给你留了一块地\",{\"1\":{\"61\":1}}],[\"蔓越莓\",{\"1\":{\"61\":1}}],[\"蓝莓\",{\"1\":{\"61\":1}}],[\"草莓\",{\"1\":{\"61\":1}}],[\"怪好看的\",{\"1\":{\"61\":1}}],[\"哪里怪\",{\"1\":{\"61\":1}}],[\"你想我了没\",{\"1\":{\"61\":1}}],[\"你今天有点怪\",{\"1\":{\"61\":1}}],[\"你好啊\",{\"1\":{\"25\":1}}],[\"计算主轴是否有多余空间\",{\"1\":{\"116\":1}}],[\"计算\",{\"1\":{\"61\":2,\"64\":1}}],[\"计算属性\",{\"1\":{\"24\":1,\"33\":2}}],[\"计算属性等\",{\"1\":{\"21\":1}}],[\"动作\",{\"1\":{\"61\":2,\"64\":1}}],[\"引入mitt\",{\"1\":{\"69\":1}}],[\"引入storetorefs\",{\"1\":{\"63\":1}}],[\"引入对应的usexxxxxstore\",{\"1\":{\"61\":1}}],[\"引入definestore用于创建store\",{\"1\":{\"61\":2,\"64\":1}}],[\"引入createpinia\",{\"1\":{\"60\":1}}],[\"业务逻辑\",{\"1\":{\"61\":1}}],[\"状态\",{\"1\":{\"61\":3,\"64\":1}}],[\"存储+读取数据\",{\"0\":{\"61\":1}}],[\"环境\",{\"0\":{\"60\":1}}],[\"搭建\",{\"0\":{\"60\":1}}],[\"准备一个效果\",{\"0\":{\"59\":1}}],[\"编码\",{\"1\":{\"85\":1}}],[\"编程式导航\",{\"0\":{\"57\":1}}],[\"编写news的子路由\",{\"1\":{\"51\":1}}],[\"默认跨越一个网格\",{\"1\":{\"140\":1}}],[\"默认的放置顺序是\",{\"1\":{\"133\":1}}],[\"默认为1\",{\"1\":{\"115\":1}}],[\"默认为0\",{\"1\":{\"113\":1,\"114\":1}}],[\"默认\",{\"1\":{\"107\":1}}],[\"默认情况下\",{\"1\":{\"107\":1,\"129\":1}}],[\"默认插槽\",{\"1\":{\"73\":2}}],[\"默认值是row\",{\"1\":{\"133\":1}}],[\"默认值为auto\",{\"1\":{\"118\":1}}],[\"默认值为0\",{\"1\":{\"117\":1}}],[\"默认值为row\",{\"1\":{\"108\":1}}],[\"默认值\",{\"1\":{\"56\":1,\"106\":1,\"109\":1,\"110\":1,\"111\":1,\"134\":1,\"142\":1}}],[\"默认是被卸载掉的\",{\"1\":{\"47\":1}}],[\"控制路由跳转时操作浏览器历史记录的模式\",{\"1\":{\"56\":1}}],[\"作者\",{\"1\":{\"102\":1,\"121\":1}}],[\"作为\",{\"1\":{\"90\":1}}],[\"作为props传给detail组件\",{\"1\":{\"55\":1}}],[\"作用域插槽\",{\"0\":{\"75\":1}}],[\"作用\",{\"1\":{\"28\":1,\"29\":1,\"32\":1,\"33\":1,\"34\":1,\"41\":1,\"50\":1,\"55\":4,\"56\":1,\"58\":1,\"77\":1,\"78\":1,\"81\":1,\"82\":1,\"84\":1,\"85\":1,\"86\":1}}],[\"把$listeners所有的东西\",{\"1\":{\"66\":1}}],[\"把\",{\"1\":{\"66\":1}}],[\"把请求回来的字符串\",{\"1\":{\"66\":1}}],[\"把返回的对象中每一组key\",{\"1\":{\"55\":1}}],[\"把收到了每一组params参数\",{\"1\":{\"55\":1}}],[\"把对象中的每一组key\",{\"1\":{\"55\":1}}],[\"把setup函数中使用的composition\",{\"1\":{\"44\":1}}],[\"新闻数据在news组件中\",{\"1\":{\"75\":1}}],[\"新闻001\",{\"1\":{\"54\":1}}],[\"新建文件\",{\"1\":{\"69\":1}}],[\"新的生命周期钩子\",{\"1\":{\"16\":1}}],[\"新的内置组件\",{\"1\":{\"16\":1}}],[\"新的特性\",{\"0\":{\"16\":1}}],[\"```vue\",{\"1\":{\"73\":1}}],[\"`\",{\"1\":{\"54\":1}}],[\"跳转并携带params参数\",{\"1\":{\"54\":2}}],[\"跳转并携带query参数\",{\"1\":{\"53\":2}}],[\"跳转\",{\"1\":{\"53\":1}}],[\"跳转路由\",{\"1\":{\"50\":1,\"51\":1}}],[\"记得去home组件中预留一个<router\",{\"1\":{\"51\":1}}],[\"记得要加完整路径\",{\"1\":{\"51\":1}}],[\"嵌套路由\",{\"0\":{\"51\":1}}],[\"后台管理\",{\"1\":{\"156\":1}}],[\"后台线上访问地址\",{\"0\":{\"155\":1}}],[\"后两个属性可选\",{\"1\":{\"117\":1}}],[\"后面就讲\",{\"1\":{\"50\":1}}],[\"后期项目上线\",{\"1\":{\"48\":1}}],[\"命名路由\",{\"0\":{\"50\":1}}],[\"兼容性更好\",{\"1\":{\"48\":1}}],[\"否则刷新会有404错误\",{\"1\":{\"48\":1}}],[\"否则报错\",{\"1\":{\"29\":1}}],[\"缺点\",{\"1\":{\"48\":2}}],[\"优点\",{\"1\":{\"48\":2}}],[\"视觉效果上\",{\"1\":{\"47\":1}}],[\"路由组件的两个重要的属性\",{\"1\":{\"57\":1}}],[\"路由组件通常存放在pages\",{\"1\":{\"47\":1}}],[\"路由的\",{\"0\":{\"55\":1}}],[\"路由传参\",{\"0\":{\"52\":1}}],[\"路由器工作模式\",{\"0\":{\"48\":1}}],[\"路由配置文件代码如下\",{\"1\":{\"46\":1}}],[\"展示区\",{\"1\":{\"46\":1}}],[\"导航区\",{\"1\":{\"46\":1}}],[\"处理错误\",{\"1\":{\"44\":1}}],[\"维护数据\",{\"1\":{\"44\":1}}],[\"发请求\",{\"1\":{\"44\":1,\"66\":1}}],[\"让应用有更好的用户体验\",{\"1\":{\"88\":1}}],[\"让路由组件更方便的收到参数\",{\"1\":{\"55\":1}}],[\"让setup中的逻辑更清楚易懂\",{\"1\":{\"44\":1}}],[\"让相关功能的代码更加有序的组织在一起\",{\"1\":{\"22\":1}}],[\"复用代码\",{\"1\":{\"44\":1}}],[\"自动放置在每一个网格\",{\"1\":{\"133\":1}}],[\"自定义事件常用于\",{\"1\":{\"68\":1}}],[\"自定义事件\",{\"0\":{\"68\":1},\"1\":{\"68\":2}}],[\"自定义hook的优势\",{\"1\":{\"44\":1}}],[\"自定义\",{\"0\":{\"44\":1}}],[\"自己动手编写一个\",{\"1\":{\"18\":1}}],[\"卸载指定版本\",{\"1\":{\"145\":1}}],[\"卸载完毕\",{\"1\":{\"43\":1}}],[\"卸载之前\",{\"1\":{\"43\":2}}],[\"卸载阶段\",{\"1\":{\"43\":1}}],[\"销毁阶段\",{\"1\":{\"43\":1}}],[\"销毁\",{\"1\":{\"43\":1}}],[\"挂载钩子\",{\"1\":{\"44\":1}}],[\"挂载之前\",{\"1\":{\"43\":1}}],[\"挂载完毕\",{\"1\":{\"43\":2}}],[\"挂载阶段\",{\"1\":{\"43\":2}}],[\"挂载\",{\"1\":{\"43\":1}}],[\"规律\",{\"1\":{\"43\":1}}],[\"这与下面的代码效果完全一样\",{\"1\":{\"139\":1}}],[\"这四个属性的值还可以使用span关键字\",{\"1\":{\"139\":1}}],[\"这四个属性的值\",{\"1\":{\"139\":1}}],[\"这两个属性都可以取下面四个值\",{\"1\":{\"142\":1}}],[\"这两个属性之中\",{\"1\":{\"140\":1}}],[\"这两个属性的写法完全相同\",{\"1\":{\"134\":1,\"135\":1}}],[\"这两个值主要用于\",{\"1\":{\"133\":1}}],[\"这是因为3号项目默认跟着2号项目\",{\"1\":{\"133\":1}}],[\"这是一个可以用于临时读取而不引起代理访问\",{\"1\":{\"84\":1}}],[\"这个属性的默认值是row\",{\"1\":{\"139\":1}}],[\"这个顺序由grid\",{\"1\":{\"133\":1}}],[\"这个语法糖\",{\"1\":{\"27\":1}}],[\"这时它们的位置由容器的grid\",{\"1\":{\"139\":1}}],[\"这时会非常方便\",{\"1\":{\"130\":1}}],[\"这时可以使用auto\",{\"1\":{\"130\":1}}],[\"这时\",{\"1\":{\"130\":1,\"136\":1}}],[\"这部分先介绍容器属性\",{\"1\":{\"128\":1}}],[\"这使得属性的访问变得更快\",{\"1\":{\"79\":1}}],[\"这些特定的函数统称为\",{\"1\":{\"43\":1}}],[\"从第一根列线到第三根列线\",{\"1\":{\"140\":1}}],[\"从易读易写的角度考虑\",{\"1\":{\"137\":1}}],[\"从而让开发者有机会在特定阶段运行自己的代码\",{\"1\":{\"43\":1}}],[\"从value中获取最新的temp值\",{\"1\":{\"40\":1}}],[\"概念\",{\"1\":{\"43\":1,\"64\":1}}],[\"概述\",{\"0\":{\"24\":1,\"122\":1},\"1\":{\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1}}],[\"生命周期整体分为四个阶段\",{\"1\":{\"43\":1}}],[\"生命周期钩子\",{\"1\":{\"43\":2}}],[\"生命周期\",{\"0\":{\"43\":1}}],[\"仅接收\",{\"1\":{\"42\":1}}],[\"王五\",{\"1\":{\"42\":1}}],[\"王者荣耀\",{\"1\":{\"29\":1,\"30\":1,\"75\":1}}],[\"限制每个person对象的格式\",{\"1\":{\"42\":1}}],[\"打开nodejs控制\",{\"1\":{\"145\":1}}],[\"打印params参数\",{\"1\":{\"54\":1}}],[\"打印query参数\",{\"1\":{\"53\":1}}],[\"打印内容\",{\"1\":{\"41\":1}}],[\"打包大小减少41\",{\"1\":{\"13\":1}}],[\"获取的是组件实例对象\",{\"1\":{\"41\":1}}],[\"获取的是dom节点\",{\"1\":{\"41\":1}}],[\"用来为盒状模型提供最大的灵活性\",{\"1\":{\"103\":1}}],[\"用法\",{\"1\":{\"77\":1,\"78\":1,\"81\":1,\"82\":1}}],[\"用于获取一个响应式对象的原始对象\",{\"1\":{\"84\":1}}],[\"用于创建一个对象的深只读副本\",{\"1\":{\"81\":1}}],[\"用于创建pinia\",{\"1\":{\"60\":1}}],[\"用于更新money的方法\",{\"1\":{\"73\":1}}],[\"用于注册模板引用\",{\"1\":{\"41\":1}}],[\"用name跳转\",{\"1\":{\"54\":1}}],[\"用name也可以跳转\",{\"1\":{\"53\":1}}],[\"用在组件标签上\",{\"1\":{\"41\":2}}],[\"用在普通dom标签上\",{\"1\":{\"41\":2}}],[\"用watcheffect实现\",{\"1\":{\"40\":1}}],[\"用watch实现\",{\"1\":{\"40\":1}}],[\"取消监视\",{\"1\":{\"40\":1}}],[\"联系服务器\",{\"1\":{\"40\":2}}],[\"立刻联系服务器\",{\"1\":{\"40\":2}}],[\"立即运行一个函数\",{\"1\":{\"40\":1}}],[\"室温达到50℃\",{\"1\":{\"40\":2}}],[\"那么就可以在组件标签上多次使用v\",{\"1\":{\"70\":1}}],[\"那么最好写函数式\",{\"1\":{\"38\":1}}],[\"那就监视哪些属性\",{\"1\":{\"40\":1}}],[\"都指定为网格线的名字\",{\"1\":{\"139\":1}}],[\"都可以取下面这些值\",{\"1\":{\"134\":1,\"135\":1}}],[\"都可以指定容器内部多个项目的位置\",{\"1\":{\"122\":1}}],[\"都将等比例缩小\",{\"1\":{\"115\":1}}],[\"都能监听响应式数据的变化\",{\"1\":{\"40\":1}}],[\"都是新值\",{\"1\":{\"36\":1}}],[\"也是只作用于单个项目\",{\"1\":{\"142\":1}}],[\"也不放大\",{\"1\":{\"114\":1}}],[\"也可以使用span关键字\",{\"1\":{\"140\":1}}],[\"也可以使用百分比\",{\"1\":{\"130\":1}}],[\"也可以将它设成column\",{\"1\":{\"133\":1}}],[\"也可以更换value\",{\"1\":{\"70\":2}}],[\"也可写成函数\",{\"1\":{\"38\":1}}],[\"也能写函数\",{\"1\":{\"38\":1}}],[\"爱玛\",{\"1\":{\"38\":1,\"39\":1}}],[\"雅迪\",{\"1\":{\"38\":1,\"39\":1}}],[\"大众\",{\"1\":{\"38\":1,\"39\":1}}],[\"大帅老猿\",{\"1\":{\"22\":1}}],[\"宝马\",{\"1\":{\"38\":1,\"39\":1}}],[\"或者该单元格不属于任何区域\",{\"1\":{\"132\":1}}],[\"或每一列\",{\"1\":{\"130\":1}}],[\"或是写入而不触发更改的特殊方法\",{\"1\":{\"84\":1}}],[\"或水位达到50\",{\"1\":{\"40\":1}}],[\"或水位达到20cm\",{\"1\":{\"40\":3}}],[\"或\",{\"1\":{\"38\":1,\"47\":1,\"51\":1}}],[\"需要了解一些基本概念\",{\"1\":{\"123\":1}}],[\"需要经过处理后再使用时\",{\"1\":{\"64\":1}}],[\"需要提前在规则中占位\",{\"1\":{\"54\":1}}],[\"需要写完整的路径\",{\"1\":{\"50\":1}}],[\"需要写成函数形式\",{\"1\":{\"38\":1}}],[\"需要服务端配合处理路径问题\",{\"1\":{\"48\":1}}],[\"需要的时候再去挂载\",{\"1\":{\"47\":1}}],[\"需要明确的指出要监视\",{\"1\":{\"40\":1}}],[\"需要关注对象内部\",{\"1\":{\"38\":1}}],[\"需要手动开启深度监视\",{\"1\":{\"36\":1,\"38\":1}}],[\"和垂直的交叉轴\",{\"1\":{\"104\":1}}],[\"和\",{\"1\":{\"36\":1,\"61\":1,\"79\":1,\"90\":2,\"117\":2,\"122\":1}}],[\"和vue2中的watch作用一致\",{\"1\":{\"34\":1}}],[\"和vue2中的computed作用一致\",{\"1\":{\"33\":1}}],[\"要对msg持续关注\",{\"1\":{\"86\":1}}],[\"要明确指出监视的数据\",{\"1\":{\"40\":1}}],[\"要写成函数式\",{\"1\":{\"38\":1}}],[\"要手动开启深度监视\",{\"1\":{\"36\":1}}],[\"要用ref\",{\"1\":{\"29\":1}}],[\"地址值\",{\"1\":{\"36\":1}}],[\"情况五\",{\"0\":{\"39\":1},\"1\":{\"39\":1}}],[\"情况四\",{\"0\":{\"38\":1},\"1\":{\"38\":2}}],[\"情况三\",{\"0\":{\"37\":1},\"1\":{\"37\":1}}],[\"情况二\",{\"0\":{\"36\":1}}],[\"情况一\",{\"0\":{\"35\":1},\"1\":{\"35\":1,\"36\":1}}],[\"通知vue数据msg变化了\",{\"1\":{\"86\":1}}],[\"通过使用\",{\"1\":{\"79\":1}}],[\"通过\",{\"1\":{\"65\":1}}],[\"通过点击导航\",{\"1\":{\"47\":1}}],[\"通过ref获取元素\",{\"1\":{\"41\":1}}],[\"通过id获取元素\",{\"1\":{\"41\":1}}],[\"通过toref将person对象中的gender属性取出\",{\"1\":{\"32\":1}}],[\"通过torefs将person对象中的n个属性批量取出\",{\"1\":{\"32\":1}}],[\"通常会遇到以下几种情况\",{\"1\":{\"34\":1}}],[\"函数产生一个长度范围\",{\"1\":{\"130\":1}}],[\"函数\",{\"1\":{\"130\":1}}],[\"函数中用到哪些属性\",{\"1\":{\"40\":1}}],[\"函数返回一个值\",{\"1\":{\"34\":1}}],[\"函数创建一个应用实例\",{\"1\":{\"18\":1}}],[\"特点\",{\"1\":{\"34\":1,\"77\":1,\"78\":1,\"81\":1,\"82\":1}}],[\"特点如下\",{\"1\":{\"24\":1}}],[\"既读取又修改\",{\"1\":{\"33\":1}}],[\"+\",{\"1\":{\"33\":4,\"102\":2,\"127\":2,\"140\":2}}],[\"+=\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":2,\"35\":1,\"36\":2,\"37\":2,\"38\":2,\"39\":2,\"40\":2,\"43\":1,\"44\":1,\"62\":1,\"73\":3}}],[\"名\",{\"1\":{\"33\":1}}],[\"姓\",{\"1\":{\"33\":1}}],[\"8号项目指定在第4行\",{\"1\":{\"136\":1}}],[\"8号项目和9号项目被挤到了第四列\",{\"1\":{\"133\":1}}],[\"8号项目和9号项目就会排到第四行\",{\"1\":{\"133\":1}}],[\"888\",{\"1\":{\"37\":1}}],[\"80px\",{\"1\":{\"130\":1}}],[\"80\",{\"1\":{\"37\":1}}],[\"8\",{\"0\":{\"33\":1,\"52\":1,\"66\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"136\":1},\"1\":{\"73\":1,\"145\":1}}],[\"女\",{\"1\":{\"32\":1}}],[\"~\",{\"1\":{\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\"男\",{\"1\":{\"32\":1}}],[\"将占满整个容器的高度\",{\"1\":{\"110\":1}}],[\"将接收的value值赋给input元素的value属性\",{\"1\":{\"70\":1}}],[\"将特定的路径\",{\"1\":{\"58\":1}}],[\"将一个响应式对象中的每一个属性\",{\"1\":{\"32\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"70\",{\"1\":{\"130\":1}}],[\"777\",{\"1\":{\"69\":1}}],[\"7\",{\"0\":{\"32\":1,\"51\":1,\"65\":1,\"73\":1,\"76\":1,\"80\":1,\"83\":1,\"86\":1,\"135\":1},\"1\":{\"130\":1,\"145\":1}}],[\"且这个值大于最大宽度\",{\"1\":{\"130\":1}}],[\"且在seo优化方面相对较差\",{\"1\":{\"48\":1}}],[\"且该属性是对象类型的\",{\"1\":{\"38\":1}}],[\"且该属性是基本类型的\",{\"1\":{\"38\":1}}],[\"且默认是开启深度监视的\",{\"1\":{\"37\":1}}],[\"且默认开启了深度监视\",{\"1\":{\"37\":1}}],[\"且依然保持响应式的能力\",{\"1\":{\"32\":2}}],[\"且层级较深\",{\"1\":{\"31\":1}}],[\"且vue3中的模板中可以没有根标签\",{\"1\":{\"19\":1}}],[\"层级不深\",{\"1\":{\"31\":1}}],[\"宏观角度看\",{\"1\":{\"31\":1}}],[\"内层的三个<div>元素就是项目\",{\"1\":{\"124\":1}}],[\"内核的浏览器\",{\"1\":{\"103\":1}}],[\"内容001`\",{\"1\":{\"54\":1}}],[\"内部其实也是调用了reactive函数\",{\"1\":{\"30\":1}}],[\"内存减少54\",{\"1\":{\"13\":1}}],[\"其实ref接收的数据可以是\",{\"1\":{\"30\":1}}],[\"其他项目都没有指定位置\",{\"1\":{\"139\":1}}],[\"其他项目都为1\",{\"1\":{\"114\":1,\"115\":1}}],[\"其他都与align\",{\"1\":{\"118\":1}}],[\"其他改变\",{\"1\":{\"16\":1}}],[\"其他\",{\"0\":{\"90\":1,\"97\":1},\"2\":{\"1\":1,\"100\":1}}],[\"流星蝴蝶剑\",{\"1\":{\"29\":1,\"30\":1}}],[\"6\",{\"0\":{\"31\":1,\"50\":1,\"64\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":2,\"73\":1,\"111\":1,\"118\":1,\"134\":1},\"1\":{\"61\":1,\"73\":3,\"130\":1,\"145\":1}}],[\"666\",{\"1\":{\"29\":1,\"30\":1,\"37\":1,\"62\":1,\"69\":1,\"71\":1}}],[\"600+次\",{\"1\":{\"12\":1}}],[\"原始的行高为100px\",{\"1\":{\"136\":1}}],[\"原始对象\",{\"1\":{\"84\":1}}],[\"原因\",{\"1\":{\"99\":1}}],[\"原理如下\",{\"1\":{\"72\":1}}],[\"原生事件\",{\"1\":{\"68\":2}}],[\"原神\",{\"1\":{\"29\":1,\"30\":1}}],[\"原来写在methods中\",{\"1\":{\"24\":1}}],[\"原来写在data中\",{\"1\":{\"24\":1}}],[\"奔驰\",{\"1\":{\"29\":1,\"30\":1,\"38\":1,\"39\":1,\"67\":1,\"73\":1}}],[\"keycode\",{\"1\":{\"68\":1,\"90\":1}}],[\"key=\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"44\":1,\"51\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"keys\",{\"1\":{\"17\":1}}],[\"万<\",{\"1\":{\"29\":1,\"30\":1}}],[\"价值\",{\"1\":{\"29\":1,\"30\":1}}],[\"汽车\",{\"1\":{\"29\":1,\"30\":1}}],[\"一些项目的指定位置\",{\"1\":{\"136\":1}}],[\"一类定义在容器上面\",{\"1\":{\"128\":1}}],[\"一\",{\"0\":{\"103\":1,\"122\":1}}],[\"一旦变化就更新\",{\"1\":{\"86\":1}}],[\"一般组件通常存放在components文件夹\",{\"1\":{\"47\":1}}],[\"一前一后\",{\"1\":{\"43\":1}}],[\"一台\",{\"1\":{\"29\":1,\"30\":1}}],[\"一个区域由单个或多个单元格组成\",{\"1\":{\"132\":1}}],[\"一个包含上述内容的数组\",{\"1\":{\"34\":1}}],[\"一个proxy的实例对象\",{\"1\":{\"29\":1}}],[\"一个refimpl的实例对象\",{\"1\":{\"28\":1}}],[\"一个简单的效果\",{\"0\":{\"19\":1}}],[\"深层次\",{\"1\":{\"29\":1}}],[\"响应式对象\",{\"1\":{\"29\":1,\"84\":1}}],[\"响应式对象=\",{\"1\":{\"29\":1}}],[\"源对象\",{\"1\":{\"29\":1}}],[\"源码的升级\",{\"0\":{\"14\":1}}],[\"定义并暴露一个store\",{\"1\":{\"61\":2,\"64\":1}}],[\"定义一个自定义类型persons\",{\"1\":{\"42\":1}}],[\"定义一个接口\",{\"1\":{\"42\":1}}],[\"定义一个响应式对象\",{\"1\":{\"29\":1}}],[\"定义的\",{\"1\":{\"35\":2,\"36\":2,\"37\":2,\"38\":1}}],[\"定义响应式变量\",{\"1\":{\"28\":1}}],[\"所以会采用默认位置\",{\"1\":{\"139\":1}}],[\"所以会排在2号项目后面\",{\"1\":{\"133\":1}}],[\"所以这里就不详细介绍这两个属性了\",{\"1\":{\"137\":1}}],[\"所以3号项目在第一列\",{\"1\":{\"133\":1}}],[\"所以3号项目就会紧跟在1号项目的后面\",{\"1\":{\"133\":1}}],[\"所以\",{\"1\":{\"109\":1,\"111\":1,\"135\":1}}],[\"所以如下代码并不会引起页面的更新\",{\"1\":{\"28\":1}}],[\"所有钩子执行的\",{\"1\":{\"24\":1}}],[\"它接受两个参数\",{\"1\":{\"130\":1}}],[\"它们的写法与grid\",{\"1\":{\"136\":1}}],[\"它们的value属性是响应式的\",{\"1\":{\"28\":1}}],[\"它们也存在重大区别\",{\"1\":{\"122\":1}}],[\"它将网页划分成一个个网格\",{\"1\":{\"122\":1}}],[\"它可以设为跟width或height属性一样的值\",{\"1\":{\"116\":1}}],[\"它可能取5个值\",{\"1\":{\"109\":1,\"110\":1}}],[\"它可能取三个值\",{\"1\":{\"107\":1}}],[\"它可能有4个值\",{\"1\":{\"106\":1}}],[\"它的默认值为auto\",{\"1\":{\"116\":1}}],[\"它的所有子元素自动成为容器成员\",{\"1\":{\"104\":1}}],[\"它对于那些特殊布局非常不方便\",{\"1\":{\"102\":1}}],[\"它有三个概念\",{\"1\":{\"61\":1}}],[\"它是\",{\"1\":{\"24\":2}}],[\"但也可以设成行内元素\",{\"1\":{\"129\":1}}],[\"但是某一个项目指定在第5行\",{\"1\":{\"136\":1}}],[\"但是容器的大小不确定\",{\"1\":{\"130\":1}}],[\"但是\",{\"1\":{\"122\":1,\"136\":1}}],[\"但是在ios端需要传第一次进入该网站时的url\",{\"1\":{\"99\":1}}],[\"但只作用于单个项目\",{\"1\":{\"142\":1}}],[\"但只作用于对象的顶层属性\",{\"1\":{\"82\":1}}],[\"但只对顶层属性进行响应式处理\",{\"1\":{\"77\":1}}],[\"但嵌套对象的属性不是\",{\"1\":{\"78\":1}}],[\"但使用数据所遍历出来的结构由app组件决定\",{\"1\":{\"75\":1}}],[\"但根据数据生成的结构需要组件的使用者来决定\",{\"1\":{\"75\":1}}],[\"但torefs可以批量转换\",{\"1\":{\"32\":1}}],[\"但模板中不需要\",{\"1\":{\"28\":1}}],[\"但在setup中不能访问到vue2的配置\",{\"1\":{\"26\":1}}],[\"简化重复的值\",{\"1\":{\"130\":1}}],[\"简化后\",{\"1\":{\"50\":1}}],[\"简化前\",{\"1\":{\"50\":1}}],[\"简称\",{\"1\":{\"29\":1,\"104\":2}}],[\"简称ref对象\",{\"1\":{\"28\":1}}],[\"简称ref对象或ref\",{\"1\":{\"28\":1}}],[\"简历\",{\"2\":{\"2\":1}}],[\"返回的对象不再是响应式的\",{\"1\":{\"84\":1}}],[\"返回值\",{\"1\":{\"28\":1,\"29\":1}}],[\"返回一个对象\",{\"1\":{\"24\":1}}],[\"初始值\",{\"1\":{\"28\":1}}],[\"初次渲染快55\",{\"1\":{\"13\":1}}],[\"语法如下\",{\"1\":{\"32\":1,\"131\":1}}],[\"语法\",{\"1\":{\"28\":1,\"29\":1}}],[\"语法糖\",{\"0\":{\"27\":1}}],[\"基本上等于该列单元格的最大宽度\",{\"1\":{\"130\":1}}],[\"基本概念\",{\"0\":{\"104\":1,\"123\":1}}],[\"基本切换效果\",{\"0\":{\"46\":1}}],[\"基本类型数据\",{\"1\":{\"31\":1}}],[\"基本类型\",{\"1\":{\"30\":1,\"35\":3}}],[\"基本类型不要用它\",{\"1\":{\"29\":1}}],[\"基本类型的响应式数据\",{\"0\":{\"28\":1}}],[\"基于盒状模型\",{\"1\":{\"102\":1}}],[\"基于\",{\"0\":{\"17\":1,\"18\":1}}],[\"第三列和第六列为80px\",{\"1\":{\"130\":1}}],[\"第三种修改方式\",{\"1\":{\"62\":1}}],[\"第三种写法\",{\"1\":{\"42\":1}}],[\"第三步\",{\"1\":{\"27\":1,\"69\":1}}],[\"第二行\",{\"1\":{\"140\":1}}],[\"第二列\",{\"1\":{\"140\":1}}],[\"第二列的宽度\",{\"1\":{\"130\":1}}],[\"第二列的宽度是第三列的一半\",{\"1\":{\"130\":1}}],[\"第二列和第五列为20px\",{\"1\":{\"130\":1}}],[\"第二个参数是所要重复的值\",{\"1\":{\"130\":1}}],[\"第二种修改方式\",{\"1\":{\"62\":1}}],[\"第二种\",{\"1\":{\"49\":1}}],[\"第二种写法\",{\"1\":{\"42\":1}}],[\"第二步\",{\"1\":{\"27\":1,\"60\":1,\"73\":1}}],[\"第一列\",{\"1\":{\"140\":1}}],[\"第一列的宽度为150像素\",{\"1\":{\"130\":1}}],[\"第一列和第四列的宽度为100px\",{\"1\":{\"130\":1}}],[\"第一个参数是重复的次数\",{\"1\":{\"130\":1}}],[\"第一行在下方\",{\"1\":{\"107\":1}}],[\"第一行在上方\",{\"1\":{\"107\":1}}],[\"第一次获取权限会提示签名错误\",{\"1\":{\"99\":1}}],[\"第一种修改方式\",{\"1\":{\"62\":1}}],[\"第一种\",{\"1\":{\"49\":1}}],[\"第一种写法\",{\"1\":{\"42\":1}}],[\"第一步\",{\"1\":{\"27\":1,\"60\":1,\"73\":1}}],[\"ios端微信公众号页面获取签名与权限的坑\",{\"0\":{\"99\":1}}],[\"isshow\",{\"1\":{\"87\":2}}],[\"isreactive\",{\"1\":{\"84\":5}}],[\"isloading\",{\"1\":{\"44\":1}}],[\"items>\",{\"1\":{\"134\":2}}],[\"items属性的用法完全一致\",{\"1\":{\"142\":2}}],[\"items属性的合并简写形式\",{\"1\":{\"134\":1}}],[\"items属性和justify\",{\"1\":{\"134\":1}}],[\"items属性是align\",{\"1\":{\"134\":1}}],[\"items属性设置单元格内容的垂直位置\",{\"1\":{\"134\":1}}],[\"items属性设置单元格内容的水平位置\",{\"1\":{\"134\":1}}],[\"items属性完全一致\",{\"1\":{\"118\":1}}],[\"items属性定义项目在交叉轴上如何对齐\",{\"1\":{\"110\":1}}],[\"items属性\",{\"0\":{\"110\":1},\"1\":{\"118\":2}}],[\"items\",{\"0\":{\"134\":3},\"1\":{\"105\":1,\"110\":1,\"134\":6}}],[\"item\",{\"1\":{\"42\":4,\"73\":1,\"74\":1,\"104\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"124\":1,\"139\":5,\"140\":6,\"141\":3,\"142\":2}}],[\"img\",{\"1\":{\"73\":1,\"104\":1,\"106\":1,\"107\":4,\"109\":1,\"110\":1,\"111\":1,\"113\":1,\"114\":1,\"115\":1,\"118\":1,\"122\":1,\"125\":1,\"127\":1,\"129\":2,\"130\":5,\"131\":1,\"133\":5,\"134\":2,\"135\":7,\"136\":1,\"139\":3,\"140\":1,\"141\":1,\"142\":1}}],[\"images\",{\"1\":{\"44\":1,\"73\":1}}],[\"immediate等等\",{\"1\":{\"36\":1}}],[\"import\",{\"1\":{\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":4,\"42\":5,\"43\":1,\"44\":6,\"46\":6,\"53\":1,\"54\":1,\"57\":1,\"60\":3,\"61\":5,\"62\":1,\"63\":2,\"64\":1,\"66\":4,\"67\":3,\"69\":4,\"71\":3,\"73\":2,\"75\":1,\"84\":1,\"86\":1,\"88\":2}}],[\"if\",{\"1\":{\"35\":1,\"40\":3,\"62\":2,\"90\":1}}],[\"id=\",{\"1\":{\"40\":1}}],[\"id\",{\"1\":{\"29\":4,\"30\":4,\"42\":6,\"51\":1,\"53\":2,\"54\":2,\"55\":1,\"61\":4,\"66\":1,\"73\":1,\"74\":1,\"75\":5,\"84\":4,\"85\":4}}],[\"i\",{\"1\":{\"27\":1,\"69\":1,\"132\":2}}],[\"ingenuou\",{\"1\":{\"151\":1}}],[\"inline\",{\"1\":{\"103\":1,\"129\":3}}],[\"initvalue\",{\"1\":{\"86\":3}}],[\"initialvalue\",{\"1\":{\"77\":1}}],[\"inject\",{\"0\":{\"73\":1}}],[\"input=\",{\"1\":{\"70\":3}}],[\"inpt\",{\"1\":{\"41\":1}}],[\"incrementodd\",{\"1\":{\"62\":1}}],[\"increment\",{\"1\":{\"44\":5,\"62\":1,\"64\":1}}],[\"interface\",{\"1\":{\"42\":1}}],[\"innertext\",{\"1\":{\"40\":1,\"41\":3}}],[\"in\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"44\":1,\"51\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"index属性指定项目的重叠顺序\",{\"1\":{\"139\":1}}],[\"index\",{\"1\":{\"18\":1,\"44\":2,\"46\":1}}],[\"install\",{\"1\":{\"17\":1,\"60\":1,\"145\":1}}],[\"扩展\",{\"1\":{\"27\":1}}],[\"李四\",{\"1\":{\"27\":1,\"28\":1,\"36\":1,\"37\":1,\"42\":1}}],[\"中间一列为点\",{\"1\":{\"132\":1}}],[\"中间部分则为main和sidebar\",{\"1\":{\"132\":1}}],[\"中可以访问到setup中的属性\",{\"1\":{\"26\":1}}],[\"中是通过\",{\"1\":{\"18\":1}}],[\"代码路径\",{\"0\":{\"156\":1}}],[\"代码等同于下面的代码\",{\"1\":{\"131\":1}}],[\"代码如下\",{\"1\":{\"25\":1,\"27\":1}}],[\"代号\",{\"1\":{\"12\":1}}],[\"则浏览器认为与第一个值相等\",{\"1\":{\"134\":1}}],[\"则起始位置的水平网格线和垂直网格线叫做header\",{\"1\":{\"132\":1}}],[\"则使用z\",{\"1\":{\"139\":1}}],[\"则使用\",{\"1\":{\"132\":1}}],[\"则等同于stretch\",{\"1\":{\"118\":1}}],[\"则项目将占据固定空间\",{\"1\":{\"116\":1}}],[\"则空间不足时\",{\"1\":{\"115\":1}}],[\"则前者占据的剩余空间将比其他项多一倍\",{\"1\":{\"114\":1}}],[\"则它们将等分剩余空间\",{\"1\":{\"114\":1}}],[\"则联系服务器<\",{\"1\":{\"40\":1}}],[\"则setup优先\",{\"1\":{\"26\":1}}],[\"则可以自定义渲染内容\",{\"1\":{\"25\":1}}],[\"则对象中的\",{\"1\":{\"25\":1}}],[\"重新全局安装指定版本号的npm包\",{\"1\":{\"145\":1}}],[\"重新定向到已有路由\",{\"1\":{\"58\":1}}],[\"重复某种模式也是可以的\",{\"1\":{\"130\":1}}],[\"重复写同样的值非常麻烦\",{\"1\":{\"130\":1}}],[\"重庆\",{\"1\":{\"84\":1,\"85\":1}}],[\"重定向\",{\"0\":{\"58\":1}}],[\"重点关注\",{\"1\":{\"25\":1}}],[\"重写虚拟dom的实现和tree\",{\"1\":{\"14\":1}}],[\"属性值是函数\",{\"1\":{\"67\":1}}],[\"属性值是非函数\",{\"1\":{\"67\":1}}],[\"属性\",{\"0\":{\"41\":1,\"56\":1,\"129\":1,\"130\":2,\"131\":3,\"132\":1,\"133\":1,\"134\":3,\"135\":3,\"136\":2,\"137\":2,\"139\":4,\"140\":2,\"141\":1,\"142\":3},\"1\":{\"25\":1,\"72\":1,\"102\":1}}],[\"若\",{\"1\":{\"67\":2}}],[\"若使用to的对象写法\",{\"1\":{\"54\":1}}],[\"若是对象监视的是地址值\",{\"1\":{\"38\":1}}],[\"若该属性值是依然是\",{\"1\":{\"38\":1}}],[\"若该属性值不是\",{\"1\":{\"38\":1}}],[\"若修改整个ref定义的对象\",{\"1\":{\"36\":1}}],[\"若修改的是ref定义的对象中的属性\",{\"1\":{\"36\":1}}],[\"若想监视对象内部属性的变化\",{\"1\":{\"36\":1}}],[\"若想监视对象内部的数据\",{\"1\":{\"36\":1}}],[\"若想新增或者修改一个需求\",{\"1\":{\"21\":1}}],[\"若需要一个响应式对象\",{\"1\":{\"31\":2}}],[\"若需要一个基本类型的响应式数据\",{\"1\":{\"31\":1}}],[\"若ref接收的是对象类型\",{\"1\":{\"30\":1}}],[\"若返回一个函数\",{\"1\":{\"25\":1}}],[\"若返回一个对象\",{\"1\":{\"25\":1}}],[\"模板中可以直接使用\",{\"1\":{\"24\":1}}],[\"此时开发者工具中已经有了pinia选项\",{\"1\":{\"60\":1}}],[\"此时这么修改age页面是不变化的\",{\"1\":{\"24\":1,\"27\":1}}],[\"此时这么修改name页面是不变化的\",{\"1\":{\"24\":1,\"27\":1}}],[\"此时的name\",{\"1\":{\"24\":1,\"27\":1}}],[\"注意这个重要的内置关系\",{\"1\":{\"69\":1}}],[\"注意区分原生事件与自定义事件中的$event\",{\"1\":{\"68\":1}}],[\"注意区分好\",{\"1\":{\"68\":1}}],[\"注意点如下\",{\"1\":{\"38\":1}}],[\"注意点\",{\"1\":{\"28\":1,\"29\":1,\"38\":1}}],[\"注意\",{\"1\":{\"24\":3,\"27\":3,\"28\":1,\"36\":1,\"63\":1,\"71\":1,\"73\":1,\"103\":1,\"124\":1,\"129\":1,\"132\":1}}],[\"领先\",{\"1\":{\"24\":1}}],[\"可覆盖align\",{\"1\":{\"118\":1}}],[\"可提升性能\",{\"1\":{\"79\":1}}],[\"可直接编\",{\"1\":{\"38\":1}}],[\"可直接在模板中使用\",{\"1\":{\"24\":1}}],[\"可以在一行容纳所有单元格\",{\"1\":{\"130\":1}}],[\"可以看作是二维布局\",{\"1\":{\"122\":1}}],[\"可以看作是一维布局\",{\"1\":{\"122\":1}}],[\"可以任意组合不同的网格\",{\"1\":{\"122\":1}}],[\"可以确保它们收到的是普通对象\",{\"1\":{\"84\":1}}],[\"可以认为声明过的\",{\"1\":{\"71\":1}}],[\"可以实现任意组件间通信\",{\"1\":{\"69\":1}}],[\"可以是任意类型\",{\"1\":{\"68\":1}}],[\"可以将路由参数作为props传给组件\",{\"1\":{\"55\":1}}],[\"可以简化路由跳转及传参\",{\"1\":{\"50\":1}}],[\"可以直接写\",{\"1\":{\"38\":1}}],[\"可以使用repeat\",{\"1\":{\"130\":1}}],[\"可以使用\",{\"1\":{\"85\":1}}],[\"可以使用getters配置\",{\"1\":{\"64\":1}}],[\"可以使用object\",{\"1\":{\"31\":1}}],[\"可以使用volar插件自动添加\",{\"1\":{\"31\":1}}],[\"可以让我们把setup独立出去\",{\"1\":{\"27\":1}}],[\"可以用函数的方式\",{\"1\":{\"22\":1}}],[\"均配置在setup中\",{\"1\":{\"24\":1}}],[\"等同于\",{\"1\":{\"140\":2}}],[\"等设置都将失效\",{\"1\":{\"129\":1}}],[\"等待异步组件时渲染一些额外内容\",{\"1\":{\"88\":1}}],[\"等等\",{\"1\":{\"24\":1}}],[\"等支持开箱即用\",{\"1\":{\"18\":1}}],[\"监视上述的多个数据<\",{\"1\":{\"39\":1}}],[\"监视上述的多个数据\",{\"1\":{\"39\":2}}],[\"监视响应式对象中的某个属性\",{\"1\":{\"38\":2}}],[\"监视ref或reactive定义的\",{\"1\":{\"38\":1}}],[\"监视ref定义的\",{\"1\":{\"35\":1,\"36\":1}}],[\"监视reactive定义的\",{\"1\":{\"37\":1}}],[\"监视的要是对象里的属性\",{\"1\":{\"38\":1}}],[\"监视的回调\",{\"1\":{\"36\":1}}],[\"监视的是对象的地址值\",{\"1\":{\"36\":1}}],[\"监视的是对象的\",{\"1\":{\"36\":1}}],[\"监视的是其value值的改变\",{\"1\":{\"35\":1}}],[\"监视数据的变化\",{\"1\":{\"34\":1}}],[\"监视\",{\"1\":{\"24\":1,\"35\":3,\"36\":3,\"37\":3,\"38\":3,\"39\":1}}],[\"说明\",{\"1\":{\"22\":1,\"72\":1}}],[\"更接近传统的网站url\",{\"1\":{\"48\":1}}],[\"更新之前\",{\"1\":{\"43\":1}}],[\"更新完毕\",{\"1\":{\"43\":2}}],[\"更新阶段\",{\"1\":{\"43\":2}}],[\"更新\",{\"1\":{\"43\":1}}],[\"更新渲染快133\",{\"1\":{\"13\":1}}],[\"更推荐写函数\",{\"1\":{\"38\":1}}],[\"更加优雅的组织代码\",{\"1\":{\"22\":1}}],[\"不大于1fr\",{\"1\":{\"130\":1}}],[\"不包含项目的子元素\",{\"1\":{\"124\":1}}],[\"不换行\",{\"1\":{\"107\":1}}],[\"不建议保存对原始对象的持久引用\",{\"1\":{\"84\":1}}],[\"不会触发视图更新\",{\"1\":{\"84\":1}}],[\"不关心值内部的属性变化\",{\"1\":{\"77\":1}}],[\"不能用path\",{\"1\":{\"54\":1}}],[\"不太美观\",{\"1\":{\"48\":1}}],[\"不带有\",{\"1\":{\"48\":1}}],[\"不用\",{\"1\":{\"40\":1}}],[\"不用明确指出监视的数据\",{\"1\":{\"40\":1}}],[\"不同的是监听数据变化的方式不同\",{\"1\":{\"40\":1}}],[\"不修改\",{\"1\":{\"33\":1}}],[\"不是响应式的\",{\"1\":{\"28\":1}}],[\"不便于维护和复用\",{\"1\":{\"21\":1}}],[\"不再等待整个应用编译完成\",{\"1\":{\"18\":1}}],[\"的float\",{\"1\":{\"129\":1}}],[\"的网格\",{\"1\":{\"127\":1}}],[\"的单元格\",{\"1\":{\"122\":1}}],[\"的缩写\",{\"1\":{\"103\":1,\"130\":1}}],[\"的一个重点应用\",{\"1\":{\"102\":1}}],[\"的库或外部系统时\",{\"1\":{\"84\":1}}],[\"的实体\",{\"1\":{\"61\":1}}],[\"的两种写法\",{\"0\":{\"49\":1}}],[\"的\",{\"1\":{\"29\":1,\"65\":1}}],[\"的配置\",{\"1\":{\"26\":1}}],[\"的关系\",{\"0\":{\"26\":1}}],[\"的返回值\",{\"0\":{\"25\":1}}],[\"的优势\",{\"0\":{\"22\":1}}],[\"的弊端\",{\"0\":{\"21\":1}}],[\"的修饰符\",{\"1\":{\"16\":1}}],[\"风格的\",{\"1\":{\"20\":2}}],[\"配置路由规则\",{\"1\":{\"51\":1}}],[\"配置对象\",{\"1\":{\"36\":1}}],[\"配置\",{\"0\":{\"55\":1},\"1\":{\"20\":1}}],[\"配置项目名称\",{\"1\":{\"18\":1}}],[\"===\",{\"1\":{\"40\":2}}],[\"=>\",{\"1\":{\"25\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":2,\"38\":4,\"39\":2,\"40\":2,\"42\":1,\"43\":6,\"44\":4,\"64\":1,\"65\":1,\"66\":1,\"68\":1,\"69\":6,\"86\":2,\"88\":1}}],[\"=\",{\"1\":{\"19\":1,\"24\":4,\"27\":4,\"28\":7,\"29\":5,\"30\":5,\"32\":4,\"33\":7,\"35\":2,\"36\":2,\"37\":3,\"38\":4,\"39\":4,\"40\":4,\"41\":7,\"42\":4,\"43\":1,\"44\":9,\"46\":1,\"48\":2,\"51\":1,\"53\":1,\"54\":1,\"57\":2,\"60\":2,\"61\":4,\"62\":4,\"63\":2,\"64\":3,\"66\":4,\"67\":4,\"68\":2,\"69\":1,\"70\":5,\"71\":5,\"73\":2,\"75\":1,\"77\":1,\"78\":1,\"81\":2,\"82\":2,\"84\":4,\"85\":2,\"86\":3,\"87\":1,\"88\":1}}],[\"张三\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":2,\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":1}}],[\"指定每一根网格线的名字\",{\"1\":{\"130\":1}}],[\"指向的javascript\",{\"1\":{\"18\":1}}],[\"指令在组件上的使用已经被重新设计\",{\"1\":{\"90\":1}}],[\"指令\",{\"2\":{\"11\":1,\"147\":1}}],[\"minmax\",{\"1\":{\"130\":4}}],[\"mitt\",{\"0\":{\"69\":1},\"1\":{\"69\":4}}],[\"m列有m\",{\"1\":{\"127\":1}}],[\"m个单元格\",{\"1\":{\"126\":1}}],[\"msg\",{\"1\":{\"86\":2}}],[\"myobj\",{\"1\":{\"78\":1}}],[\"myvar\",{\"1\":{\"77\":1}}],[\"mutate\",{\"1\":{\"65\":2}}],[\"markraw\",{\"0\":{\"83\":1},\"1\":{\"84\":3,\"85\":3}}],[\"main\",{\"1\":{\"46\":2,\"60\":1,\"104\":1,\"116\":1,\"132\":2}}],[\"management\",{\"1\":{\"18\":1}}],[\"message\",{\"1\":{\"44\":2}}],[\"methos\",{\"1\":{\"26\":2}}],[\"methods\",{\"1\":{\"19\":1,\"21\":2,\"61\":1}}],[\"moneycontext\",{\"1\":{\"73\":1}}],[\"money\",{\"1\":{\"73\":6}}],[\"moldevalue\",{\"1\":{\"70\":1}}],[\"mosueenter等等\",{\"1\":{\"68\":1}}],[\"mount\",{\"1\":{\"46\":1,\"60\":1,\"89\":1}}],[\"mounted\",{\"1\":{\"43\":1}}],[\"modal\",{\"1\":{\"87\":1}}],[\"modelvalue\",{\"1\":{\"70\":2}}],[\"modelvalue=\",{\"1\":{\"70\":1}}],[\"modelvalue事件\",{\"1\":{\"70\":1}}],[\"model指令\",{\"1\":{\"70\":2}}],[\"model的本质是下面这行代码\",{\"1\":{\"70\":1}}],[\"model的本质\",{\"1\":{\"70\":3}}],[\"model\",{\"0\":{\"70\":1},\"1\":{\"70\":8,\"90\":1}}],[\"model里面了\",{\"1\":{\"66\":1}}],[\"model=\",{\"1\":{\"33\":2,\"70\":2}}],[\"module\",{\"1\":{\"18\":1}}],[\"在当前环境下\",{\"1\":{\"145\":1}}],[\"在现有网格的外部\",{\"1\":{\"136\":1}}],[\"在app\",{\"1\":{\"99\":1}}],[\"在安卓端获取签名需要传当前页面的url\",{\"1\":{\"99\":1}}],[\"在安卓端没问题\",{\"1\":{\"99\":1}}],[\"在同一个元素身上使用时的优先级发生了变化\",{\"1\":{\"90\":1}}],[\"在需要将响应式对象传递给非\",{\"1\":{\"84\":1}}],[\"在开发模式下\",{\"1\":{\"81\":1}}],[\"在后代组件中通过inject配置来声明接收数据\",{\"1\":{\"73\":1}}],[\"在祖先组件中通过provide配置向后代组件提供数据\",{\"1\":{\"73\":1}}],[\"在合适的时候触发事件\",{\"1\":{\"69\":1}}],[\"在父组件中\",{\"1\":{\"68\":1}}],[\"在此过程中vue会在合适的时机\",{\"1\":{\"43\":1}}],[\"在模板中均可以直接使用\",{\"1\":{\"25\":1}}],[\"在项目最外层\",{\"1\":{\"18\":1}}],[\"在线制作ico图标\",{\"1\":{\"3\":1}}],[\"安装指定版本\",{\"1\":{\"145\":1}}],[\"安装mitt\",{\"1\":{\"69\":1}}],[\"安装官方推荐的vscode插件\",{\"1\":{\"18\":1}}],[\"安装或者升级你的\",{\"1\":{\"17\":1}}],[\"<row\",{\"1\":{\"141\":2}}],[\"<routerview\",{\"1\":{\"51\":1}}],[\"<routerview><\",{\"1\":{\"46\":1}}],[\"<router\",{\"1\":{\"49\":2,\"50\":2,\"51\":2,\"53\":1}}],[\"<routerlink\",{\"1\":{\"46\":3,\"51\":1,\"53\":1,\"54\":2,\"56\":1}}],[\"<end\",{\"1\":{\"140\":2}}],[\"<justify\",{\"1\":{\"134\":1,\"135\":1,\"142\":1}}],[\"<length>\",{\"1\":{\"116\":1}}],[\"<li\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"<number>\",{\"1\":{\"114\":1,\"115\":1}}],[\"<nav\",{\"1\":{\"51\":1}}],[\"<flex\",{\"1\":{\"108\":2}}],[\"<p>我是弹窗中的一些内容<\",{\"1\":{\"87\":1}}],[\"<person\",{\"1\":{\"41\":1,\"42\":1}}],[\"<teleport\",{\"1\":{\"87\":1}}],[\"<template\",{\"1\":{\"74\":2,\"88\":2}}],[\"<template>\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":2,\"42\":2,\"43\":1,\"44\":1,\"46\":1,\"51\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":3,\"74\":1,\"75\":1,\"88\":1}}],[\"<grid\",{\"1\":{\"131\":2}}],[\"<grandchild\",{\"1\":{\"71\":1}}],[\"<game\",{\"1\":{\"75\":3}}],[\"<column\",{\"1\":{\"141\":2}}],[\"<category\",{\"1\":{\"73\":1,\"74\":1}}],[\"<child\",{\"1\":{\"67\":1,\"68\":1,\"71\":1,\"73\":1,\"88\":1}}],[\"<align\",{\"1\":{\"134\":1,\"135\":1,\"142\":1}}],[\"<a\",{\"1\":{\"74\":1}}],[\"<atguiguinput\",{\"1\":{\"70\":5}}],[\"<axioserror>error\",{\"1\":{\"44\":1}}],[\"<integer>\",{\"1\":{\"113\":1}}],[\"<input\",{\"1\":{\"33\":2,\"41\":1,\"70\":4}}],[\"<img\",{\"1\":{\"44\":1}}],[\"<br\",{\"1\":{\"33\":3,\"41\":1}}],[\"<button\",{\"1\":{\"19\":3,\"24\":3,\"27\":3,\"28\":3,\"29\":3,\"30\":3,\"32\":3,\"33\":1,\"35\":1,\"36\":3,\"37\":4,\"38\":5,\"39\":5,\"40\":2,\"41\":2,\"43\":1,\"44\":3,\"67\":1,\"68\":1,\"71\":1,\"73\":3,\"87\":1}}],[\"<ul>\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"<htmlinputelement>$event\",{\"1\":{\"70\":1}}],[\"<htmlelement>t1\",{\"1\":{\"41\":1}}],[\"<h4>汽车\",{\"1\":{\"73\":2}}],[\"<h4>资产\",{\"1\":{\"73\":2}}],[\"<h4>y\",{\"1\":{\"71\":1}}],[\"<h4>x\",{\"1\":{\"71\":1}}],[\"<h4>d\",{\"1\":{\"71\":1}}],[\"<h4>c\",{\"1\":{\"71\":1}}],[\"<h4>b\",{\"1\":{\"71\":1}}],[\"<h4>a\",{\"1\":{\"71\":1}}],[\"<h4>父给我的车\",{\"1\":{\"67\":1}}],[\"<h4>我的玩具\",{\"1\":{\"67\":1}}],[\"<h4>我的车\",{\"1\":{\"67\":1}}],[\"<h4>儿子给的玩具\",{\"1\":{\"67\":1}}],[\"<h3>加载中\",{\"1\":{\"88\":1}}],[\"<h3>我是app组件<\",{\"1\":{\"88\":1}}],[\"<h3>我是孙组件<\",{\"1\":{\"73\":1}}],[\"<h3>\",{\"1\":{\"73\":1,\"74\":1}}],[\"<h3>孙组件<\",{\"1\":{\"71\":1}}],[\"<h3>子组件<\",{\"1\":{\"67\":1,\"71\":1}}],[\"<h3>父组件<\",{\"1\":{\"71\":1,\"73\":1}}],[\"<h3>父组件\",{\"1\":{\"67\":1}}],[\"<h3\",{\"1\":{\"41\":1}}],[\"<h1\",{\"1\":{\"41\":1}}],[\"<h1>需求\",{\"1\":{\"40\":1}}],[\"<h1>情况五\",{\"1\":{\"39\":1}}],[\"<h1>情况四\",{\"1\":{\"38\":1}}],[\"<h1>情况三\",{\"1\":{\"37\":1}}],[\"<h1>情况二\",{\"1\":{\"36\":1}}],[\"<h1>情况一\",{\"1\":{\"35\":1}}],[\"<h1>你好啊\",{\"1\":{\"18\":1}}],[\"<h2\",{\"1\":{\"40\":1,\"41\":1,\"46\":1}}],[\"<h2>我是一个弹窗<\",{\"1\":{\"87\":1}}],[\"<h2>今日游戏榜单<\",{\"1\":{\"75\":1}}],[\"<h2>水位\",{\"1\":{\"40\":1}}],[\"<h2>汽车\",{\"1\":{\"38\":1,\"39\":1}}],[\"<h2>汽车信息\",{\"1\":{\"29\":1,\"30\":1}}],[\"<h2>当前求和为\",{\"1\":{\"35\":1,\"43\":1,\"44\":1,\"61\":1,\"63\":1}}],[\"<h2>性别\",{\"1\":{\"32\":1}}],[\"<h2>测试\",{\"1\":{\"29\":1,\"30\":1,\"37\":1}}],[\"<h2>游戏列表\",{\"1\":{\"29\":1,\"30\":1}}],[\"<h2>年龄\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\"<h2>姓名\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\"<hr\",{\"1\":{\"37\":1,\"44\":1}}],[\"<start\",{\"1\":{\"140\":2}}],[\"<style>\",{\"1\":{\"18\":1}}],[\"<suspense>\",{\"1\":{\"88\":1}}],[\"<slot\",{\"1\":{\"74\":2,\"75\":1}}],[\"<slot><\",{\"1\":{\"73\":1}}],[\"<span\",{\"1\":{\"44\":1}}],[\"<span>\",{\"1\":{\"33\":1}}],[\"<script\",{\"1\":{\"18\":2,\"19\":1,\"24\":1,\"27\":3,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":1,\"44\":2,\"46\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":1,\"75\":1}}],[\"<\",{\"1\":{\"18\":5,\"19\":5,\"24\":5,\"27\":7,\"28\":5,\"29\":7,\"30\":7,\"32\":6,\"33\":4,\"35\":4,\"36\":5,\"37\":6,\"38\":6,\"39\":6,\"40\":5,\"41\":8,\"42\":7,\"43\":5,\"44\":5,\"46\":7,\"49\":2,\"50\":2,\"51\":6,\"53\":4,\"54\":4,\"61\":7,\"62\":1,\"63\":4,\"67\":11,\"68\":2,\"70\":14,\"71\":15,\"73\":16,\"74\":8,\"75\":8,\"87\":2,\"88\":6,\"117\":3,\"124\":1}}],[\"<div><p>3<\",{\"1\":{\"124\":1}}],[\"<div><p>2<\",{\"1\":{\"124\":1}}],[\"<div><p>1<\",{\"1\":{\"124\":1}}],[\"<div>\",{\"1\":{\"124\":1}}],[\"<div\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"46\":3,\"51\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":3,\"74\":1,\"75\":1,\"87\":1,\"88\":1}}],[\"组合式写法\",{\"0\":{\"66\":1}}],[\"组合\",{\"1\":{\"20\":1}}],[\"组合api\",{\"1\":{\"16\":1}}],[\"组件标签上v\",{\"1\":{\"70\":1}}],[\"组件标签上使用v\",{\"1\":{\"70\":1}}],[\"组件标签上的v\",{\"1\":{\"70\":1}}],[\"组件中使用\",{\"1\":{\"86\":1}}],[\"组件中使用state中的数据\",{\"1\":{\"61\":1}}],[\"组件中读取数据\",{\"1\":{\"64\":1}}],[\"组件中调用action即可\",{\"1\":{\"62\":1}}],[\"组件中具体使用\",{\"1\":{\"44\":1}}],[\"组件中所用到的\",{\"1\":{\"24\":1}}],[\"组件名\",{\"1\":{\"18\":1}}],[\"组件\",{\"1\":{\"18\":1}}],[\"evenly\",{\"1\":{\"135\":4}}],[\"e\",{\"1\":{\"132\":1,\"141\":1}}],[\"enter\",{\"1\":{\"90\":2}}],[\"end>\",{\"1\":{\"141\":2}}],[\"end的合并简写形式\",{\"1\":{\"140\":2,\"141\":1}}],[\"end属性\",{\"1\":{\"139\":2}}],[\"end\",{\"0\":{\"139\":2},\"1\":{\"18\":2,\"104\":2,\"109\":2,\"110\":2,\"111\":2,\"118\":1,\"132\":2,\"134\":4,\"135\":3,\"139\":6,\"140\":2,\"141\":1,\"142\":3}}],[\"emit\",{\"1\":{\"69\":3,\"70\":4}}],[\"emitter\",{\"1\":{\"69\":15}}],[\"err\",{\"1\":{\"44\":2}}],[\"error\",{\"1\":{\"44\":1}}],[\"e98219e14\",{\"1\":{\"42\":1}}],[\"e98219e13\",{\"1\":{\"42\":1}}],[\"e98219e12\",{\"1\":{\"42\":1}}],[\"extend\",{\"1\":{\"27\":2}}],[\"export\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":2,\"42\":2,\"44\":3,\"46\":1,\"51\":1,\"61\":2,\"62\":1,\"64\":1,\"66\":1,\"69\":1,\"86\":1}}],[\"eslint\",{\"1\":{\"18\":1}}],[\"ui框架\",{\"1\":{\"158\":1}}],[\"uview\",{\"1\":{\"158\":3}}],[\"utils\",{\"1\":{\"69\":3}}],[\"uomg\",{\"1\":{\"66\":1}}],[\"updatemoney\",{\"1\":{\"73\":3}}],[\"updatea\",{\"1\":{\"71\":4}}],[\"updatea=\",{\"1\":{\"71\":1}}],[\"update\",{\"1\":{\"70\":7}}],[\"updated\",{\"1\":{\"43\":1}}],[\"upperschool\",{\"1\":{\"64\":2}}],[\"url带有\",{\"1\":{\"48\":1}}],[\"url更加美观\",{\"1\":{\"48\":1}}],[\"urllist\",{\"1\":{\"44\":1}}],[\"u\",{\"1\":{\"44\":2}}],[\"ul>\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"uni\",{\"1\":{\"158\":2}}],[\"uniapp\",{\"1\":{\"156\":1}}],[\"uninstall\",{\"1\":{\"145\":1}}],[\"unit\",{\"1\":{\"18\":1}}],[\"unalias\",{\"1\":{\"145\":1}}],[\"unmount\",{\"1\":{\"89\":1}}],[\"unshift\",{\"1\":{\"66\":1}}],[\"undefined\",{\"1\":{\"27\":1}}],[\"username\",{\"1\":{\"70\":10}}],[\"userouter\",{\"1\":{\"57\":2}}],[\"useroute\",{\"1\":{\"53\":2,\"54\":2,\"57\":2}}],[\"usetalkstore\",{\"1\":{\"61\":3,\"66\":1}}],[\"usecountstore\",{\"1\":{\"61\":1,\"62\":2,\"63\":2,\"64\":1}}],[\"usedog\",{\"1\":{\"44\":4}}],[\"usesumref\",{\"1\":{\"86\":1}}],[\"usesumstore\",{\"1\":{\"61\":2}}],[\"usesum\",{\"1\":{\"44\":4}}],[\"use\",{\"1\":{\"7\":1,\"17\":1,\"46\":1,\"60\":1,\"89\":1,\"145\":1}}],[\"found\",{\"1\":{\"161\":1}}],[\"footer\",{\"1\":{\"132\":3}}],[\"format=json\",{\"1\":{\"66\":1}}],[\"formatting\",{\"1\":{\"18\":1}}],[\"for=\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"44\":1,\"51\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"for\",{\"1\":{\"18\":5,\"90\":1}}],[\"f\",{\"1\":{\"132\":2}}],[\"flow这六个属性的合并简写形式\",{\"1\":{\"137\":1}}],[\"flow属性除了设置成row和column\",{\"1\":{\"133\":1}}],[\"flow属性决定\",{\"1\":{\"133\":1,\"139\":1}}],[\"flow属性是flex\",{\"1\":{\"108\":1}}],[\"flow\",{\"0\":{\"108\":1,\"133\":1},\"1\":{\"105\":1,\"108\":1,\"133\":4}}],[\"float属性\",{\"1\":{\"102\":1}}],[\"flex属性是flex\",{\"1\":{\"117\":1}}],[\"flex属性\",{\"0\":{\"117\":1}}],[\"flexible\",{\"1\":{\"103\":1}}],[\"flex\",{\"0\":{\"102\":1,\"103\":1,\"106\":1,\"107\":1,\"108\":1,\"114\":1,\"115\":1,\"116\":1},\"1\":{\"102\":2,\"103\":8,\"104\":5,\"105\":3,\"106\":2,\"107\":2,\"108\":2,\"109\":4,\"110\":4,\"111\":4,\"112\":4,\"114\":2,\"115\":2,\"116\":2,\"117\":6,\"118\":2,\"122\":3},\"2\":{\"120\":1}}],[\"fifth\",{\"1\":{\"130\":1}}],[\"fit则会尽量扩大单元格的宽度\",{\"1\":{\"130\":1}}],[\"fit\",{\"1\":{\"130\":1}}],[\"fill会用空格子填满剩余宽度\",{\"1\":{\"130\":1}}],[\"fill关键字表示自动填充\",{\"1\":{\"130\":1}}],[\"fill\",{\"1\":{\"130\":3}}],[\"filter\",{\"1\":{\"90\":1}}],[\"firstname\",{\"1\":{\"33\":5}}],[\"fallback>\",{\"1\":{\"88\":1}}],[\"fallback\",{\"1\":{\"88\":1}}],[\"false\",{\"1\":{\"87\":1}}],[\"father\",{\"1\":{\"67\":2,\"71\":2,\"73\":2}}],[\"fullname\",{\"1\":{\"33\":4}}],[\"function\",{\"1\":{\"24\":3,\"27\":3,\"28\":3,\"29\":3,\"30\":3,\"32\":3,\"33\":1,\"35\":1,\"36\":3,\"37\":4,\"38\":5,\"39\":5,\"40\":2,\"41\":2,\"43\":1,\"44\":3,\"66\":1,\"67\":1,\"69\":1,\"71\":1,\"73\":1,\"86\":1}}],[\"frontend\",{\"0\":{\"163\":1}}],[\"from\",{\"1\":{\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":4,\"42\":5,\"43\":1,\"44\":6,\"46\":6,\"53\":1,\"54\":1,\"57\":1,\"60\":3,\"61\":5,\"62\":1,\"63\":2,\"64\":1,\"66\":4,\"67\":3,\"69\":4,\"71\":3,\"73\":2,\"75\":1,\"84\":1,\"86\":1,\"88\":1,\"90\":2}}],[\"fr可以与绝对长度的单位结合使用\",{\"1\":{\"130\":1}}],[\"fraction\",{\"1\":{\"130\":1}}],[\"fragment\",{\"1\":{\"16\":1}}],[\"fr\",{\"1\":{\"130\":1}}],[\"y\",{\"1\":{\"71\":3}}],[\"yuysada03\",{\"1\":{\"61\":1}}],[\"yuysada02\",{\"1\":{\"61\":1}}],[\"yuysada01\",{\"1\":{\"61\":1}}],[\"yes\",{\"1\":{\"18\":2}}],[\"you\",{\"1\":{\"17\":1}}],[\"是最强大的\",{\"1\":{\"122\":1}}],[\"是\",{\"1\":{\"102\":1,\"103\":1}}],[\"是应用初始化时触发一次\",{\"1\":{\"99\":1}}],[\"是一种能够将我们的组件\",{\"1\":{\"87\":1}}],[\"是不受到任何打扰的\",{\"1\":{\"73\":1}}],[\"是调用emit时所提供的数据\",{\"1\":{\"68\":1}}],[\"是包含事件相关信息的对象\",{\"1\":{\"68\":1}}],[\"是旧值\",{\"1\":{\"36\":1}}],[\"是新值\",{\"1\":{\"36\":1}}],[\"是新一代前端构建工具\",{\"1\":{\"18\":1}}],[\"是分散在\",{\"1\":{\"21\":1}}],[\"是项目的入口文件\",{\"1\":{\"18\":1}}],[\"是否添加prettiert代码格式化\",{\"1\":{\"18\":1}}],[\"是否添加pinia环境\",{\"1\":{\"18\":1}}],[\"是否添加eslint语法检查\",{\"1\":{\"18\":1}}],[\"是否添加端到端测试方案\",{\"1\":{\"18\":1}}],[\"是否添加单元测试\",{\"1\":{\"18\":1}}],[\"是否添加路由环境\",{\"1\":{\"18\":1}}],[\"是否添加jsx支持\",{\"1\":{\"18\":1}}],[\"是否添加typescript支持\",{\"1\":{\"18\":1}}],[\"√\",{\"1\":{\"18\":9}}],[\"leave\",{\"1\":{\"90\":2}}],[\"let\",{\"1\":{\"24\":3,\"27\":3,\"28\":4,\"29\":4,\"30\":3,\"32\":3,\"33\":4,\"35\":1,\"36\":1,\"37\":2,\"38\":1,\"39\":1,\"40\":2,\"41\":6,\"42\":2,\"43\":1,\"44\":5,\"64\":1,\"66\":2,\"71\":4,\"73\":2,\"75\":1,\"77\":1,\"84\":4,\"85\":2,\"86\":2}}],[\"localstorage\",{\"1\":{\"65\":1,\"66\":1}}],[\"lovetalk\",{\"1\":{\"65\":1}}],[\"log\",{\"1\":{\"24\":2,\"27\":2,\"28\":2,\"30\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":2,\"38\":2,\"39\":1,\"40\":4,\"41\":8,\"42\":1,\"43\":7,\"44\":1,\"53\":1,\"54\":1,\"57\":4,\"65\":1,\"69\":3,\"84\":4}}],[\"line>\",{\"1\":{\"140\":4}}],[\"line\",{\"1\":{\"127\":1,\"130\":1}}],[\"link>\",{\"1\":{\"49\":2,\"50\":2,\"51\":2,\"53\":1}}],[\"link\",{\"1\":{\"49\":2,\"50\":2,\"51\":2,\"53\":1}}],[\"list\",{\"1\":{\"42\":5,\"51\":1}}],[\"list=\",{\"1\":{\"42\":1}}],[\"li\",{\"1\":{\"33\":2}}],[\"li>\",{\"1\":{\"29\":1,\"30\":1,\"42\":1,\"61\":1,\"73\":1,\"74\":1,\"75\":1}}],[\"layout\",{\"1\":{\"102\":1}}],[\"lastname\",{\"1\":{\"33\":5}}],[\"lang=\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":3,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":1,\"44\":2,\"46\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":1,\"75\":1}}],[\"latest\",{\"1\":{\"18\":1}}],[\"ls\",{\"1\":{\"7\":1,\"145\":2}}],[\"与交叉轴两端对齐\",{\"1\":{\"111\":1}}],[\"与交叉轴的中点对齐\",{\"1\":{\"111\":1}}],[\"与交叉轴的终点对齐\",{\"1\":{\"111\":1}}],[\"与交叉轴的起点对齐\",{\"1\":{\"111\":1}}],[\"与边框的交叉点\",{\"1\":{\"104\":1}}],[\"与消息订阅与发布\",{\"1\":{\"69\":1}}],[\"与\",{\"0\":{\"20\":1,\"26\":1,\"32\":1,\"76\":1,\"80\":1,\"83\":1},\"1\":{\"18\":1,\"82\":1,\"88\":1}}],[\"真正的按需编译\",{\"1\":{\"18\":1}}],[\"对齐容器的结束边框\",{\"1\":{\"135\":1}}],[\"对齐容器的起始边框\",{\"1\":{\"135\":1}}],[\"对齐单元格的结束边缘\",{\"1\":{\"134\":1,\"142\":1}}],[\"对齐单元格的起始边缘\",{\"1\":{\"134\":1,\"142\":1}}],[\"对所有深层的对象不会做任何处理\",{\"1\":{\"79\":1}}],[\"对路由的理解\",{\"0\":{\"45\":1}}],[\"对比\",{\"0\":{\"31\":1}}],[\"对象内部的嵌套属性仍然是可变的\",{\"1\":{\"82\":1}}],[\"对象内部的嵌套属性则不会变成响应式的\",{\"1\":{\"78\":1}}],[\"对象的所有嵌套属性都将变为只读\",{\"1\":{\"81\":1}}],[\"对象的顶层属性是响应式的\",{\"1\":{\"78\":1}}],[\"对象类型数据\",{\"1\":{\"31\":2}}],[\"对象类型\",{\"1\":{\"30\":1,\"36\":3,\"37\":3,\"38\":4}}],[\"对象类型的响应式数据\",{\"0\":{\"29\":1,\"30\":1}}],[\"对象中的内容\",{\"1\":{\"24\":1}}],[\"对于let\",{\"1\":{\"28\":1}}],[\"对\",{\"1\":{\"18\":1}}],[\"能实现极速的服务启动\",{\"1\":{\"18\":1}}],[\"header\",{\"1\":{\"132\":3,\"139\":2}}],[\"height值\",{\"1\":{\"40\":1}}],[\"height\",{\"1\":{\"40\":7}}],[\"h\",{\"1\":{\"132\":1}}],[\"href=\",{\"1\":{\"74\":1}}],[\"h4>\",{\"1\":{\"67\":4,\"71\":6,\"73\":4}}],[\"hash模式\",{\"1\":{\"48\":2}}],[\"history模式\",{\"1\":{\"48\":2}}],[\"history\",{\"1\":{\"46\":1,\"48\":2,\"51\":1}}],[\"home\",{\"1\":{\"46\":5,\"49\":2,\"50\":2,\"51\":2}}],[\"hooks\",{\"1\":{\"44\":2}}],[\"hook\",{\"0\":{\"44\":1}}],[\"h3>\",{\"1\":{\"41\":1,\"67\":2,\"71\":3,\"73\":3,\"74\":1,\"88\":2}}],[\"h2>\",{\"1\":{\"19\":2,\"24\":2,\"27\":2,\"28\":2,\"29\":3,\"30\":3,\"32\":3,\"35\":1,\"36\":2,\"37\":3,\"38\":3,\"39\":3,\"40\":2,\"41\":1,\"43\":1,\"44\":1,\"46\":1,\"61\":1,\"63\":1,\"75\":1,\"87\":1}}],[\"http\",{\"1\":{\"73\":1}}],[\"https\",{\"1\":{\"18\":1,\"44\":1,\"66\":1,\"151\":1}}],[\"htmlelement\",{\"1\":{\"41\":1}}],[\"html后\",{\"1\":{\"18\":1}}],[\"html\",{\"1\":{\"18\":1,\"87\":1}}],[\"h1>\",{\"1\":{\"18\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1}}],[\"hmr\",{\"1\":{\"18\":1}}],[\"轻量快速的热重载\",{\"1\":{\"18\":1}}],[\"官网描述\",{\"1\":{\"84\":1}}],[\"官网\",{\"1\":{\"40\":1}}],[\"官网地址\",{\"1\":{\"18\":1}}],[\"官方文档\",{\"1\":{\"93\":1}}],[\"官方推荐基于\",{\"1\":{\"17\":1}}],[\"官方发版地址\",{\"1\":{\"12\":1}}],[\"推荐使用reactive\",{\"1\":{\"31\":1}}],[\"推荐\",{\"0\":{\"18\":1}}],[\"启动\",{\"1\":{\"17\":1}}],[\">关闭弹窗<\",{\"1\":{\"87\":1}}],[\">关于<\",{\"1\":{\"46\":1}}],[\"><\",{\"1\":{\"74\":2,\"75\":1}}],[\"><br\",{\"1\":{\"41\":1}}],[\">更多<\",{\"1\":{\"74\":1}}],[\">汽车价格+1<\",{\"1\":{\"73\":1}}],[\">资产+1<\",{\"1\":{\"73\":1}}],[\">玩具给父亲<\",{\"1\":{\"67\":1}}],[\">news<\",{\"1\":{\"56\":1}}],[\">xxxx<\",{\"1\":{\"51\":2}}],[\">跳转<\",{\"1\":{\"50\":2}}],[\">home<\",{\"1\":{\"49\":1}}],[\">主页<\",{\"1\":{\"49\":1}}],[\">新闻<\",{\"1\":{\"46\":1}}],[\">首页<\",{\"1\":{\"46\":1}}],[\">vue路由测试<\",{\"1\":{\"46\":1}}],[\">vue<\",{\"1\":{\"41\":1}}],[\">再来一只狗<\",{\"1\":{\"44\":1}}],[\">加载中\",{\"1\":{\"44\":1}}],[\">前端<\",{\"1\":{\"41\":1}}],[\">尚硅谷<\",{\"1\":{\"41\":1}}],[\">水位+10<\",{\"1\":{\"40\":1}}],[\">水温+1<\",{\"1\":{\"40\":1}}],[\">水温\",{\"1\":{\"40\":1}}],[\">=\",{\"1\":{\"35\":1,\"40\":4}}],[\">点我<\",{\"1\":{\"73\":1}}],[\">点我更新a<\",{\"1\":{\"71\":1}}],[\">点我\",{\"1\":{\"44\":1}}],[\">点我+1<\",{\"1\":{\"44\":1}}],[\">点我打印内容<\",{\"1\":{\"41\":1}}],[\">点我sum+1<\",{\"1\":{\"35\":1,\"43\":1}}],[\">点我查看联系方式<\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1}}],[\">全名改为\",{\"1\":{\"33\":1}}],[\">测试<\",{\"1\":{\"29\":1,\"30\":1,\"41\":1,\"68\":1}}],[\">修改整个车<\",{\"1\":{\"38\":1,\"39\":1}}],[\">修改整个人<\",{\"1\":{\"36\":1,\"37\":1}}],[\">修改第二台车<\",{\"1\":{\"38\":1,\"39\":1}}],[\">修改第一台车<\",{\"1\":{\"38\":1,\"39\":1}}],[\">修改第一游戏<\",{\"1\":{\"29\":1,\"30\":1}}],[\">修改obj\",{\"1\":{\"37\":1}}],[\">修改性别<\",{\"1\":{\"32\":1}}],[\">修改年龄<\",{\"1\":{\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\">修改汽车价格<\",{\"1\":{\"29\":1,\"30\":1}}],[\">修改名字<\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1}}],[\">年龄+1<\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1}}],[\">\",{\"1\":{\"17\":1,\"18\":3,\"19\":2,\"24\":2,\"27\":5,\"28\":2,\"29\":3,\"30\":3,\"32\":2,\"33\":7,\"35\":2,\"36\":2,\"37\":3,\"38\":2,\"39\":2,\"40\":2,\"41\":9,\"42\":7,\"43\":3,\"44\":6,\"46\":6,\"49\":2,\"50\":2,\"51\":6,\"53\":4,\"54\":4,\"61\":3,\"62\":1,\"63\":2,\"67\":5,\"68\":3,\"70\":21,\"71\":8,\"73\":8,\"74\":3,\"75\":8,\"87\":2,\"88\":2,\"117\":3}}],[\"width\",{\"1\":{\"130\":1}}],[\"withdefaults\",{\"1\":{\"42\":1}}],[\"with\",{\"1\":{\"17\":1}}],[\"wrapper\",{\"1\":{\"130\":1}}],[\"wrap>\",{\"1\":{\"108\":1}}],[\"wrap属性的简写形式\",{\"1\":{\"108\":1}}],[\"wrap属性定义\",{\"1\":{\"107\":1}}],[\"wrap属性\",{\"0\":{\"107\":1}}],[\"wrap\",{\"1\":{\"105\":1,\"107\":5}}],[\"webkit前缀\",{\"1\":{\"103\":1}}],[\"webkit\",{\"1\":{\"103\":2}}],[\"webpack构建\",{\"1\":{\"18\":1}}],[\"watch对比watcheffect\",{\"1\":{\"40\":1}}],[\"watcheffect\",{\"0\":{\"40\":1},\"1\":{\"40\":3}}],[\"watch的第三个参数是\",{\"1\":{\"36\":1}}],[\"watch的第二个参数是\",{\"1\":{\"36\":1}}],[\"watch的第一个参数是\",{\"1\":{\"36\":1}}],[\"watch\",{\"0\":{\"34\":1},\"1\":{\"35\":2,\"36\":2,\"37\":3,\"38\":3,\"39\":2,\"40\":3}}],[\"want\",{\"1\":{\"17\":1}}],[\"order属性定义项目的排列顺序\",{\"1\":{\"113\":1}}],[\"order属性\",{\"0\":{\"113\":1}}],[\"order\",{\"1\":{\"112\":1,\"113\":1}}],[\"original\",{\"1\":{\"81\":2,\"82\":2}}],[\"oldvalue\",{\"1\":{\"35\":2,\"36\":4,\"37\":4,\"38\":4,\"39\":2}}],[\"obj变化了\",{\"1\":{\"37\":1}}],[\"object\",{\"1\":{\"37\":1}}],[\"obj\",{\"1\":{\"29\":3,\"30\":3,\"37\":4,\"66\":2}}],[\"options类型的\",{\"1\":{\"21\":1}}],[\"options\",{\"0\":{\"21\":1,\"26\":1}}],[\"optionsapi\",{\"0\":{\"20\":1}}],[\"off\",{\"1\":{\"69\":1,\"145\":1}}],[\"of\",{\"1\":{\"17\":1}}],[\"onunmounted\",{\"1\":{\"43\":3,\"69\":2}}],[\"onupdated\",{\"1\":{\"43\":4}}],[\"onbeforeunmount\",{\"1\":{\"43\":4}}],[\"onbeforeupdate\",{\"1\":{\"43\":3}}],[\"onbeforemount\",{\"1\":{\"43\":3}}],[\"onmounted\",{\"1\":{\"43\":4,\"44\":4}}],[\"on\",{\"1\":{\"16\":1,\"69\":3,\"90\":1,\"145\":1}}],[\"one\",{\"1\":{\"12\":2}}],[\"available\",{\"1\":{\"145\":1}}],[\"auto关键字表示由浏览器自己决定长度\",{\"1\":{\"130\":1}}],[\"auto\",{\"0\":{\"133\":1,\"136\":2},\"1\":{\"116\":2,\"117\":4,\"118\":1,\"130\":8,\"133\":6,\"136\":3,\"137\":3,\"139\":1}}],[\"article\",{\"1\":{\"151\":1}}],[\"area属性还可用作grid\",{\"1\":{\"141\":1}}],[\"area属性指定项目放在哪一个区域\",{\"1\":{\"141\":1}}],[\"area\",{\"0\":{\"141\":1},\"1\":{\"132\":1,\"141\":3}}],[\"areas这三个属性的合并简写形式\",{\"1\":{\"137\":1}}],[\"areas属性用于定义区域\",{\"1\":{\"132\":1}}],[\"areas\",{\"0\":{\"132\":1},\"1\":{\"132\":4,\"137\":1}}],[\"around\",{\"1\":{\"109\":2,\"111\":2,\"135\":4}}],[\"array<personinter>\",{\"1\":{\"42\":1}}],[\"arrow\",{\"1\":{\"17\":1}}],[\"axis\",{\"1\":{\"104\":2}}],[\"axioserror\",{\"1\":{\"44\":1}}],[\"axios\",{\"1\":{\"44\":3,\"61\":2,\"66\":3}}],[\"a>\",{\"1\":{\"74\":1}}],[\"a=\",{\"1\":{\"71\":1,\"75\":1}}],[\"a=1\",{\"1\":{\"53\":1}}],[\"alias\",{\"1\":{\"145\":1}}],[\"align和column\",{\"1\":{\"129\":1}}],[\"align\",{\"0\":{\"110\":1,\"111\":1,\"118\":1,\"134\":1,\"135\":1,\"142\":1},\"1\":{\"105\":2,\"110\":2,\"111\":2,\"112\":1,\"118\":2,\"134\":3,\"135\":3,\"142\":2}}],[\"align属性将失效\",{\"1\":{\"103\":1}}],[\"all\",{\"1\":{\"69\":1}}],[\"alert\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1}}],[\"abc=\",{\"1\":{\"70\":4}}],[\"abc事件被触发\",{\"1\":{\"69\":1}}],[\"abc\",{\"1\":{\"69\":2,\"70\":4}}],[\"about\",{\"1\":{\"46\":5,\"50\":2,\"51\":2,\"58\":1}}],[\"atguiguinput\",{\"1\":{\"70\":2}}],[\"atguiguinput组件中\",{\"1\":{\"70\":2}}],[\"atguigu\",{\"1\":{\"62\":1,\"64\":1}}],[\"action中可以编写一些业务逻辑\",{\"1\":{\"62\":1}}],[\"actions\",{\"1\":{\"61\":2,\"62\":1,\"64\":1}}],[\"action\",{\"1\":{\"61\":1}}],[\"active\",{\"1\":{\"46\":6,\"49\":4}}],[\"await\",{\"1\":{\"44\":1,\"66\":1}}],[\"asdda04\",{\"1\":{\"84\":1,\"85\":1}}],[\"asdda03\",{\"1\":{\"84\":1,\"85\":1}}],[\"asdda02\",{\"1\":{\"84\":1,\"85\":1}}],[\"asdda01\",{\"1\":{\"84\":1,\"85\":1}}],[\"asdasg01\",{\"1\":{\"42\":1}}],[\"asgdytsa04\",{\"1\":{\"75\":1}}],[\"asgdytsa03\",{\"1\":{\"75\":1}}],[\"asgdytsa02\",{\"1\":{\"75\":1}}],[\"asgdytsa01\",{\"1\":{\"75\":1}}],[\"async\",{\"1\":{\"44\":1,\"66\":1}}],[\"as\",{\"1\":{\"41\":1,\"44\":1,\"66\":1}}],[\"assign\",{\"1\":{\"37\":1}}],[\"assign去整体替换\",{\"1\":{\"31\":1}}],[\"ahsgdyfa03\",{\"1\":{\"29\":1,\"30\":1}}],[\"ahsgdyfa02\",{\"1\":{\"29\":1,\"30\":1}}],[\"ahsgdyfa01\",{\"1\":{\"29\":1,\"30\":1}}],[\"age\",{\"1\":{\"19\":3,\"24\":6,\"27\":5,\"28\":4,\"32\":5,\"36\":4,\"37\":4,\"38\":3,\"39\":3,\"41\":3,\"42\":6,\"84\":1}}],[\"an\",{\"1\":{\"18\":1}}],[\"app生态框架\",{\"1\":{\"158\":1}}],[\"app官网\",{\"1\":{\"158\":1}}],[\"app\",{\"1\":{\"18\":4,\"19\":1,\"33\":1,\"41\":1,\"42\":2,\"44\":1,\"46\":6,\"60\":7,\"88\":1,\"89\":6,\"156\":1,\"158\":1}}],[\"application\",{\"1\":{\"18\":1}}],[\"api进行了封装\",{\"1\":{\"44\":1}}],[\"api\",{\"0\":{\"21\":1,\"22\":1,\"26\":1,\"89\":1},\"1\":{\"16\":1,\"21\":1,\"24\":1,\"44\":1,\"66\":2,\"79\":1}}],[\"add\",{\"1\":{\"18\":8}}],[\"a\",{\"1\":{\"17\":1,\"29\":3,\"30\":3,\"37\":4,\"55\":1,\"71\":5,\"132\":5}}],[\"xyz=\",{\"1\":{\"70\":1}}],[\"xyz事件被触发\",{\"1\":{\"69\":1}}],[\"xyz\",{\"1\":{\"69\":2}}],[\"xiang\",{\"1\":{\"51\":1,\"53\":1,\"54\":1,\"55\":1}}],[\"xinwen\",{\"1\":{\"50\":1,\"51\":1}}],[\"x中的mixin\",{\"1\":{\"44\":1}}],[\"xxx\",{\"1\":{\"18\":1,\"28\":2}}],[\"x\",{\"1\":{\"17\":3,\"71\":3,\"126\":1,\"127\":1,\"130\":1,\"136\":1}}],[\"执行创建命令\",{\"1\":{\"17\":1}}],[\"gap写成gap\",{\"1\":{\"131\":1}}],[\"gap写成column\",{\"1\":{\"131\":1}}],[\"gap和row\",{\"1\":{\"131\":1}}],[\"gap和grid\",{\"1\":{\"131\":2}}],[\"gap省略了第二个值\",{\"1\":{\"131\":1}}],[\"gap>\",{\"1\":{\"131\":2}}],[\"gap的合并简写形式\",{\"1\":{\"131\":1}}],[\"gap属性是grid\",{\"1\":{\"131\":1}}],[\"gap属性设置列与列的间隔\",{\"1\":{\"131\":1}}],[\"gap属性设置行与行的间隔\",{\"1\":{\"131\":1}}],[\"gap用于设置列间距\",{\"1\":{\"131\":1}}],[\"gap用于设置行间距\",{\"1\":{\"131\":1}}],[\"gap\",{\"0\":{\"131\":3},\"1\":{\"131\":5}}],[\"game>\",{\"1\":{\"75\":1}}],[\"games=\",{\"1\":{\"75\":1}}],[\"games\",{\"1\":{\"29\":3,\"30\":3,\"73\":1,\"74\":1,\"75\":3}}],[\"grid属性是grid\",{\"1\":{\"137\":1}}],[\"grid的效果\",{\"1\":{\"129\":2}}],[\"grid指定一个容器采用网格布局\",{\"1\":{\"129\":1}}],[\"grid\",{\"0\":{\"121\":1,\"130\":2,\"131\":3,\"132\":1,\"133\":1,\"136\":2,\"137\":2,\"139\":4,\"140\":2,\"141\":1},\"1\":{\"122\":5,\"123\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":2,\"130\":28,\"131\":11,\"132\":8,\"133\":4,\"136\":5,\"137\":7,\"139\":14,\"140\":16,\"141\":8},\"2\":{\"144\":1}}],[\"grow属性为2\",{\"1\":{\"114\":1}}],[\"grow属性都为1\",{\"1\":{\"114\":1}}],[\"grow属性定义项目的放大比例\",{\"1\":{\"114\":1}}],[\"grow属性\",{\"0\":{\"114\":1}}],[\"grow\",{\"1\":{\"112\":1,\"114\":1,\"117\":2}}],[\"grand\",{\"1\":{\"71\":1,\"73\":1}}],[\"grandchild\",{\"1\":{\"71\":3}}],[\"git\",{\"1\":{\"98\":1}}],[\"guanyu\",{\"1\":{\"50\":2,\"51\":1}}],[\"gettoy\",{\"1\":{\"67\":4}}],[\"gettoy=\",{\"1\":{\"67\":1}}],[\"getters\",{\"0\":{\"64\":1},\"1\":{\"61\":2,\"64\":1}}],[\"getter\",{\"1\":{\"61\":1}}],[\"getter函数\",{\"1\":{\"34\":1}}],[\"getatalk\",{\"1\":{\"66\":2}}],[\"getatalk函数相当于action\",{\"1\":{\"66\":1}}],[\"getitem\",{\"1\":{\"66\":1}}],[\"getdog\",{\"1\":{\"44\":5}}],[\"getelementbyid\",{\"1\":{\"40\":1,\"41\":1}}],[\"get\",{\"1\":{\"33\":1,\"44\":1,\"66\":1,\"86\":1}}],[\"gender\",{\"1\":{\"32\":4}}],[\"g\",{\"1\":{\"17\":1,\"29\":3,\"30\":3,\"73\":3,\"74\":3,\"75\":3,\"132\":2}}],[\"50px\",{\"1\":{\"136\":1}}],[\"50\",{\"1\":{\"40\":3}}],[\"5\",{\"0\":{\"30\":1,\"49\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":2,\"64\":1,\"65\":1,\"66\":1,\"71\":1,\"110\":1,\"117\":1,\"133\":1},\"1\":{\"17\":1,\"130\":2,\"145\":1}}],[\"确保\",{\"1\":{\"17\":1}}],[\"查看nvm版本\",{\"1\":{\"145\":1}}],[\"查看设置代理\",{\"1\":{\"145\":1}}],[\"查看可以安装的node版本\",{\"1\":{\"145\":1}}],[\"查看远程仓库的路径\",{\"0\":{\"98\":1}}],[\"查看\",{\"1\":{\"17\":1}}],[\"查看已经安装的node版本\",{\"1\":{\"7\":1,\"145\":1}}],[\"备注\",{\"1\":{\"17\":1,\"32\":1,\"54\":2}}],[\"创建失败\",{\"1\":{\"84\":1,\"85\":1}}],[\"创建不可变的状态快照\",{\"1\":{\"81\":1}}],[\"创建的状态只在其顶层是响应式的\",{\"1\":{\"79\":1}}],[\"创建一个自定义的ref\",{\"1\":{\"86\":1}}],[\"创建一个浅层响应式对象\",{\"1\":{\"78\":1}}],[\"创建一个响应式数据\",{\"1\":{\"77\":1}}],[\"创建并暴露mitt\",{\"1\":{\"69\":1}}],[\"创建emitter\",{\"1\":{\"69\":1}}],[\"创建pinia\",{\"1\":{\"60\":1}}],[\"创建阶段\",{\"1\":{\"43\":2}}],[\"创建命令\",{\"1\":{\"18\":1}}],[\"创建项目\",{\"1\":{\"17\":1}}],[\"创建\",{\"0\":{\"17\":1,\"18\":1,\"28\":1,\"29\":1,\"30\":1},\"1\":{\"43\":1}}],[\"csdn博客\",{\"1\":{\"158\":1}}],[\"csdn\",{\"1\":{\"151\":1}}],[\"css\",{\"0\":{\"164\":1},\"1\":{\"18\":1,\"102\":1,\"122\":2,\"131\":1}}],[\"current\",{\"1\":{\"145\":1}}],[\"customref\",{\"0\":{\"86\":1},\"1\":{\"86\":2}}],[\"c三个区域\",{\"1\":{\"132\":1}}],[\"c4\",{\"1\":{\"130\":1}}],[\"c3\",{\"1\":{\"130\":1}}],[\"cell\",{\"1\":{\"126\":1,\"129\":1}}],[\"center\",{\"1\":{\"109\":2,\"110\":2,\"111\":2,\"118\":1,\"134\":3,\"135\":3,\"142\":5}}],[\"ceo\",{\"1\":{\"44\":1}}],[\"cross\",{\"1\":{\"104\":1}}],[\"createpinia\",{\"1\":{\"60\":2}}],[\"createwebhashhistory\",{\"1\":{\"48\":1}}],[\"createwebhistory\",{\"1\":{\"46\":2,\"48\":1,\"51\":1}}],[\"createrouter\",{\"1\":{\"46\":2,\"48\":2,\"51\":1}}],[\"created\",{\"1\":{\"43\":1}}],[\"createapp\",{\"1\":{\"18\":1,\"60\":2}}],[\"create\",{\"1\":{\"17\":1,\"18\":1}}],[\"citys\",{\"1\":{\"84\":2,\"85\":2}}],[\"citys2\",{\"1\":{\"84\":2,\"85\":1}}],[\"citysd\",{\"1\":{\"84\":1}}],[\"c=\",{\"1\":{\"71\":1}}],[\"category\",{\"1\":{\"75\":2}}],[\"category>\",{\"1\":{\"73\":1,\"74\":1}}],[\"catch\",{\"1\":{\"44\":1}}],[\"car=\",{\"1\":{\"67\":1}}],[\"car变化了\",{\"1\":{\"38\":1,\"39\":1}}],[\"car\",{\"1\":{\"29\":4,\"30\":5,\"38\":7,\"39\":7,\"67\":5,\"73\":6}}],[\"c2\",{\"1\":{\"38\":4,\"39\":4,\"130\":1}}],[\"c1\",{\"1\":{\"38\":4,\"39\":4,\"130\":1}}],[\"c<\",{\"1\":{\"37\":1}}],[\"c\",{\"1\":{\"29\":3,\"30\":3,\"37\":3,\"55\":1,\"71\":4,\"132\":5}}],[\"child\",{\"1\":{\"67\":4,\"71\":5,\"73\":3,\"88\":2}}],[\"children\",{\"1\":{\"51\":1}}],[\"changage\",{\"1\":{\"27\":2}}],[\"changname\",{\"1\":{\"27\":2}}],[\"changeprice\",{\"1\":{\"40\":2}}],[\"changeperson\",{\"1\":{\"36\":2,\"37\":2}}],[\"changecar\",{\"1\":{\"38\":2,\"39\":2}}],[\"changecarprice\",{\"1\":{\"29\":2,\"30\":2}}],[\"changec2\",{\"1\":{\"38\":2,\"39\":2}}],[\"changec1\",{\"1\":{\"38\":2,\"39\":2}}],[\"changesum\",{\"1\":{\"35\":2,\"40\":2,\"43\":2}}],[\"changefullname\",{\"1\":{\"33\":2}}],[\"changefirstgame\",{\"1\":{\"29\":2,\"30\":2}}],[\"changegender\",{\"1\":{\"32\":2}}],[\"changeage\",{\"1\":{\"19\":2,\"24\":3,\"28\":2,\"32\":2,\"36\":2,\"37\":2,\"38\":2,\"39\":2}}],[\"changename\",{\"1\":{\"19\":2,\"24\":3,\"28\":2,\"32\":2,\"36\":2,\"37\":2,\"38\":2,\"39\":2}}],[\"choose\",{\"1\":{\"17\":1}}],[\"clear和vertical\",{\"1\":{\"103\":1}}],[\"cleartimeout\",{\"1\":{\"86\":1}}],[\"clear\",{\"1\":{\"69\":1}}],[\"class=\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"46\":7,\"49\":2,\"51\":3,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":3,\"74\":1,\"75\":1,\"87\":1,\"88\":1}}],[\"click\",{\"1\":{\"68\":1}}],[\"click=\",{\"1\":{\"19\":3,\"24\":3,\"27\":3,\"28\":3,\"29\":3,\"30\":3,\"32\":3,\"33\":1,\"35\":1,\"36\":3,\"37\":4,\"38\":5,\"39\":5,\"40\":2,\"41\":2,\"43\":1,\"44\":3,\"67\":1,\"68\":1,\"71\":1,\"73\":3,\"87\":1}}],[\"cli版本在4\",{\"1\":{\"17\":1}}],[\"cli版本\",{\"1\":{\"17\":1}}],[\"cli已处于维护模式\",{\"1\":{\"17\":1}}],[\"cli\",{\"0\":{\"17\":1},\"1\":{\"17\":2}}],[\"cn\",{\"1\":{\"18\":1}}],[\"cd\",{\"1\":{\"17\":1}}],[\"column属性是grid\",{\"1\":{\"140\":1}}],[\"columns和grid\",{\"1\":{\"136\":1}}],[\"columns属性对于网页布局非常有用\",{\"1\":{\"130\":1}}],[\"columns属性和grid\",{\"1\":{\"130\":1,\"136\":1}}],[\"columns属性定义每一列的列宽\",{\"1\":{\"130\":1}}],[\"columns\",{\"0\":{\"130\":1,\"136\":1},\"1\":{\"130\":12,\"132\":1,\"136\":1,\"137\":3}}],[\"column\",{\"0\":{\"131\":1,\"139\":2,\"140\":1},\"1\":{\"106\":4,\"125\":1,\"131\":6,\"133\":2,\"139\":10,\"140\":9,\"141\":2}}],[\"color\",{\"1\":{\"18\":1}}],[\"com\",{\"1\":{\"66\":1}}],[\"component\",{\"1\":{\"46\":2,\"50\":3,\"51\":4,\"55\":1,\"89\":1}}],[\"components\",{\"1\":{\"41\":1,\"42\":1}}],[\"compositionapi\",{\"0\":{\"20\":1}}],[\"composition\",{\"0\":{\"22\":1},\"1\":{\"16\":1,\"24\":1}}],[\"computed\",{\"0\":{\"33\":1},\"1\":{\"21\":1,\"33\":3,\"61\":1}}],[\"computed中的\",{\"1\":{\"21\":1}}],[\"computed与watch\",{\"1\":{\"16\":1}}],[\"countstore\",{\"1\":{\"62\":4,\"63\":2,\"64\":2}}],[\"count\",{\"1\":{\"61\":4,\"62\":1,\"63\":3,\"64\":1}}],[\"container\",{\"1\":{\"104\":1,\"124\":1,\"130\":7,\"131\":2,\"132\":1,\"134\":3,\"135\":1,\"136\":1}}],[\"content>\",{\"1\":{\"135\":2}}],[\"content属性的合并简写形式\",{\"1\":{\"135\":1}}],[\"content属性的图完全一样\",{\"1\":{\"135\":1}}],[\"content属性和justify\",{\"1\":{\"135\":1}}],[\"content属性是align\",{\"1\":{\"135\":1}}],[\"content属性是整个内容区域的垂直位置\",{\"1\":{\"135\":1}}],[\"content属性是整个内容区域在容器里面的水平位置\",{\"1\":{\"135\":1}}],[\"content属性为例\",{\"1\":{\"135\":1}}],[\"content属性定义了多根轴线的对齐方式\",{\"1\":{\"111\":1}}],[\"content属性定义了项目在主轴上的对齐方式\",{\"1\":{\"109\":1}}],[\"content属性\",{\"0\":{\"109\":1,\"111\":1}}],[\"content=欢迎你\",{\"1\":{\"53\":1}}],[\"content\",{\"0\":{\"135\":3},\"1\":{\"46\":1,\"53\":2,\"54\":1,\"55\":1,\"61\":4,\"66\":1,\"105\":2,\"109\":1,\"111\":1,\"135\":4}}],[\"const\",{\"1\":{\"35\":1,\"40\":2,\"41\":1,\"42\":1,\"44\":3,\"46\":1,\"48\":2,\"51\":1,\"53\":1,\"54\":1,\"57\":2,\"60\":2,\"61\":4,\"62\":2,\"63\":2,\"64\":2,\"66\":2,\"67\":3,\"69\":1,\"70\":2,\"78\":1,\"81\":2,\"82\":2,\"88\":1}}],[\"console\",{\"1\":{\"24\":2,\"27\":2,\"28\":2,\"30\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":2,\"38\":2,\"39\":1,\"40\":4,\"41\":8,\"42\":1,\"43\":7,\"44\":1,\"53\":1,\"54\":1,\"57\":4,\"65\":1,\"69\":3,\"84\":4}}],[\"config\",{\"1\":{\"27\":1,\"89\":1}}],[\"code\",{\"1\":{\"18\":2}}],[\"core\",{\"1\":{\"12\":1}}],[\"选项应始终被声明为一个函数\",{\"1\":{\"16\":1}}],[\"timer\",{\"1\":{\"86\":3}}],[\"title=\",{\"1\":{\"73\":1,\"74\":1}}],[\"title\",{\"1\":{\"46\":1,\"53\":3,\"54\":5,\"55\":1,\"66\":2,\"73\":1,\"74\":1}}],[\"title3\",{\"1\":{\"41\":3}}],[\"title2\",{\"1\":{\"41\":3}}],[\"title1\",{\"1\":{\"41\":4}}],[\"table\",{\"1\":{\"129\":1}}],[\"target\",{\"1\":{\"68\":1,\"70\":3}}],[\"talkstore\",{\"1\":{\"61\":2,\"65\":1}}],[\"talklist就是state\",{\"1\":{\"66\":1}}],[\"talklist\",{\"1\":{\"61\":2,\"65\":1,\"66\":4}}],[\"talk\",{\"1\":{\"61\":6,\"65\":1,\"66\":1}}],[\"trigger\",{\"1\":{\"86\":2}}],[\"track\",{\"1\":{\"86\":2}}],[\"try\",{\"1\":{\"44\":1}}],[\"true\",{\"1\":{\"36\":1,\"38\":1,\"39\":1,\"55\":1}}],[\"t1\",{\"1\":{\"41\":3}}],[\"types\",{\"1\":{\"42\":2}}],[\"typescript\",{\"0\":{\"15\":1,\"148\":1,\"151\":1},\"1\":{\"18\":2}}],[\"type\",{\"1\":{\"42\":3}}],[\"type=\",{\"1\":{\"18\":1,\"33\":2,\"41\":1,\"70\":4}}],[\"ts代码如下\",{\"1\":{\"46\":1}}],[\"ts中内容如下\",{\"1\":{\"44\":2}}],[\"ts\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":4,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":1,\"44\":2,\"46\":1,\"60\":1,\"61\":4,\"63\":1,\"67\":2,\"69\":1,\"70\":2,\"71\":3,\"73\":1,\"75\":1,\"86\":1},\"2\":{\"150\":1,\"153\":1}}],[\"this\",{\"1\":{\"19\":3,\"27\":1,\"62\":4,\"64\":1,\"68\":1}}],[\"the\",{\"1\":{\"17\":1}}],[\"that\",{\"1\":{\"17\":1}}],[\"tony\",{\"1\":{\"84\":1}}],[\"toraw\",{\"0\":{\"83\":1},\"1\":{\"84\":5}}],[\"toref\",{\"0\":{\"32\":1},\"1\":{\"32\":2}}],[\"torefs与toref功能一致\",{\"1\":{\"32\":1}}],[\"torefs\",{\"0\":{\"32\":1},\"1\":{\"32\":2}}],[\"toy事件被触发\",{\"1\":{\"69\":1}}],[\"toy=\",{\"1\":{\"68\":1}}],[\"toy\",{\"1\":{\"67\":6,\"68\":3,\"69\":4}}],[\"touppercase\",{\"1\":{\"64\":1}}],[\"to的对象写法配合name属性\",{\"1\":{\"50\":1}}],[\"to的对象写法\",{\"1\":{\"49\":1,\"53\":1,\"54\":1}}],[\"to的字符串写法\",{\"1\":{\"49\":1,\"50\":1,\"53\":1,\"54\":1}}],[\"to=\",{\"1\":{\"46\":3,\"49\":2,\"50\":2,\"51\":3,\"53\":2,\"54\":2,\"87\":1}}],[\"to\",{\"0\":{\"49\":1},\"1\":{\"17\":1,\"18\":1}}],[\"template属性是grid\",{\"1\":{\"137\":1}}],[\"template\",{\"0\":{\"130\":2,\"132\":1,\"137\":1},\"1\":{\"130\":21,\"132\":7,\"136\":4,\"137\":6}}],[\"template>\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":2,\"42\":2,\"43\":1,\"44\":1,\"46\":1,\"51\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":3,\"74\":3,\"75\":1,\"88\":3}}],[\"temp\",{\"1\":{\"40\":7}}],[\"text\",{\"1\":{\"33\":2,\"41\":1,\"70\":4}}],[\"tel就是一个普通的字符串\",{\"1\":{\"28\":1}}],[\"tel都不是响应式数据\",{\"1\":{\"27\":1}}],[\"tel数据都不是响应式数据\",{\"1\":{\"24\":1}}],[\"tel\",{\"1\":{\"19\":2,\"24\":3,\"27\":2,\"28\":2}}],[\"teleport>\",{\"1\":{\"87\":1}}],[\"teleport\",{\"0\":{\"87\":1},\"1\":{\"16\":1,\"87\":2}}],[\"testing\",{\"1\":{\"18\":2}}],[\"test\",{\"1\":{\"17\":2,\"18\":1,\"29\":2,\"30\":2,\"37\":2,\"41\":2}}],[\"sortable\",{\"1\":{\"158\":1}}],[\"solution\",{\"1\":{\"18\":1}}],[\"safari\",{\"1\":{\"103\":1}}],[\"san\",{\"1\":{\"19\":1,\"24\":1,\"28\":1,\"33\":1}}],[\"sync\",{\"1\":{\"90\":1}}],[\"sync优化到了v\",{\"1\":{\"66\":1}}],[\"s2\",{\"1\":{\"74\":1}}],[\"s2>\",{\"1\":{\"74\":1}}],[\"s1\",{\"1\":{\"74\":1}}],[\"s1>\",{\"1\":{\"74\":1}}],[\"slot=\",{\"1\":{\"75\":1}}],[\"slot>\",{\"1\":{\"73\":1,\"74\":2,\"75\":1}}],[\"slot\",{\"1\":{\"73\":2,\"74\":1,\"75\":1,\"88\":2}}],[\"school\",{\"1\":{\"62\":1,\"64\":3}}],[\"script>\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":1,\"44\":2,\"46\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":1,\"75\":1}}],[\"src\",{\"1\":{\"61\":2,\"69\":1}}],[\"src=\",{\"1\":{\"18\":1,\"44\":1}}],[\"span\",{\"1\":{\"139\":2,\"140\":2}}],[\"span><br\",{\"1\":{\"44\":1}}],[\"span>\",{\"1\":{\"33\":1}}],[\"space\",{\"1\":{\"109\":4,\"111\":4,\"135\":11}}],[\"split\",{\"1\":{\"33\":2}}],[\"sidebar\",{\"1\":{\"132\":1}}],[\"size\",{\"1\":{\"104\":2,\"116\":1}}],[\"si\",{\"1\":{\"33\":1}}],[\"si<\",{\"1\":{\"33\":1}}],[\"single\",{\"1\":{\"18\":1}}],[\"stretch\",{\"1\":{\"110\":2,\"111\":2,\"118\":1,\"134\":3,\"135\":3,\"142\":3}}],[\"stringify\",{\"1\":{\"65\":1}}],[\"string\",{\"1\":{\"42\":2,\"44\":1,\"64\":1,\"66\":1,\"67\":1,\"86\":1}}],[\"storetorefs\",{\"0\":{\"63\":1},\"1\":{\"63\":2,\"64\":1}}],[\"store\",{\"0\":{\"66\":1},\"1\":{\"61\":4,\"63\":1,\"65\":1}}],[\"store是一个保存\",{\"1\":{\"61\":1}}],[\"stopwtach\",{\"1\":{\"40\":2}}],[\"stopwatch\",{\"1\":{\"35\":2}}],[\"style>\",{\"1\":{\"18\":1}}],[\"state\",{\"1\":{\"18\":1,\"61\":3,\"64\":3,\"65\":3}}],[\"start的例子\",{\"1\":{\"142\":1}}],[\"start>\",{\"1\":{\"141\":2}}],[\"start和grid\",{\"1\":{\"140\":1}}],[\"start属性和grid\",{\"1\":{\"140\":1}}],[\"start属性\",{\"1\":{\"139\":2}}],[\"start\",{\"0\":{\"139\":2},\"1\":{\"17\":1,\"104\":2,\"109\":2,\"110\":2,\"111\":2,\"118\":1,\"132\":2,\"134\":6,\"135\":3,\"139\":6,\"140\":2,\"141\":2,\"142\":4}}],[\"sumstore\",{\"1\":{\"61\":2}}],[\"sum变化了\",{\"1\":{\"35\":1}}],[\"sum\",{\"1\":{\"35\":4,\"43\":3,\"44\":6,\"61\":3,\"62\":6,\"63\":2,\"64\":3}}],[\"support\",{\"1\":{\"18\":1}}],[\"suspense>\",{\"1\":{\"88\":1}}],[\"suspense\",{\"0\":{\"88\":1},\"1\":{\"16\":1,\"88\":1}}],[\"self>\",{\"1\":{\"142\":2}}],[\"self属性会认为这两个值相等\",{\"1\":{\"142\":1}}],[\"self属性的合并简写形式\",{\"1\":{\"142\":1}}],[\"self属性和justify\",{\"1\":{\"142\":1}}],[\"self属性是align\",{\"1\":{\"142\":1}}],[\"self属性设置单元格内容的垂直位置\",{\"1\":{\"142\":1}}],[\"self属性设置单元格内容的水平位置\",{\"1\":{\"142\":1}}],[\"self属性允许单个项目有与其他项目不一样的对齐方式\",{\"1\":{\"118\":1}}],[\"self属性\",{\"0\":{\"118\":1}}],[\"self\",{\"0\":{\"142\":3},\"1\":{\"112\":1,\"118\":1,\"142\":6}}],[\"sendtoy\",{\"1\":{\"69\":1}}],[\"send\",{\"1\":{\"68\":2,\"69\":4}}],[\"settimeout\",{\"1\":{\"69\":1,\"86\":1}}],[\"setinterval\",{\"1\":{\"69\":1}}],[\"setitem\",{\"1\":{\"65\":1}}],[\"set\",{\"1\":{\"33\":1,\"86\":1}}],[\"setup函数有一个语法糖\",{\"1\":{\"27\":1}}],[\"setup函数会在beforecreate之前调用\",{\"1\":{\"24\":1}}],[\"setup函数返回的对象中的内容\",{\"1\":{\"24\":1}}],[\"setup中访问this是undefined\",{\"1\":{\"24\":1}}],[\"setup是vue3中一个新的配置项\",{\"1\":{\"24\":1}}],[\"setup\",{\"0\":{\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1},\"1\":{\"16\":1,\"24\":1,\"25\":1,\"27\":4,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":3,\"44\":1,\"46\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":1,\"75\":1}}],[\"serve\",{\"1\":{\"17\":1}}],[\"shrink属性为0\",{\"1\":{\"115\":1}}],[\"shrink属性都为1\",{\"1\":{\"115\":1}}],[\"shrink属性定义了项目的缩小比例\",{\"1\":{\"115\":1}}],[\"shrink属性\",{\"0\":{\"115\":1}}],[\"shrink\",{\"1\":{\"112\":1,\"115\":1,\"117\":2}}],[\"show=\",{\"1\":{\"44\":1,\"87\":1}}],[\"showlog\",{\"1\":{\"41\":2}}],[\"showtel\",{\"1\":{\"19\":2,\"24\":3,\"27\":2,\"28\":2}}],[\"shallowreadonlycopy\",{\"1\":{\"82\":1}}],[\"shallowreadonly\",{\"0\":{\"80\":1},\"1\":{\"82\":1}}],[\"shallowreactive\",{\"0\":{\"76\":1},\"1\":{\"78\":1,\"79\":1}}],[\"shallowref\",{\"0\":{\"76\":1},\"1\":{\"77\":1,\"79\":1}}],[\"shadow\",{\"1\":{\"18\":1}}],[\"shaking\",{\"1\":{\"14\":1}}],[\"sh\",{\"1\":{\"9\":1}}],[\"拥抱\",{\"0\":{\"15\":1}}],[\"2fr\",{\"1\":{\"130\":1}}],[\"232\",{\"1\":{\"73\":1}}],[\"200\",{\"1\":{\"71\":1}}],[\"20\",{\"1\":{\"40\":2,\"42\":1}}],[\"20px\",{\"1\":{\"18\":1,\"130\":1,\"131\":4}}],[\"2023\",{\"1\":{\"12\":1}}],[\"2020\",{\"1\":{\"12\":1}}],[\"2\",{\"0\":{\"14\":1,\"17\":1,\"18\":2,\"19\":1,\"23\":1,\"46\":1,\"60\":1,\"68\":1,\"74\":1,\"80\":1,\"88\":1,\"107\":1,\"114\":1,\"124\":1,\"125\":2,\"126\":1,\"127\":1,\"130\":1,\"140\":1},\"1\":{\"17\":1,\"18\":1,\"54\":1,\"55\":1,\"71\":1,\"107\":1,\"130\":2,\"139\":4,\"140\":4,\"145\":1}}],[\"性能的提升\",{\"0\":{\"13\":1}}],[\"30\",{\"1\":{\"130\":1}}],[\"3000\",{\"1\":{\"69\":1}}],[\"300+贡献者\",{\"1\":{\"12\":1}}],[\"3列\",{\"1\":{\"130\":1,\"136\":1}}],[\"33\",{\"1\":{\"130\":16}}],[\"3行3列会产生9个单元格\",{\"1\":{\"126\":1}}],[\"3\",{\"0\":{\"15\":1,\"19\":1,\"20\":1,\"23\":1,\"28\":2,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"47\":1,\"61\":1,\"69\":1,\"75\":1,\"83\":1,\"89\":1,\"106\":1,\"107\":1,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"115\":1,\"126\":1,\"129\":1,\"130\":1,\"131\":2,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"141\":1},\"1\":{\"12\":2,\"17\":1,\"55\":1,\"71\":1,\"107\":1,\"130\":3,\"139\":1,\"140\":4,\"141\":2,\"145\":1,\"158\":1}}],[\"截止\",{\"1\":{\"12\":1}}],[\"vertical\",{\"1\":{\"129\":1}}],[\"version\",{\"1\":{\"17\":2,\"145\":1}}],[\"view>\",{\"1\":{\"51\":1}}],[\"views文件夹\",{\"1\":{\"47\":1}}],[\"vitest\",{\"1\":{\"18\":1}}],[\"vite构建对比图如下\",{\"1\":{\"18\":1}}],[\"vite的优势如下\",{\"1\":{\"18\":1}}],[\"vitejs\",{\"1\":{\"18\":1}}],[\"vite\",{\"0\":{\"18\":1},\"1\":{\"17\":1,\"18\":3,\"27\":4}}],[\"val\",{\"1\":{\"33\":4}}],[\"value事件\",{\"1\":{\"70\":1}}],[\"value=\",{\"1\":{\"70\":4}}],[\"value作为props传给detail组件\",{\"1\":{\"55\":2}}],[\"value是响应式的\",{\"1\":{\"28\":2}}],[\"value\",{\"1\":{\"28\":8,\"30\":3,\"31\":2,\"32\":3,\"33\":7,\"35\":1,\"36\":3,\"40\":8,\"41\":5,\"43\":1,\"44\":2,\"62\":5,\"65\":1,\"67\":3,\"69\":7,\"70\":5,\"71\":3,\"73\":3,\"86\":2}}],[\"v\",{\"0\":{\"70\":1},\"1\":{\"16\":1,\"29\":1,\"30\":1,\"33\":2,\"42\":1,\"44\":2,\"51\":1,\"61\":1,\"70\":7,\"71\":2,\"73\":1,\"74\":2,\"75\":3,\"87\":1,\"88\":2,\"90\":9,\"98\":1}}],[\"v3\",{\"1\":{\"12\":1}}],[\"vuex换成了pinia\",{\"1\":{\"66\":1}}],[\"vue代码如下\",{\"1\":{\"46\":1}}],[\"vue组件实例在创建时要经历一系列的初始化步骤\",{\"1\":{\"43\":1}}],[\"vue中有onlaunch方法\",{\"1\":{\"99\":1}}],[\"vue中代码\",{\"1\":{\"42\":2}}],[\"vue中要使用defineexpose暴露内容\",{\"1\":{\"41\":1}}],[\"vuesetupextend\",{\"1\":{\"27\":2}}],[\"vue2的生命周期\",{\"1\":{\"43\":1}}],[\"vue2的api设计是options\",{\"1\":{\"20\":1}}],[\"vue2\",{\"1\":{\"26\":1}}],[\"vuejs\",{\"1\":{\"12\":1}}],[\"vue\",{\"0\":{\"17\":1},\"1\":{\"12\":1,\"17\":9,\"18\":2,\"27\":2,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":5,\"42\":3,\"43\":1,\"44\":3,\"46\":5,\"51\":1,\"53\":1,\"54\":1,\"57\":1,\"60\":2,\"66\":1,\"67\":3,\"69\":1,\"71\":3,\"73\":2,\"75\":1,\"84\":2,\"86\":1,\"88\":2,\"158\":1}}],[\"vue3组件通信和vue2的区别\",{\"1\":{\"66\":1}}],[\"vue3中要使用vue\",{\"1\":{\"46\":1}}],[\"vue3中的watch只能监视以下四种数据\",{\"1\":{\"34\":1}}],[\"vue3写法\",{\"1\":{\"43\":1}}],[\"vue3的生命周期\",{\"1\":{\"43\":1}}],[\"vue3的api设计是composition\",{\"1\":{\"20\":1}}],[\"vue3向下兼容vue2语法\",{\"1\":{\"19\":1}}],[\"vue3可以更好的支持typescript\",{\"1\":{\"15\":1}}],[\"vue3\",{\"0\":{\"12\":1},\"1\":{\"18\":2},\"2\":{\"92\":1}}],[\"vuepress\",{\"1\":{\"6\":1}}],[\"plus广告\",{\"1\":{\"158\":1}}],[\"plus去除广告弹窗\",{\"1\":{\"158\":1}}],[\"plus\",{\"1\":{\"158\":2}}],[\"plugins\",{\"1\":{\"27\":1}}],[\"plugin\",{\"1\":{\"27\":2}}],[\"place\",{\"0\":{\"134\":1,\"135\":1,\"142\":1},\"1\":{\"134\":3,\"135\":3,\"142\":4}}],[\"position属性\",{\"1\":{\"102\":1}}],[\"p><\",{\"1\":{\"124\":3}}],[\"p>\",{\"1\":{\"87\":1}}],[\"png\",{\"1\":{\"73\":1}}],[\"pubsub\",{\"1\":{\"69\":1}}],[\"push是追加历史记录\",{\"1\":{\"56\":1}}],[\"push\",{\"1\":{\"44\":1,\"57\":1}}],[\"pembroke\",{\"1\":{\"44\":1}}],[\"persons\",{\"1\":{\"42\":6}}],[\"personinter\",{\"1\":{\"42\":2}}],[\"person变化了\",{\"1\":{\"36\":1,\"37\":1}}],[\"person\",{\"1\":{\"19\":1,\"24\":2,\"27\":3,\"28\":2,\"29\":2,\"30\":2,\"32\":8,\"33\":1,\"35\":2,\"36\":9,\"37\":9,\"38\":16,\"39\":15,\"40\":2,\"41\":5,\"42\":5,\"43\":2,\"84\":3}}],[\"paging\",{\"1\":{\"158\":1}}],[\"pagey\",{\"1\":{\"68\":1}}],[\"pagex\",{\"1\":{\"68\":1}}],[\"pages\",{\"0\":{\"162\":1},\"1\":{\"46\":3}}],[\"page\",{\"1\":{\"18\":1}}],[\"packages\",{\"1\":{\"145\":1}}],[\"password\",{\"1\":{\"70\":1}}],[\"parse\",{\"1\":{\"66\":1}}],[\"parmas\",{\"1\":{\"57\":1}}],[\"params\",{\"0\":{\"54\":1},\"1\":{\"54\":2,\"75\":4}}],[\"path\",{\"1\":{\"46\":2,\"49\":1,\"50\":3,\"51\":6,\"53\":1,\"55\":1,\"58\":1,\"145\":1}}],[\"padding\",{\"1\":{\"18\":1}}],[\"pinia提供的storetorefs只会将数据做转换\",{\"1\":{\"63\":1}}],[\"pinia\",{\"0\":{\"60\":1},\"1\":{\"18\":1,\"60\":4,\"61\":2,\"62\":1,\"63\":1,\"64\":1,\"66\":1,\"73\":1}}],[\"piece\",{\"1\":{\"12\":2}}],[\"proxy\",{\"1\":{\"145\":1}}],[\"propert\",{\"1\":{\"90\":1}}],[\"props是使用频率最高的一种通信方式\",{\"1\":{\"67\":1}}],[\"props的函数写法\",{\"1\":{\"55\":1}}],[\"props的布尔值写法\",{\"1\":{\"55\":1}}],[\"props的对象写法\",{\"1\":{\"55\":1}}],[\"props\",{\"0\":{\"42\":1,\"55\":1,\"67\":1},\"1\":{\"42\":3,\"55\":3,\"71\":1}}],[\"provide\",{\"0\":{\"73\":1},\"1\":{\"73\":3}}],[\"project\",{\"0\":{\"165\":1},\"1\":{\"17\":1,\"18\":1}}],[\"price\",{\"1\":{\"29\":3,\"30\":3,\"73\":2}}],[\"prettier\",{\"1\":{\"18\":1}}],[\"pr\",{\"1\":{\"12\":1}}],[\"r4\",{\"1\":{\"130\":1}}],[\"r3\",{\"1\":{\"130\":1}}],[\"r2\",{\"1\":{\"130\":1}}],[\"r1\",{\"1\":{\"130\":1}}],[\"root\",{\"1\":{\"145\":1}}],[\"row属性是grid\",{\"1\":{\"140\":1}}],[\"row情况下\",{\"1\":{\"133\":1}}],[\"rows和grid\",{\"1\":{\"137\":1}}],[\"rows完全相同\",{\"1\":{\"136\":1}}],[\"rows属性用来设置\",{\"1\":{\"136\":1}}],[\"rows属性里面\",{\"1\":{\"130\":1}}],[\"rows属性定义每一行的行高\",{\"1\":{\"130\":1}}],[\"rows\",{\"0\":{\"130\":1,\"136\":1},\"1\":{\"130\":4,\"132\":1,\"136\":2,\"137\":2}}],[\"row\",{\"0\":{\"131\":1,\"139\":2,\"140\":1},\"1\":{\"106\":4,\"125\":1,\"130\":1,\"131\":6,\"133\":1,\"139\":5,\"140\":9,\"141\":2}}],[\"route\",{\"1\":{\"53\":2,\"54\":2,\"55\":2,\"57\":3}}],[\"routes\",{\"1\":{\"46\":1,\"50\":1,\"51\":1}}],[\"routerview\",{\"1\":{\"46\":1}}],[\"routerview>\",{\"1\":{\"46\":1}}],[\"routerlink\",{\"1\":{\"46\":1}}],[\"routerlink>\",{\"1\":{\"46\":3,\"51\":1,\"53\":1,\"54\":2,\"56\":1}}],[\"router的最新版本\",{\"1\":{\"46\":1}}],[\"router\",{\"1\":{\"18\":1,\"46\":7,\"48\":2,\"49\":2,\"50\":2,\"51\":4,\"53\":2,\"54\":1,\"57\":4}}],[\"rawperson\",{\"1\":{\"84\":2}}],[\"rand\",{\"1\":{\"66\":1}}],[\"random\",{\"1\":{\"44\":1}}],[\"radius\",{\"1\":{\"18\":1}}],[\"reinstall\",{\"1\":{\"145\":1}}],[\"repeat\",{\"1\":{\"130\":8}}],[\"replace是替换当前记录\",{\"1\":{\"56\":1}}],[\"replace\",{\"0\":{\"56\":1},\"1\":{\"56\":1,\"57\":1}}],[\"reverse\",{\"1\":{\"106\":4,\"107\":2}}],[\"remote\",{\"1\":{\"98\":1}}],[\"readonlycopy\",{\"1\":{\"81\":1}}],[\"readonly\",{\"0\":{\"80\":1},\"1\":{\"81\":1,\"82\":1}}],[\"reactive<string\",{\"1\":{\"44\":1}}],[\"reactive<persons>\",{\"1\":{\"42\":1}}],[\"reactive定义的数据\",{\"1\":{\"34\":1}}],[\"reactive定义的响应式数据是\",{\"1\":{\"29\":1}}],[\"reactive都可以\",{\"1\":{\"31\":1}}],[\"reactive重新分配一个新对象\",{\"1\":{\"31\":1}}],[\"reactive用来定义\",{\"1\":{\"31\":1}}],[\"reactive\",{\"0\":{\"29\":1,\"31\":1},\"1\":{\"29\":5,\"32\":2,\"37\":5,\"38\":3,\"39\":2,\"42\":1,\"44\":1,\"66\":2,\"73\":2,\"75\":2,\"81\":1,\"82\":1,\"84\":3,\"85\":1}}],[\"redirect\",{\"1\":{\"58\":1}}],[\"ren\",{\"1\":{\"41\":4}}],[\"ref=\",{\"1\":{\"41\":5}}],[\"ref定义的数据\",{\"1\":{\"34\":1}}],[\"ref创建的变量必须使用\",{\"1\":{\"31\":1}}],[\"ref用来定义\",{\"1\":{\"31\":1}}],[\"ref对象的value属性是响应式的\",{\"1\":{\"28\":1}}],[\"ref\",{\"0\":{\"28\":1,\"30\":1,\"31\":1,\"41\":1},\"1\":{\"28\":6,\"30\":4,\"31\":1,\"32\":1,\"33\":3,\"35\":4,\"36\":4,\"38\":1,\"40\":3,\"41\":9,\"43\":2,\"44\":2,\"67\":5,\"71\":5,\"73\":2}}],[\"ref与reactive\",{\"1\":{\"16\":1}}],[\"return\",{\"1\":{\"19\":1,\"24\":1,\"25\":1,\"33\":2,\"44\":2,\"55\":1,\"61\":2,\"64\":2,\"66\":1,\"86\":3}}],[\"release\",{\"1\":{\"12\":1}}],[\"rfc\",{\"1\":{\"12\":1}}],[\"run\",{\"1\":{\"8\":1,\"17\":1}}],[\"404\",{\"1\":{\"161\":1}}],[\"40+个\",{\"1\":{\"12\":1}}],[\"4号项目在第二列\",{\"1\":{\"133\":1}}],[\"44\",{\"1\":{\"73\":1}}],[\"49\",{\"1\":{\"73\":1}}],[\"4\",{\"0\":{\"16\":1,\"29\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"62\":1,\"70\":1,\"86\":1,\"90\":1,\"109\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":2,\"117\":1,\"118\":1,\"127\":1,\"132\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":2},\"1\":{\"12\":1,\"71\":1,\"127\":2,\"130\":1,\"139\":2,\"145\":1}}],[\"4800+次提交\",{\"1\":{\"12\":1}}],[\"经历了\",{\"1\":{\"12\":1}}],[\"日\",{\"1\":{\"12\":1}}],[\"1占据左上角第一个网格\",{\"1\":{\"140\":1}}],[\"1占据的区域\",{\"1\":{\"140\":1}}],[\"1占据第一行\",{\"1\":{\"140\":1}}],[\"1号项目位于e区域\",{\"1\":{\"141\":1}}],[\"1号项目的左边框距离右边框跨越2个网格\",{\"1\":{\"139\":1}}],[\"1号项目的左边框是第二根垂直网格线\",{\"1\":{\"139\":1}}],[\"1号项目后面的位置是空的\",{\"1\":{\"133\":1}}],[\"150px\",{\"1\":{\"130\":1}}],[\"1fr\",{\"1\":{\"130\":8}}],[\"1根垂直网格线\",{\"1\":{\"127\":1}}],[\"1根水平网格线\",{\"1\":{\"127\":1}}],[\"1<\",{\"1\":{\"44\":1}}],[\"142790425\",{\"1\":{\"151\":1}}],[\"14\",{\"0\":{\"44\":1},\"1\":{\"145\":1}}],[\"13\",{\"0\":{\"43\":1},\"1\":{\"145\":1}}],[\"13888888888\",{\"1\":{\"19\":1,\"24\":1,\"27\":1,\"28\":1}}],[\"12\",{\"0\":{\"42\":1,\"58\":1},\"1\":{\"130\":1,\"145\":1}}],[\"112\",{\"1\":{\"73\":1}}],[\"11\",{\"0\":{\"41\":1,\"57\":1},\"1\":{\"145\":1}}],[\"1\",{\"0\":{\"13\":2,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"20\":1,\"45\":1,\"59\":1,\"67\":1,\"76\":1,\"87\":1,\"106\":1,\"113\":1,\"124\":1,\"129\":1,\"139\":1},\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"43\":1,\"44\":2,\"54\":1,\"55\":1,\"62\":1,\"64\":1,\"71\":1,\"73\":3,\"107\":1,\"115\":1,\"117\":3,\"130\":1,\"139\":6,\"140\":15,\"141\":4,\"142\":1,\"145\":1}}],[\"100px\",{\"1\":{\"130\":16,\"132\":6,\"136\":6}}],[\"1000\",{\"1\":{\"69\":1}}],[\"100\",{\"1\":{\"29\":1,\"30\":1,\"40\":1,\"71\":1,\"73\":2}}],[\"10px\",{\"1\":{\"18\":2}}],[\"10\",{\"0\":{\"40\":1,\"56\":1},\"1\":{\"12\":1,\"29\":1,\"30\":1,\"35\":1,\"40\":1,\"62\":1,\"64\":1,\"145\":1}}],[\"18\",{\"1\":{\"12\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":2,\"84\":1}}],[\"19\",{\"1\":{\"7\":1,\"42\":1}}],[\"月\",{\"1\":{\"12\":2}}],[\"9号项目指定在第5行\",{\"1\":{\"136\":1}}],[\"90\",{\"1\":{\"36\":1}}],[\"999\",{\"1\":{\"29\":1,\"30\":1,\"62\":1}}],[\"9\",{\"0\":{\"34\":1,\"55\":1,\"137\":1},\"1\":{\"12\":1,\"73\":1,\"145\":1}}],[\"年\",{\"1\":{\"12\":2}}],[\"文档\",{\"2\":{\"11\":1,\"92\":1,\"96\":1,\"120\":1,\"144\":1,\"147\":1,\"150\":1,\"153\":1}}],[\"教程\",{\"2\":{\"10\":1,\"91\":1,\"95\":1,\"119\":1,\"143\":1,\"146\":1,\"149\":1,\"152\":1}}],[\"输入\",{\"1\":{\"9\":1}}],[\"blog\",{\"1\":{\"151\":1}}],[\"block\",{\"1\":{\"129\":1}}],[\"b03532\",{\"1\":{\"140\":2}}],[\"between\",{\"1\":{\"109\":2,\"111\":2,\"135\":3}}],[\"beforedestroy\",{\"1\":{\"43\":1}}],[\"beforeupdate\",{\"1\":{\"43\":1}}],[\"beforemount\",{\"1\":{\"43\":1}}],[\"beforecreate\",{\"1\":{\"43\":1}}],[\"b=\",{\"1\":{\"71\":1}}],[\"b=2\",{\"1\":{\"53\":1}}],[\"bind\",{\"1\":{\"90\":1}}],[\"bind=\",{\"1\":{\"71\":2}}],[\"bigsum\",{\"1\":{\"64\":2}}],[\"bilibiligiteegithub微信公众平台蓝湖gitee掘金iconfont魔戒比特虫\",{\"1\":{\"3\":1}}],[\"breed\",{\"1\":{\"44\":1}}],[\"brand\",{\"1\":{\"29\":2,\"30\":2,\"73\":1}}],[\"b\",{\"1\":{\"29\":3,\"30\":3,\"37\":4,\"55\":1,\"71\":4,\"132\":5}}],[\"button>\",{\"1\":{\"19\":3,\"24\":3,\"27\":3,\"28\":3,\"29\":3,\"30\":3,\"32\":3,\"33\":1,\"35\":1,\"36\":3,\"37\":4,\"38\":5,\"39\":5,\"40\":2,\"41\":2,\"43\":1,\"44\":3,\"67\":1,\"68\":1,\"71\":1,\"73\":3,\"87\":1}}],[\"body\",{\"1\":{\"87\":1}}],[\"border\",{\"1\":{\"18\":1}}],[\"box\",{\"1\":{\"18\":1,\"70\":2,\"103\":4,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1}}],[\"basis的简写\",{\"1\":{\"117\":1}}],[\"basis属性定义了在分配多余空间之前\",{\"1\":{\"116\":1}}],[\"basis属性\",{\"0\":{\"116\":1}}],[\"basis\",{\"1\":{\"112\":1,\"116\":1,\"117\":1}}],[\"baseline\",{\"1\":{\"110\":2,\"118\":1}}],[\"bash\",{\"1\":{\"9\":1}}],[\"background\",{\"1\":{\"18\":1,\"140\":2}}],[\"draggable\",{\"1\":{\"158\":1}}],[\"div\",{\"1\":{\"129\":2}}],[\"div>\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"46\":3,\"51\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":3,\"74\":1,\"75\":1,\"87\":1,\"88\":1,\"124\":4}}],[\"direction>\",{\"1\":{\"108\":1}}],[\"direction属性和flex\",{\"1\":{\"108\":1}}],[\"direction属性决定主轴的方向\",{\"1\":{\"106\":1}}],[\"direction属性\",{\"0\":{\"106\":1}}],[\"direction\",{\"1\":{\"105\":1,\"106\":1}}],[\"directive\",{\"1\":{\"89\":1}}],[\"display\",{\"0\":{\"129\":1},\"1\":{\"102\":1,\"103\":4,\"129\":5,\"130\":8,\"132\":1,\"136\":1}}],[\"d=\",{\"1\":{\"71\":1}}],[\"dog\",{\"1\":{\"44\":1}}],[\"doglist\",{\"1\":{\"44\":6}}],[\"document\",{\"1\":{\"40\":1,\"41\":1}}],[\"docs\",{\"1\":{\"8\":1}}],[\"d\",{\"1\":{\"27\":1,\"29\":3,\"30\":3,\"71\":4,\"132\":2}}],[\"ddd\",{\"1\":{\"18\":1}}],[\"data\",{\"1\":{\"16\":1,\"19\":1,\"21\":2,\"26\":2,\"44\":2,\"61\":1,\"66\":1}}],[\"dense\",{\"1\":{\"133\":5,\"139\":1}}],[\"dense和column\",{\"1\":{\"133\":1,\"139\":1}}],[\"delay\",{\"1\":{\"86\":2}}],[\"details\",{\"1\":{\"151\":1}}],[\"detail\",{\"1\":{\"50\":1,\"51\":7,\"53\":2,\"54\":1,\"55\":2}}],[\"decrement\",{\"1\":{\"44\":4,\"62\":1,\"64\":1}}],[\"destroyed\",{\"1\":{\"43\":1}}],[\"demo\",{\"1\":{\"40\":2}}],[\"deep\",{\"1\":{\"36\":2,\"38\":1,\"39\":1}}],[\"defineasynccomponent\",{\"1\":{\"88\":2}}],[\"defineemits\",{\"1\":{\"70\":2}}],[\"defineexpose\",{\"1\":{\"41\":2}}],[\"definestore\",{\"1\":{\"61\":4,\"62\":2,\"64\":2,\"66\":2}}],[\"definecomponent\",{\"1\":{\"44\":2}}],[\"defineconfig\",{\"1\":{\"27\":2}}],[\"defineprops<\",{\"1\":{\"42\":2}}],[\"defineprops\",{\"1\":{\"42\":2,\"67\":1,\"70\":2,\"71\":1}}],[\"default>\",{\"1\":{\"88\":1}}],[\"default=\",{\"1\":{\"75\":2}}],[\"default\",{\"1\":{\"18\":1,\"19\":1,\"24\":1,\"27\":2,\"44\":3,\"46\":1,\"51\":1,\"69\":1,\"73\":1,\"86\":1,\"114\":1,\"115\":1,\"116\":1}}],[\"deploy\",{\"1\":{\"9\":1}}],[\"development\",{\"1\":{\"18\":1}}],[\"dev\",{\"1\":{\"8\":1}}],[\"net\",{\"1\":{\"151\":1}}],[\"newslist\",{\"1\":{\"51\":1}}],[\"news\",{\"1\":{\"46\":3,\"50\":3,\"51\":11,\"53\":6,\"54\":6}}],[\"newheight\",{\"1\":{\"40\":2}}],[\"newtemp\",{\"1\":{\"40\":2}}],[\"newvalue\",{\"1\":{\"35\":3,\"36\":4,\"37\":4,\"38\":4,\"39\":2}}],[\"n行有n\",{\"1\":{\"127\":1}}],[\"n行和m列会产生n\",{\"1\":{\"126\":1}}],[\"n\",{\"1\":{\"62\":1}}],[\"nanoid\",{\"1\":{\"66\":3}}],[\"nav>\",{\"1\":{\"51\":1}}],[\"navigate\",{\"1\":{\"46\":1}}],[\"name变化了\",{\"1\":{\"38\":1}}],[\"name和age是一个refimpl的实例对象\",{\"1\":{\"28\":1}}],[\"name不是响应式的\",{\"1\":{\"28\":2}}],[\"name=\",{\"1\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"32\":1,\"33\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":3,\"42\":2,\"43\":1,\"46\":1,\"61\":2,\"63\":1,\"67\":2,\"70\":2,\"71\":3,\"73\":1,\"74\":2,\"75\":1}}],[\"name\",{\"1\":{\"18\":2,\"19\":4,\"24\":6,\"27\":4,\"28\":8,\"29\":5,\"30\":5,\"32\":4,\"36\":4,\"37\":4,\"38\":4,\"39\":4,\"41\":3,\"42\":6,\"44\":1,\"50\":4,\"51\":5,\"53\":1,\"54\":1,\"55\":1,\"73\":1,\"74\":1,\"75\":5,\"84\":5,\"85\":4}}],[\"number\",{\"1\":{\"42\":1,\"62\":2,\"64\":1,\"73\":1,\"86\":2}}],[\"not\",{\"1\":{\"161\":1}}],[\"none\",{\"1\":{\"117\":2}}],[\"nowrap\",{\"1\":{\"107\":2,\"108\":1}}],[\"no\",{\"1\":{\"18\":6}}],[\"npm\",{\"1\":{\"8\":1,\"17\":2,\"18\":1,\"27\":1,\"60\":1,\"69\":1}}],[\"nvm指令\",{\"0\":{\"145\":1}}],[\"nvm\",{\"1\":{\"7\":2,\"145\":14},\"2\":{\"147\":1}}],[\"项目接口文档\",{\"1\":{\"157\":1}}],[\"项目item\",{\"1\":{\"140\":3}}],[\"项目属性\",{\"0\":{\"138\":1}}],[\"项目与容器边框之间也是同样长度的间隔\",{\"1\":{\"135\":1}}],[\"项目与容器边框之间没有间隔\",{\"1\":{\"135\":1}}],[\"项目与项目的间隔相等\",{\"1\":{\"135\":2}}],[\"项目大小没有指定时\",{\"1\":{\"135\":1}}],[\"项目只能是容器的顶层子元素\",{\"1\":{\"124\":1}}],[\"项目所在\",{\"1\":{\"122\":1}}],[\"项目占据的主轴空间\",{\"1\":{\"116\":1}}],[\"项目的位置是可以指定的\",{\"1\":{\"139\":1}}],[\"项目的属性\",{\"0\":{\"112\":1}}],[\"项目的第一行文字的基线对齐\",{\"1\":{\"110\":1}}],[\"项目之间的间隔比项目与容器边框的间隔大一倍\",{\"1\":{\"135\":1}}],[\"项目之间的间隔比项目与边框的间隔大一倍\",{\"1\":{\"109\":1}}],[\"项目之间的间隔都相等\",{\"1\":{\"109\":1}}],[\"项目都排在一条线\",{\"1\":{\"107\":1}}],[\"项目默认沿主轴排列\",{\"1\":{\"104\":1}}],[\"项目\",{\"1\":{\"104\":2,\"122\":1,\"124\":1,\"129\":1},\"2\":{\"159\":1}}],[\"项目中\",{\"1\":{\"18\":1}}],[\"项目更新\",{\"0\":{\"9\":1}}],[\"项目启动\",{\"0\":{\"8\":1}}],[\"项目node版本\",{\"0\":{\"7\":1}}],[\"版本号\",{\"1\":{\"7\":1,\"145\":3}}],[\"切换到指定版本\",{\"1\":{\"7\":1,\"145\":1}}],[\"01\",{\"0\":{\"94\":1}}],[\"001\",{\"1\":{\"54\":1}}],[\"0以上\",{\"1\":{\"17\":1}}],[\"0版本\",{\"1\":{\"12\":1}}],[\"0\",{\"1\":{\"7\":1,\"12\":2,\"18\":2,\"29\":1,\"30\":1,\"33\":1,\"35\":1,\"40\":2,\"43\":1,\"44\":1,\"114\":1,\"117\":2,\"158\":1}}],[\"博客\",{\"0\":{\"6\":1}}],[\"外链\",{\"2\":{\"5\":1}}],[\"链接\",{\"2\":{\"4\":1}}],[\"好用的网站与工具\",{\"0\":{\"3\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,Mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=St[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
